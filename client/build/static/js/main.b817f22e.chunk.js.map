{"version":3,"sources":["images/speedtest_sample.jpg","images/computer_specs_sample.jpg","state/reducers/alertReducer.js","state/reducers/userReducer.js","state/reducers/resumeReducer.js","state/reducers/candidateReducer.js","state/reducers/filterReducer.js","state/reducers/employerReducer.js","state/reducers/jobReducer.js","state/reducers/index.js","state/actions/types.js","store.js","components/ScrollToTop.js","components/TalkRecruiter.js","utils/setAuthToken.js","state/actions/userAction.js","layouts/Header.jsx","layouts/Footer.jsx","list/PeopleWeServe.js","list/PopularJobs.js","list/CountriesWeServe.js","pages/Home.jsx","pages/Pricing.jsx","state/actions/filterAction.js","pages/ViewCandidates/Filter.jsx","list/Availability.js","list/Specialty.js","list/Software.js","state/actions/candidateAction.js","state/actions/alertAction.js","pages/ViewCandidates/ViewResume.jsx","pages/ViewCandidates/PaginationLink.jsx","pages/ViewCandidates/TopVerifiedCandidates.jsx","pages/ViewCandidates/ShortlistedCandidates.jsx","pages/ViewCandidates.jsx","components/BookInterview.js","utils/useUnsavedChangesWarning.js","pages/CreateResume/Step1.jsx","list/Country.js","pages/CreateResume/Step2.jsx","state/actions/resumeAction.js","pages/CreateResume/InternetResultModal.jsx","pages/CreateResume/ComputerSpecsModal.jsx","pages/CreateResume/Step3.jsx","list/Workspace.js","list/InternetType.js","list/HardwareType.js","utils/useWindowSize.js","pages/CreateResume/EducationItem.jsx","pages/CreateResume/Step4.jsx","list/Year.js","pages/CreateResume/WorkHistoryItem.jsx","pages/CreateResume/Step5.jsx","list/Month.js","pages/CreateResume/SpecialtyItem.jsx","pages/CreateResume/SpecialtySelected.jsx","pages/CreateResume/SoftwareItem.jsx","pages/CreateResume/SoftwareSelected.jsx","pages/CreateResume/UploadWorkImageModal.jsx","pages/CreateResume/UploadWorkDocumentModal.jsx","pages/CreateResume/UploadWorkItem.jsx","pages/CreateResume/Step6.jsx","pages/CreateResume.jsx","routing/CreateResumeRoute.jsx","layouts/Alert.jsx","state/actions/employerAction.js","components/Verify.js","pages/NotFound.jsx","state/actions/jobAction.js","pages/Dashboard/Filter.jsx","pages/Dashboard/ModalActionResume.jsx","pages/Dashboard/ViewImage.jsx","pages/Dashboard/ViewSampleWorkImage.jsx","pages/Dashboard/ViewSampleWorkDocument.jsx","pages/Dashboard/ViewResume.jsx","pages/Dashboard/PaginationLink.jsx","pages/Dashboard/NewApplicants.jsx","pages/Dashboard/ApprovedApplicants.jsx","pages/Dashboard/RejectedApplicants.jsx","pages/Dashboard/ModalActionJob.jsx","pages/Dashboard/ViewDetails.jsx","pages/Dashboard/NewJobs.jsx","pages/Dashboard/ApprovedJobs.jsx","pages/Dashboard/RejectedJobs.jsx","pages/Dashboard.jsx","pages/Login.jsx","components/LoadUser.js","routing/PrivateRoute.jsx","components/VerifyDashboard.js","components/VerifyViewCandidates.js","routing/DraftJobRoute.jsx","pages/DraftJob/SpecialtyItem.jsx","pages/DraftJob/Specialty.jsx","pages/DraftJob/Software.jsx","pages/DraftJob/Step1.jsx","pages/DraftJob/Step2.jsx","pages/DraftJob/SummaryModal.jsx","pages/DraftJob/Step3.jsx","pages/DraftJob.jsx","pages/AdminSignup.jsx","pages/Employer/Step1.jsx","pages/Employer/Step2.jsx","pages/Employer/Step3.jsx","pages/Signup.jsx","App.js","serviceWorker.js","index.js","images/draftsource_logo.svg"],"names":["module","exports","initialState","redirect","msg","user","error","info","resume","candidates","next","previous","total","shortlist","shortlistedInfo","filter","employer","step","success","jobs","job","details","combineReducers","alertState","state","action","type","payload","userState","localStorage","setItem","token","removeItem","resumeState","candidateState","id","filterState","employerState","jobState","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","ScrollToTop","useLocation","pathname","search","useEffect","window","scroll","top","left","behavior","scrollTo","talkRecruiter","openPopupWidget","url","setAuthToken","axios","defaults","headers","common","addUser","dispatch","a","config","post","res","data","response","clearUser","clearError","loadUser","get","connect","logoutUser","history","useHistory","Navbar","bg","expand","Brand","as","NavLink","to","src","draftsourceLogo","className","alt","height","Toggle","aria-controls","Collapse","Nav","Link","onClick","push","Footer","Container","Row","Col","lg","md","sm","map","e","i","key","href","target","rel","Home","span","offset","Pricing","style","fontWeight","fontSize","marginLeft","marginRight","addFilter","updateFilter","removeFilter","loadData","queryParams","URLSearchParams","location","newUrl","URL","useState","availabilityCat","specialtyCat","softwareCat","show","setShow","onShow","preventDefault","name","onChange","value","specialty","software","undefined","includes","x","newData","oldData","split","searchParams","set","length","join","delete","availability","newFilter","checked","htmlFor","newApplicants","getSearch","rejectedApplicants","approvedApplicants","viewResume","clearResume","viewCandidates","addCandidate","removeCandidate","getShortlisted","shortlisted","setAlert","isShow","isHide","shortlistView","setShortlisted","initialData","_id","firstName","lastName","resumeImage","city","expectedSalary","currency","uploadWork","images","documents","workHistory","education","workspace","internetType","hardwareType","brandName","internetResult","computerSpecs","rating","setData","handleClose","aboutYourself","Modal","onHide","backdrop","keyboard","size","Body","aria-hidden","controls","removeShortlist","file","title","skin","company","monthStarted","yearStarted","monthEnded","yearEnded","description","about","choices","degree","school","course","monthYearStarted","monthYearGraduated","scope","viewImage","page","setPage","limit","setLimit","pageNumbers","Math","ceil","parseInt","previousLabel","nextLabel","same","breakLabel","breakClassName","breakLinkClassName","pageCount","pageClassName","pageLinkClassName","previousClassName","previousLinkClassName","nextLinkClassName","nextClassName","marginPagesDisplayed","pageRangeDisplayed","containerClassName","subContainerClassName","activeClassName","onPageChange","number","selected","forcePage","activeMiniSlide","setActiveMiniSlide","seeResume","setSeeResume","viewBy","params","setParams","miniSlideSelect","selectedIndex","placeholder","loadCandidate","recruitmentsComment","Carousel","activeIndex","interval","onSelect","indicators","nextIcon","prevIcon","Item","color","element","index","menu","useParams","useUnsavedChangesWarning","isDirty","setDirty","message","setMessage","onbeforeunload","when","Prompt","setPristine","initialInfo","email","cellphone","country","facebook","setInfo","load","setLoad","clear","JSON","stringify","onSubmit","property","uploadFile","upload","setUpload","submit","setSubmit","files","createObjectURL","backgroundImage","accept","addResume","InternetResultModal","uploadModal","useCallback","aria-labelledby","centered","Header","closeButton","Title","image","Button","variant","ComputerSpecsModal","modal","setModal","useWindowSize","width","windowSize","setWindowSize","handleResize","innerWidth","innerHeight","addEventListener","removeEventListener","EducationItem","editEdu","deleteEdu","initialEducation","setEducation","currentEdu","setCurrentEdu","disableInput","setDisableInput","educationItem","setEducationItem","uploadAudio","setUploadAudio","eduItem","document","querySelector","copy","Array","from","querySelectorAll","forEach","input","clearCurrentEdu","indexOf","clearEducationItem","classList","contains","visibility","disabled","marginBottom","splice","marginTop","edu","yearList","years","year","Date","getFullYear","WorkHistoryItem","editWork","deleteWork","whiteSpace","defaultYear","initialWorkHistory","setWorkHistory","workHistoryItem","setWorkHistoryItem","current","setCurrent","clearWorkHistoryItem","onEdit","onDelete","cols","rows","work","SpecialtyItem","select","SpecialtySelected","onSpecialtyClose","SoftwareItem","SoftwareSelected","onSoftwareClose","titleModal","note","caption","uploadData","updateData","fileBg","setFileBg","y","crop","setCrop","zoom","setZoom","onUploadWorkImage","aspect","onCropChange","onZoomChange","onUploadWorkDocument","UploadWorkItem","isEdit","isDelete","bgImage","setBgImage","styles","submitResume","check","otherSpecialtyRef","useRef","otherSoftwareRef","initialUploadModal","setSpecialty","setSoftware","setUploadWork","uploadWorkImageModal","setUploadWorkImageModal","uploadWorkDocumentModal","setUploadWorkDocumentModal","onSelectSpecialty","find","el","textContent","remove","add","onSelectSoftware","item","onUploadWorkImageModal","onUploadWorkDocumentModal","onEditWorkImage","onEditWorkDocument","onDeleteWorkImage","onDeleteWorkDocument","newUpdate","formData","FormData","Object","entries","append","list","specialtyListGenerate","ref","lowerSpecialty","toLowerCase","lowerOther","softwareListGenerate","lowerSoftware","CreateResume","queryString","parse","setUploadFile","onUploadFile","onCheck","r","renderStep","CreateResumeRoute","Component","component","render","props","alert","removeAlert","renderHTML","setStep","verifyUser","put","link","setLink","verificationToken","NotFound","addJob","newJobs","rejectedJobs","approvedJobs","clearDetails","viewDetails","approveResume","deleteResume","rejectResume","rate","salary","comments","hideModal","p","primaryAction","ViewImage","ViewSampleWorkImage","desc","wordWrap","fileDisplay","setFileDisplay","editRate","setEditRate","editSalary","setEditSalary","setRate","showModalAction","setShowModalAction","setAction","setMsg","recruitersCommentsRef","showWorkImage","setShowWorkImage","showWorkDocument","setShowWorkDocument","viewWorkImage","setViewWorkImage","viewWorkDocument","setViewWorkDocument","showImage","setShowImage","setViewImage","setNewData","status","editNewRate","reapproveResume","actionButton","moment","dateCreated","format","approveJob","deleteJob","rejectJob","loadJob","roles","keyResponsibilities","responsibilities","remoteStaffExpectation","reapproveJob","seeDetails","setSeeDetails","getUserInfo","initialPersonalInfo","personalInfo","setPersonalInfo","isAdmin","setIsAdmin","loginUser","password","stayLogged","setStayLogged","LoadUser","propTypes","PropTypes","func","isRequired","PrivateRoute","rest","VerifyViewCandidates","DraftJobRoute","Specialty","Software","perItem","round","generateSpecialty","onKeyPress","generateSoftware","setRoles","setKeyResponsibilities","setResponsibilities","rolesRef","keyResponsibilitiesRef","responsibilitiesRef","rolesVal","keyResponsibilitiesVal","responsibilitiesVal","itemClose","field","for","margin","showStep","setShowStep","rolesInput","setRolesInput","keyResponsibilitiesInput","setKeyResponsibilitiesInput","responsibilitiesInput","setResponsibilitiesInput","editClick","updateClick","submitJob","setSuccess","summaryModal","setSummaryModal","DraftJob","password2","capitalize","addEmployer","contactNo","submitEmployer","position","industry","website","Signup","String","prototype","this","charAt","toUpperCase","slice","renderSignup","App","exact","path","ViewCandidates","Verify","VerifyDashboard","Dashboard","Login","AdminSignup","Boolean","hostname","match","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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,cACP7I,EAAO6I,eAAiBhD,EAClB,WACA,KAGV,2BACIlF,KAAK,QACLkH,KAAK,eACLlD,UAAU,eACVvD,GAAE,sBAAiB0E,GACnBiC,MAAOlC,EACPiC,SAAUA,EACViB,QACI/I,EAAO6I,cACP7I,EAAO6I,eAAiBhD,IAGhC,2BACImD,QAAO,sBAAiBlD,GACxBnB,UAAU,gBAETkB,SAMrB,wBAAIlB,UAAU,YACV,kBAAC,IAAD,CACIA,UAAU,WACVH,GAAG,IACHqD,KAAK,eACL1C,QAASwC,GAJb,YAMc,IACV,uBACIhD,UAAS,kCACL8C,EAAKF,aAAe,QAAU,WAI1C,wBACI5C,UAAS,yCACL8C,EAAKF,aAAe,WAAa,YEhOlD,CACH,cACA,eACA,mBACA,sBACA,sBACA,sBACA,iBACA,eACA,eACA,qBACA,2BACA,uBACA,gBACA,cACA,UACA,0BACA,yBACA,qBACA,uBACA,wBF+MiC3B,KAAI,SAACC,EAAGC,GAAJ,OACjB,wBACIC,IAAKD,EACLnB,UAAS,kBACL3E,EAAOgI,WACPhI,EAAOgI,UAAUG,SAAStC,GACpB,WACA,KAGV,2BACIlF,KAAK,WACLkH,KAAK,YACLlD,UAAU,eACVvD,GAAE,mBAAc0E,GAChBiC,MAAOlC,EACPiC,SAAUA,EACViB,QACI/I,EAAOgI,WACPhI,EAAOgI,UAAUG,SAAStC,KAGlC,2BACImD,QAAO,mBAAclD,GACrBnB,UAAU,gBAETkB,SAMrB,wBAAIlB,UAAU,YACV,kBAAC,IAAD,CACIA,UAAU,WACVH,GAAG,IACHqD,KAAK,cACL1C,QAASwC,GAJb,eAMiB,IACb,uBACIhD,UAAS,kCACL8C,EAAKD,YAAc,QAAU,WAIzC,wBACI7C,UAAS,yCACL8C,EAAKD,YAAc,WAAa,YGnRjD,CACH,WACA,mBACA,iBACA,QACA,aACA,cACA,MACA,gBACA,UACA,kBACA,QACA,WACA,SACA,iBACA,aACA,oBACA,kBACA,iBACA,wBACA,QACA,QACA,WACA,gBACA,QACA,UACA,SACA,eACA,YACA,YHyPgC5B,KAAI,SAACC,EAAGC,GAAJ,OAChB,wBACI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AG,iBACH2G,MAAOsJ,EACPxJ,KAAK,YACLC,SAAUA,OAK1B,yBAAKnD,UAAU,cACX,yBAAKA,UAAU,YACX,yBAAKA,UAAU,YACX,2BACIqE,QAAQ,YACRrE,UAAU,cAFd,YAOJ,yBAAKA,UAAU,YACX,4BACIvD,GAAG,eACHuD,UAAU,qBACVkD,KAAK,UACLC,SAAUA,EACVC,MAAOuJ,GCvN9B,CACT,cACA,UACA,UACA,UACA,SACA,WACA,oBACA,YACA,UACA,QACA,YACA,UACA,aACA,UACA,UACA,aACA,WACA,UACA,UACA,SACA,QACA,UACA,SACA,UACA,uBACA,WACA,SACA,yBACA,SACA,WACA,eACA,UACA,WACA,WACA,aACA,iBACA,OACA,QACA,QACA,WACA,QACA,eACA,aACA,gBACA,UACA,cACA,OACA,SACA,iBACA,UACA,WACA,WACA,qBACA,UACA,QACA,cACA,oBACA,UACA,WACA,mBACA,gBACA,OACA,UACA,SACA,mBACA,qBACA,QACA,SACA,UACA,UACA,QACA,YACA,SACA,YACA,UACA,OACA,YACA,WACA,SACA,gBACA,SACA,QACA,WACA,YACA,UACA,UACA,QACA,YACA,OACA,OACA,UACA,cACA,SACA,QACA,UACA,QACA,SACA,SACA,aACA,QACA,SACA,kBACA,OACA,SACA,UACA,UACA,UACA,QACA,gBACA,YACA,aACA,QACA,YACA,aACA,SACA,WACA,WACA,OACA,QACA,aACA,YACA,SACA,UACA,SACA,WACA,aACA,aACA,UACA,aACA,UACA,QACA,cACA,uBACA,gBACA,cACA,YACA,QACA,UACA,SACA,OACA,WACA,YACA,SACA,mBACA,WACA,OACA,cACA,SACA,WACA,cACA,QACA,UACA,UACA,SACA,SACA,0BACA,QACA,aACA,YACA,eACA,UACA,SACA,aACA,eACA,YACA,WACA,WACA,eACA,cACA,QACA,YACA,mBACA,WACA,aACA,YACA,QACA,WACA,YACA,SACA,cACA,QACA,SACA,aACA,WACA,WACA,eACA,OACA,QACA,oBACA,UACA,SA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ACA,eACA,eACA,qBACA,2BACA,uBACA,gBACA,cACA,UACA,0BACA,yBACA,qBACA,uBACA,wBmCsDyDzU,MAChD6P,UAAU6E,OAAO,YAEtBX,GAAa,SAAC5R,GAAD,4BAAmBA,GAAnB,CnC7Ed,CACH,cACA,eACA,mBACA,sBACA,sBACA,sBACA,iBACA,eACA,eACA,qBACA,2BACA,uBACA,gBACA,cACA,UACA,0BACA,yBACA,qBACA,uBACA,wBmCyD+DnC,QAC3DqP,MAAMC,KAAKJ,SAASK,iBAAiB,+BAChCgF,MAAK,SAACC,GAAD,OAAQA,EAAGC,cnC/EtB,CACH,cACA,eACA,mBACA,sBACA,sBACA,sBACA,iBACA,eACA,eACA,qBACA,2BACA,uBACA,gBACA,cACA,UACA,0BACA,yBACA,qBACA,uBACA,wBmC2DyDzU,MAChD6P,UAAU8E,IAAI,WAEvB5J,IACAE,EAAW,8CAIT2J,EAAmB,SAAC5U,GAClBoC,EAASE,SlCxFV,CACH,WACA,mBACA,iBACA,QACA,aACA,cACA,MACA,gBACA,UACA,kBACA,QACA,WACA,SACA,iBACA,aACA,oBACA,kBACA,iBACA,wBACA,QACA,QACA,WACA,gBACA,QACA,UACA,SACA,eACA,YACA,YkC2DqCtC,KACjCgU,GAAY,SAAC5R,GAAD,mBACLA,EAASjI,QACR,SAACoI,GAAD,OACIH,EAASuN,QAAQpN,KACjBH,EAASuN,QlC7FtB,CACH,WACA,mBACA,iBACA,QACA,aACA,cACA,MACA,gBACA,UACA,kBACA,QACA,WACA,SACA,iBACA,aACA,oBACA,kBACA,iBACA,wBACA,QACA,QACA,WACA,gBACA,QACA,UACA,SACA,eACA,YACA,YkCgEgD3P,WAG5CqP,MAAMC,KAAKJ,SAASK,iBAAiB,8BAChCgF,MAAK,SAACC,GAAD,OAAQA,EAAGC,clCjGtB,CACH,WACA,mBACA,iBACA,QACA,aACA,cACA,MACA,gBACA,UACA,kBACA,QACA,WACA,SACA,iBACA,aACA,oBACA,kBACA,iBACA,wBACA,QACA,QACA,WACA,gBACA,QACA,UACA,SACA,eACA,YACA,YkCoEwDzU,MAC/C6P,UAAU6E,OAAO,YAEtBV,GAAY,SAAC5R,GAAD,4BAAkBA,GAAlB,ClCpGb,CACH,WACA,mBACA,iBACA,QACA,aACA,cACA,MACA,gBACA,UACA,kBACA,QACA,WACA,SACA,iBACA,aACA,oBACA,kBACA,iBACA,wBACA,QACA,QACA,WACA,gBACA,QACA,UACA,SACA,eACA,YACA,YkCuE2DpC,QACvDqP,MAAMC,KAAKJ,SAASK,iBAAiB,8BAChCgF,MAAK,SAACC,GAAD,OAAQA,EAAGC,clCtGtB,CACH,WACA,mBACA,iBACA,QACA,aACA,cACA,MACA,gBACA,UACA,kBACA,QACA,WACA,SACA,iBACA,aACA,oBACA,kBACA,iBACA,wBACA,QACA,QACA,WACA,gBACA,QACA,UACA,SACA,eACA,YACA,YkCyEwDzU,MAC/C6P,UAAU8E,IAAI,WAEvB5J,IACAE,EAAW,8CAwDT6G,EAAmB,SAAC9R,GACtB,IAAM6U,EAAO1S,EAAUnC,GnCnKpB,CACH,cACA,eACA,mBACA,sBACA,sBACA,sBACA,iBACA,eACA,eACA,qBACA,2BACA,uBACA,gBACA,cACA,UACA,0BACA,yBACA,qBACA,uBACA,wBmCgJoBsC,SAASuS,IACzBxF,MAAMC,KAAKJ,SAASK,iBAAiB,+BAChCgF,MAAK,SAACC,GAAD,OAAQA,EAAGC,cAAgBI,KAChChF,UAAU6E,OAAO,UAE1BX,GAAa,SAAC5R,GAAD,mBACNA,EAAUhI,QAAO,SAACoI,GAAD,OAAOJ,EAAUwN,QAAQpN,KAAOvC,UAKtDiS,GAAkB,SAACjS,GACrB,IAAM6U,EAAOzS,EAASpC,GlChLnB,CACH,WACA,mBACA,iBACA,QACA,aACA,cACA,MACA,gBACA,UACA,kBACA,QACA,WACA,SACA,iBACA,aACA,oBACA,kBACA,iBACA,wBACA,QACA,QACA,WACA,gBACA,QACA,UACA,SACA,eACA,YACA,YkCoJmBsC,SAASuS,IACxBxF,MAAMC,KAAKJ,SAASK,iBAAiB,8BAChCgF,MAAK,SAACC,GAAD,OAAQA,EAA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C,EAAKF,aAAe,WAAa,Y3ChOlD,CACH,cACA,eACA,mBACA,sBACA,sBACA,sBACA,iBACA,eACA,eACA,qBACA,2BACA,uBACA,gBACA,cACA,UACA,0BACA,yBACA,qBACA,uBACA,wB2C+MiC3B,KAAI,SAACC,EAAGC,GAAJ,OACjB,wBACIC,IAAKD,EACLnB,UAAS,kBACL3E,EAAOgI,WACPhI,EAAOgI,UAAUG,SAAStC,GACpB,WACA,KAGV,2BACIlF,KAAK,WACLkH,KAAK,YACLlD,UAAU,eACVvD,GAAE,mBAAc0E,GAChBiC,MAAOlC,EACPiC,SAAUA,EACViB,QACI/I,EAAOgI,WACPhI,EAAOgI,UAAUG,SAAStC,KAGlC,2BACImD,QAAO,mBAAclD,GACrBnB,UAAU,gBAETkB,SAMrB,wBAAIlB,UAAU,YACV,kBAAC,IAAD,CACIA,UAAU,WACVH,GAAG,IACHqD,KAAK,cACL1C,QAASwC,GAJb,eAMiB,IACb,uBACIhD,UAAS,kCACL8C,EAAKD,YAAc,QAAU,WAIzC,wBACI7C,UAAS,yCACL8C,EAAKD,YAAc,WAAa,Y1CnRjD,CACH,WACA,mBACA,iBACA,QACA,aACA,cACA,MACA,gBACA,UACA,kBACA,QACA,WACA,SACA,iBACA,aACA,oBACA,kBACA,iBACA,wBACA,QACA,QACA,WACA,gBACA,QACA,UACA,SACA,eACA,YACA,Y0CyPgC5B,KAAI,SAACC,EAAGC,GAAJ,OAChB,wBACIC,IAAKD,EACLnB,UAAS,kBACL3E,EAAOiI,UACPjI,EAAOiI,SAASE,SAAStC,GACnB,WACA,KAGV,2BACIlF,KAAK,WACLkH,KAAK,WACLlD,UAAU,eACVvD,GAAE,kBAAa0E,GACfiC,MAAOlC,EACPiC,SAAUA,EACViB,QACI/I,EAAOiI,UACPjI,EAAOiI,SAASE,SAAStC,KAGjC,2BACImD,QAAO,kBAAalD,GACpBnB,UAAU,gBAETkB,c,oBChKtB/B,eAAQ,KAAM,CACzB8Z,c1C5EyB,SAACpa,GAAD,8CAAU,WAAOL,GAAP,eAAAC,EAAA,sEAEzBC,EAAS,CACXL,QAAS,CACL,eAAgB,qB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AAmBA,GAAnB,CpEnGd,CACH,cACA,eACA,mBACA,sBACA,sBACA,sBACA,iBACA,eACA,eACA,qBACA,2BACA,uBACA,gBACA,cACA,UACA,0BACA,yBACA,qBACA,uBACA,wBoE+E+DnC,QAC3DqP,MAAMC,KAAKJ,SAASK,iBAAiB,+BAChCgF,MAAK,SAACC,GAAD,OAAQA,EAAGC,cpErGtB,CACH,cACA,eACA,mBACA,sBACA,sBACA,sBACA,iBACA,eACA,eACA,qBACA,2BACA,uBACA,gBACA,cACA,UACA,0BACA,yBACA,qBACA,uBACA,wBoEiFyDzU,MAChD6P,UAAU8E,IAAI,WAEvB5J,IACAE,EAAW,8CAET2J,EAAmB,SAAC5U,GAClBoC,EAASE,SnE5GV,CACH,WACA,mBACA,iBACA,QACA,aACA,cACA,MACA,gBACA,UACA,kBACA,QACA,WACA,SACA,iBACA,aACA,oBACA,kBACA,iBACA,wBACA,QACA,QACA,WACA,gBACA,QACA,UACA,SACA,eACA,YACA,YmE+EqCtC,KACjCgU,GAAY,SAAC5R,GAAD,mBACLA,EAASjI,QACR,SAACoI,GAAD,OACIH,EAASuN,QAAQpN,KACjBH,EAASuN,QnEjHtB,CACH,WACA,mBACA,iBACA,QACA,aACA,cACA,MACA,gBACA,UACA,kBACA,QACA,WACA,SACA,iBACA,aACA,oBACA,kBACA,iBACA,wBACA,QACA,QACA,WACA,gBACA,QACA,UACA,SACA,eACA,YACA,YmEoFgD3P,WAG5CqP,MAAMC,KAAKJ,SAASK,iBAAiB,8BAChCgF,MAAK,SAACC,GAAD,OAAQA,EAAGC,cnErHtB,CACH,WACA,mBACA,iBACA,QACA,aACA,cACA,MACA,gBACA,UACA,kBACA,QACA,WACA,SACA,iBACA,aACA,oBACA,kBACA,iBACA,wBACA,QACA,QACA,WACA,gBACA,QACA,UACA,SACA,eACA,YACA,YmEwFwDzU,MAC/C6P,UAAU6E,OAAO,YAEtBV,GAAY,SAAC5R,GAAD,4BAAkBA,GAAlB,CnExHb,CACH,WACA,mBACA,iBACA,QACA,aACA,cACA,MACA,gBACA,UACA,kBACA,QACA,WACA,SACA,iBACA,aACA,oBACA,kBACA,iBACA,wBACA,QACA,QACA,WACA,gBACA,QACA,UACA,SACA,eACA,YACA,YmE2F2DpC,QACvDqP,MAAMC,KAAKJ,SAASK,iBAAiB,8BAChCgF,MAAK,SAACC,GAAD,OAAQA,EAAGC,cnE1HtB,CACH,WACA,mBACA,iBACA,QACA,aACA,cACA,MACA,gBACA,UACA,kBACA,QACA,WACA,SACA,iBACA,aACA,oBACA,kBACA,iBACA,wBACA,QACA,QACA,WACA,gBACA,QACA,UACA,SACA,eACA,YACA,YmE6FwDzU,MAC/C6P,UAAU8E,IAAI,WAEvB5J,IACAE,EAAW,8CAET6G,EAAmB,SAAC9R,GACtB,IAAM6U,EAAO1S,EAAUnC,GpEjIpB,CACH,cACA,eACA,mBACA,sBACA,sBACA,sBACA,iBACA,eACA,eACA,qBACA,2BACA,uBACA,gBACA,cACA,UACA,0BACA,yBACA,qBACA,uBACA,wBoE8GoBsC,SAASuS,IACzBxF,MAAMC,KAAKJ,SAASK,iBAAiB,+BAChCgF,MAAK,SAACC,GAAD,OAAQA,EAAGC,cAAgBI,KAChChF,UAAU6E,OAAO,UAE1BX,GAAa,SAAC5R,GAAD,mBACNA,EAAUhI,QAAO,SAACoI,GAAD,OAAOJ,EAAUwN,QAAQpN,KAAOvC,UAGtDiS,EAAkB,SAACjS,GACrB,IAAM6U,EAAOzS,EAASpC,GnE5InB,CACH,WACA,mBACA,iBACA,QACA,aACA,cACA,MACA,gBACA,UACA,kBACA,QACA,WACA,SACA,iBACA,aACA,oBACA,kBACA,iBACA,wBACA,QACA,QACA,WACA,gBACA,QACA,UACA,SACA,eACA,YACA,YmEgHmBsC,SAASuS,IACxBxF,MAAMC,KAAKJ,SAASK,iBAAiB,8BAChCgF,MAAK,SAACC,GAAD,OAAQA,EAAGC,cAAgBI,KAChChF,UAAU6E,OAAO,UAE1BV,GAAY,SAAC5R,GAAD,mBACLA,EAASjI,QAAO,SAACoI,GAAD,OAAOH,EAASuN,QAAQpN,KAAOvC,UAiH1D,OAjBA1D,qBAAU,WACFyP,KAAKC,UAAUrS,KAAUoS,KAAKC,UAAUV,KACxCP,IACAE,EAAW,8CAGXqB,IACAC,GAAU,GACV2K,EAAQ,GACR/Y,EAAQoB,KAAK,CACTnD,SAAU,aACVC,OAAQ,cAKjB,CAAC1C,EAAM2S,IAEN,yBAAKxN,UAAU,UACVsM,EACD,0BAAMtM,UAAU,OAAOmN,SA3Cd,SAACjM,GAEd,GADAA,EAAE+B,iBAEEgK,KAAKC,UAAUrS,KAAUoS,KAAKC,UAAUV,IACnB,IAArBnJ,EAAUU,QACU,IAApBT,EAASS,OAETkB,EAAS,GAAI,qDACV,CACH,IAAMpG,EAAI,2BACHhE,GADG,IAENwI,YACAC,aAEJqV,EAAO9Z,GACPgO,EAAQL,GACRyI,EAAa,IACbC,EAAY,IACZ3I,IACAkB,GAAU,MAyBN,yBAAKzN,UAAU,OACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,YACX,yBAAKA,UAAU,YACX,yBAAKA,UAAU,YACX,2BACIqE,QAAQ,aACRrE,UAAU,cAFd,cAOJ,yBAAKA,UAAU,YACX,2BACIhE,KAAK,OACLkH,KAAK,QACLzG,GAAG,aACHuD,UAAU,qBACVmD,SArEvB,SAACjC,GAAO,IAAD,EACIA,EAAEI,OAAlB4B,EADY,EACZA,KAAME,EADM,EACNA,MACdyJ,EAAQ,2BAAKhS,GAAN,kBAAaqI,EAAOE,KAC3B6I,IACAE,EAAW,oDAuEK,yBAAKnM,UAAU,OACX,yBAAKA,UAAU,YACX,yBAAKA,UAAU,2BACX,yBAAKA,UAAU,YACX,2BACIqE,QAAQ,iBACRrE,UAAU,cAFd,aAMA,uBAAGA,UAAU,YAAb,6BAIJ,yBAAKA,UAAU,YACX,yBAAKA,UAAU,iBA5QzB,WAItB,IAHA,IAAIoB,EAAM,EACNwV,EAAO,GACLiH,EAAUhV,KAAKiV,MpEvClB,CACH,cACA,eACA,mBACA,sBACA,sBACA,sBACA,iBACA,eACA,eACA,qBACA,2BACA,uBACA,gBACA,cACA,UACA,0BACA,yBACA,qBACA,uBACA,wBoEmB2C/Z,OAAS,GAC3CN,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAExB,IADA,IAAIsS,EAAO,GACFpC,EAAI,EAAGA,EAAIkK,EAASlK,IACzBoC,EAAKtV,KACD,kBAAC,GAAD,CACIW,IAAKA,EACLwK,MAAOxK,EACPgC,MpE/Cb,CACH,cACA,eACA,mBACA,sBACA,sBACA,sBACA,iBACA,eACA,eACA,qBACA,2BACA,uBACA,gBACA,cACA,UACA,0BACA,yBACA,qBACA,uBACA,wBoE2BuChC,GACvB0R,OAAQ0C,KAGhBpU,IAEJwV,EAAKnW,KACD,yBAAKT,UAAU,6BAA6BoB,IAAKqC,GAC7C,wBAAIzD,UAAU,mBAAmB+V,KAI7C,OAAOa,EAsP8BmH,IAEL,yBAAK/d,UAAU,mCACX,2BACIhE,KAAK,OACLkH,KAAK,iBACLlD,UAAU,0BACV+K,YAAY,gBACZiT,WAnKX,SAAC9c,GAC9B,GAAc,UAAVA,EAAEE,IAAiB,CACnB,GAAwC,KAApCyT,EAAkBxC,QAAQjP,MAC1B6B,EAAS,GAAI,qDACV,CACH,IAAM8R,EpE3JX,CACH,cACA,eACA,mBACA,sBACA,sBACA,sBACA,iBACA,eACA,eACA,qBACA,2BACA,uBACA,gBACA,cACA,UACA,0BACA,yBACA,qBACA,uBACA,wBoEuI+C9V,KAAI,SAACyU,GAAD,OACvCA,EAAGsB,iBAEDC,EAAapC,EAAkBxC,QAAQjP,MAC7C,GAAI2T,EAAevT,SAASyT,EAAWD,eAAgB,CACnD,IAAMpL,EAAQmL,EAAelG,QACzBoG,EAAWD,eAEf/B,GAAa,SAAC5R,GAAD,4BACNA,GADM,CpEnKtB,CACH,cACA,eACA,mBACA,sBACA,sBACA,sBACA,iBACA,eACA,eACA,qBACA,2BACA,uBACA,gBACA,cACA,UACA,0BACA,yBACA,qBACA,uBACA,wBoEiJgCuI,QAEpB2E,MAAMC,KACFJ,SAASK,iBAAiB,+BAEzBgF,MAAK,SAACC,GAAD,OAAQA,EAAGC,cpE1K9B,CACH,cACA,eACA,mBACA,sBACA,sBACA,sBACA,iBACA,eACA,eACA,qBACA,2BACA,uBACA,gBACA,cACA,UACA,0BACA,yBACA,qBACA,uBACA,wBoEsJiE/J,MAChDmF,UAAU8E,IAAI,eAEnBZ,GAAa,SAAC5R,GAAD,4BAAmBA,GAAnB,CAA8B4T,OAE/CpC,EAAkBxC,QAAQjP,MAAQ,GAEtC6I,IACAE,EAAW,6CACXjL,EAAE+B,mBAyIkC6T,IAAKjC,OAKrB,6BACA,yBAAK7U,UAAU,YACW,IAArBqD,EAAUU,OACP,uBAAG/D,UAAU,iBAAb,sEAKAqD,EAAUpC,KAAI,SAACC,EAAGC,GAAJ,OACV,kBAAC,GAAD,CACIC,IAAKD,EACLiC,MAAOlC,EACP0K,MAAOzK,EACP6R,iBACIA,SAOxB,yBAAKhT,UAAU,YACX,yBAAKA,UAAU,0BACX,yBAAKA,UAAU,YACX,2BACIqE,QAAQ,gBACRrE,UAAU,cAFd,gBAMA,uBAAGA,UAAU,YAAb,6BAIJ,yBAAKA,UAAU,YACX,yBAAKA,UAAU,iBAvS1B,WAIrB,IAHA,IAAIoB,EAAM,EACNwV,EAAO,GACLiH,EAAUhV,KAAKiV,MnEhElB,CACH,WACA,mBACA,iBACA,QACA,aACA,cACA,MACA,gBACA,UACA,kBACA,QACA,WACA,SACA,iBACA,aACA,oBACA,kBACA,iBACA,wBACA,QACA,QACA,WACA,gBACA,QACA,UACA,SACA,eACA,YACA,YmEmC0C/Z,OAAS,GAC1CN,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAExB,IADA,IAAIsS,EAAO,GACFpC,EAAI,EAAGA,EAAIkK,EAASlK,IACzBoC,EAAKtV,KACD,kBAAC,GAAD,CACIW,IAAKA,EACLwK,MAAOxK,EACPgC,MnExEb,CACH,WACA,mBACA,iBACA,QACA,aACA,cACA,MACA,gBACA,UACA,kBACA,QACA,WACA,SACA,iBACA,aACA,oBACA,kBACA,iBACA,wBACA,QACA,QACA,WACA,gBACA,QACA,UACA,SACA,eACA,YACA,YmE2CsChC,GACtB0R,OAAQgD,KAGhB1U,IAEJwV,EAAKnW,KACD,yBAAKT,UAAU,6BAA6BoB,IAAKqC,GAC7C,wBAAIzD,UAAU,mBAAmB+V,KAI7C,OAAOa,EAiR8BqH,IAEL,yBAAKje,UAAU,cACX,2BACIhE,KAAK,OACLkH,KAAK,gBACLlD,UAAU,0BACV+K,YAAY,gBACZiT,WAvLZ,SAAC9c,GAC7B,GAAc,UAAVA,EAAEE,IAAiB,CACnB,GAAuC,KAAnC2T,EAAiB1C,QAAQjP,MACzB6B,EAAS,GAAI,qDACV,CACH,IAAMkS,EnE3LX,CACH,WACA,mBACA,iBACA,QACA,aACA,cACA,MACA,gBACA,UACA,kBACA,QACA,WACA,SACA,iBACA,aACA,oBACA,kBACA,iBACA,wBACA,QACA,QACA,WACA,gBACA,QACA,UACA,SACA,eACA,YACA,YmE8J6ClW,KAAI,SAACyU,GAAD,OACrCA,EAAGsB,iBAEDC,EAAalC,EAAiB1C,QAAQjP,MAC5C,GAAI+T,EAAc3T,SAASyT,EAAWD,eAAgB,CAClD,IAAMpL,EAAQuL,EAActG,QACxBoG,EAAWD,eAEf9B,GAAY,SAAC5R,GAAD,4BACLA,GADK,CnEnMrB,CACH,WACA,mBACA,iBACA,QACA,aACA,cACA,MACA,gBACA,UACA,kBACA,QACA,WACA,SACA,iBACA,aACA,oBACA,kBACA,iBACA,wBACA,QACA,QACA,WACA,gBACA,QACA,UACA,SACA,eACA,YACA,YmEwK+BsI,QAEnB2E,MAAMC,KACFJ,SAASK,iBAAiB,8BAEzBgF,MAAK,SAACC,GAAD,OAAQA,EAAGC,cnE1M9B,CACH,WACA,mBACA,iBACA,QACA,aACA,cACA,MACA,gBACA,UACA,kBACA,QACA,WACA,SACA,iBACA,aACA,oBACA,kBACA,iBACA,wBACA,QACA,QACA,WACA,gBACA,QACA,UACA,SACA,eACA,YACA,YmE6KgE/J,MAC/CmF,UAAU8E,IAAI,eAEnBX,GAAY,SAAC5R,GAAD,4BAAkBA,GAAlB,CAA4B2T,OAE5ClC,EAAiB1C,QAAQjP,MAAQ,GAErC6I,IACAE,EAAW,6CACXjL,EAAE+B,mBA6JkC6T,IAAK/B,OAKrB,6BACA,yBAAK/U,UAAU,YACU,IAApBsD,EAASS,OACN,uBAAG/D,UAAU,iBAAb,yEAKAsD,EAASrC,KAAI,SAACC,EAAGC,GAAJ,OACT,kBAAC,GAAD,CACIC,IAAKD,EACLiC,MAAOlC,EACP0K,MAAOzK,EACPgS,gBACIA,UAQ5B,yBAAKnT,UAAU,OACX,yBAAKA,UAAU,wBACX,2BACIhE,KAAK,SACLoH,MAAM,UACNpD,UAAU,8CCrC/Bb,gBAJS,SAACrD,GAAD,MAAY,CAChCc,SAAUd,EAAMc,YAGoB,CAAEqI,YAAU0T,UAAQP,YAA7CjZ,EAhWD,SAAC,GAAuD,IAArD8F,EAAoD,EAApDA,SAAU0T,EAA0C,EAA1CA,OAAQP,EAAkC,EAAlCA,QAAqB7c,EAAa,EAAzBqB,SAAYrB,KAAa,EAM7DwQ,KAN6D,mBAE7DO,EAF6D,KAG7DL,EAH6D,KAI7DM,EAJ6D,KAK7DJ,EAL6D,KAQ3D9M,EAAUC,cAEVkN,EAAc,CAChBzE,MAAO,GACPqU,uBAAwB,IAZqC,EAevC1Z,mBAAS,IAf8B,mBAe1DuZ,EAf0D,KAenDiC,EAfmD,OAgBXxb,mBAAS,IAhBE,mBAgB1DwZ,EAhB0D,KAgBrCiC,EAhBqC,OAiBjBzb,mBAAS,IAjBQ,mBAiB1DyZ,EAjB0D,KAiBxCiC,EAjBwC,OAkBzC1b,mBAAS8J,GAlBgC,mBAkB1D3R,EAlB0D,KAkBpDgS,EAlBoD,OAmBrCnK,oBAAS,GAnB4B,mBAmB1D8K,EAnB0D,KAmBlDC,EAnBkD,OAoBzC/K,oBAAS,GApBgC,mBAoB1DoK,EApB0D,KAoBpDC,EApBoD,KAsBzDhF,EAAkClN,EAAlCkN,MAAOqU,EAA2BvhB,EAA3BuhB,uBAETiC,EAAWvJ,iBAAO,MAClBwJ,EAAyBxJ,iBAAO,MAChCyJ,EAAsBzJ,iBAAO,MAE7B3R,EAAW,SAACjC,GAAO,IAAD,EACIA,EAAEI,OAAlB4B,EADY,EACZA,KAAME,EADM,EACNA,MACdyJ,EAAQ,2BAAKhS,GAAN,kBAAaqI,EAAOE,MAGzB4a,EAAa,SAAC9c,GAChB,GAAc,UAAVA,EAAEE,IAAiB,CAAC,IACZ8B,EAAShC,EAAEI,OAAX4B,KACR,GAAa,UAATA,EAAkB,CAClB,IAAMsb,EAAWH,EAAShM,QAAQjP,MACjB,KAAbob,EACAvZ,EACI,GACA,kDAGJiZ,GAAS,SAACjC,GAAD,4BAAeA,GAAf,CAAsBuC,OAC/BH,EAAShM,QAAQjP,MAAQ,SAE1B,GAAa,wBAATF,EAAgC,CACvC,IAAMub,EACFH,EAAuBjM,QAAQjP,MACJ,KAA3Bqb,EACAxZ,EACI,GACA,kDAGJkZ,GAAuB,SAACjC,GAAD,4BAChBA,GADgB,CAEnBuC,OAEJH,EAAuBjM,QAAQjP,MAAQ,SAExC,GAAa,qBAATF,EAA6B,CACpC,IAAMwb,EAAsBH,EAAoBlM,QAAQjP,MAC5B,KAAxBsb,EACAzZ,EACI,GACA,kDAGJmZ,GAAoB,SAACjC,GAAD,4BACbA,GADa,CAEhBuC,OAEJH,EAAoBlM,QAAQjP,MAAQ,IAG5C6I,IACAE,EAAW,6CACXjL,EAAE+B,mBAIJ0b,EAAY,SAACC,EAAOhT,GACR,UAAVgT,EACAV,GAAS,SAACjC,GAAD,mBACFA,EAAM5gB,QAAO,SAACoI,GAAD,OAAOwY,EAAMpL,QAAQpN,KAAOmI,SAE/B,wBAAVgT,EACPT,GAAuB,SAACjC,GAAD,mBAChBA,EAAoB7gB,QACnB,SAACoI,GAAD,OAAOyY,EAAoBrL,QAAQpN,KAAOmI,SAGjC,qBAAVgT,GACPR,GAAoB,SAACjC,GAAD,mBACbA,EAAiB9gB,QAChB,SAACoI,GAAD,OAAO0Y,EAAiBtL,QAAQpN,KAAOmI,UA0DvD,OAzBApO,qBAAU,WACFsP,IACa,IAATvR,GACA0J,EACI,IACA,oEAGR8H,GAAQ,IAERE,KAAKC,UAAUrS,KAAUoS,KAAKC,UAAUV,KACxCP,IACAE,EAAW,8CAGXqB,IACAC,GAAU,GACV2K,EAAQ,GACR/Y,EAAQoB,KAAK,CACTnD,SAAU,aACVC,OAAQ,cAGjB,CAACiQ,EAAQ3S,EAAMiS,IAGd,yBAAK9M,UAAU,UACVsM,EACD,0BAAMtM,UAAU,OAAOmN,SAvDd,SAACjM,GACdA,EAAE+B,iBAEmB,IAAjBgZ,EAAMlY,QACyB,IAA/BmY,EAAoBnY,QACQ,IAA5BoY,EAAiBpY,QACP,KAAVgE,GAC2B,KAA3BqU,EAEAnX,EAAS,GAAI,kDAEb0T,EAAO,CACH5Q,QACAkU,QACAC,sBACAC,mBACAC,2BAEJvP,EAAQL,GACR0R,EAAS,IACTC,EAAuB,IACvBC,EAAoB,IACpB3Q,GAAU,GACVlB,OAiCI,yBAAKvM,UAAU,OACX,yBAAKA,UAAU,wBACX,wBAAIA,UAAU,SAAd,iBACA,yBAAKA,UAAU,cACX,2BACI6e,IAAI,aACJjd,MAAO,CACH8J,MAAO,UACP7J,WAAY,IACZid,OAAQ,WALhB,mBAUA,8BACI5b,KAAK,QACLyP,KAAK,IACL3S,UAAU,qBACVmD,SAAUA,EACVC,MAAO2E,KAGf,yBAAK/H,UAAU,YACX,wBAAIA,UAAU,gBAElB,yBAAKA,UAAU,cACX,2BAAO6e,IAAI,aAAa7e,UAAU,cAAlC,SAGA,yBAAKA,UAAU,qBACX,2BACIhE,KAAK,OACLS,GAAG,aACHuD,UAAU,qBACVkD,KAAK,QACL8a,WAAYA,EACZlH,IAAKuH,IAET,uBAAGre,UAAU,iBAEjB,wBAAIA,UAAU,cACTic,EAAMlY,OAAS,GACZkY,EAAMhb,KAAI,SAACC,EAAGC,GAAJ,OACN,wBAAIC,IAAKD,GACL,0BAAMnB,UAAU,cACXkB,EACD,0BACIlB,UAAU,cACVQ,QAAS,kBACLme,EAAU,QAASxd,KAH3B,YAaxB,yBAAKnB,UAAU,YACX,wBAAIA,UAAU,gBAElB,yBAAKA,UAAU,cACX,2BACI6e,IAAI,2BACJ7e,UAAU,cAFd,wBAMA,yBAAKA,UAAU,qBACX,2BACIhE,KAAK,OACLS,GAAG,2BACHuD,UAAU,qBACVkD,KAAK,sBACL8a,WAAYA,EACZlH,IAAKwH,IAET,uBAAGte,UAAU,iBAEjB,wBAAIA,UAAU,6BACTkc,EAAoBnY,OAAS,GAC1BmY,EAAoBjb,KAAI,SAACC,EAAGC,GAAJ,OACpB,wBAAIC,IAAKD,GACL,0BAAMnB,UAAU,6BACXkB,EACD,0BACIlB,UAAU,6BACVQ,QAAS,kBACLme,EACI,sBACAxd,KALZ,YAgBxB,yBAAKnB,UAAU,YACX,wBAAIA,UAAU,gBAElB,yBAAKA,UAAU,cACX,2BACI6e,IAAI,wBACJ7e,UAAU,cAFd,oBAMA,yBAAKA,UAAU,qBACX,2BACIhE,KAAK,OACLS,GAAG,wBACHuD,UAAU,qBACVkD,KAAK,mBACL8a,WAAYA,EACZlH,IAAKyH,IAET,uBAAGve,UAAU,iBAEjB,wBAAIA,UAAU,yBACTmc,EAAiBpY,OAAS,GACvBoY,EAAiBlb,KAAI,SAACC,EAAGC,GAAJ,OACjB,wBAAIC,IAAKD,GACL,0BAAMnB,UAAU,yBACXkB,EACD,0BACIlB,UAAU,yBACVQ,QAAS,kBACLme,EACI,mBACAxd,KALZ,YAgBxB,yBAAKnB,UAAU,YACX,wBAAIA,UAAU,gBAElB,yBAAKA,UAAU,cACX,2BACI6e,IAAI,8BACJ7e,UAAU,cAFd,4BAMA,8BACI2S,KAAK,IACLlW,GAAG,8BACHuD,UAAU,qBACVkD,KAAK,yBACLC,SAAUA,EACVC,MAAOgZ,KAGf,yBAAKpc,UAAU,cACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,wBACX,2BACIhE,KAAK,SACLgE,UAAU,4BACVoD,MAAM,6BCqX/BjE,gBAJS,SAACrD,GAAD,MAAY,CAChCc,SAAUd,EAAMc,YAGoB,CAAEqI,YAAU0T,WAArCxZ,EA9rBM,SAAC,GAOf,IANH+F,EAME,EANFA,OACAC,EAKE,EALFA,OACAwT,EAIE,EAJFA,OACA1T,EAGE,EAHFA,SACYvJ,EAEV,EAFFkB,SAAYlB,IACZ8R,EACE,EADFA,OACE,EAesB9K,oBAAS,GAf/B,mBAeKI,EAfL,KAeWC,EAfX,OAgB8BL,mBAAS,GAhBvC,mBAgBKqc,EAhBL,KAgBeC,EAhBf,OAiBsCtc,mBAAS,IAjB/C,gCAkBsBA,mBAjBJ,CAChB6E,MAAO,GACPlE,UAAW,GACXC,SAAU,GACVyE,MAAO,GACPkU,MAAO,GACPC,oBAAqB,GACrBC,iBAAkB,GAClBC,uBAAwB,GACxBlY,aAAc,GACd0B,eAAgB,GAChBC,SAAU,MAZZ,mBAkBKhL,EAlBL,KAkBWgS,EAlBX,OAmBkCnK,mBAAS,IAnB3C,mBAmBKuc,EAnBL,KAmBiBC,EAnBjB,OAoB8Dxc,mBAC5D,IArBF,mBAoBKyc,EApBL,KAoB+BC,EApB/B,OAuBwD1c,mBAAS,IAvBjE,mBAuBK2c,EAvBL,KAuB4BC,EAvB5B,KAyBIjB,EAAWvJ,iBAAO,MAClBwJ,EAAyBxJ,iBAAO,MAChCyJ,EAAsBzJ,iBAAO,MAE7BnO,EAAc,WAChB5D,GAAQ,GACRoC,KAKAoC,EAWA7L,EAXA6L,MACAlE,EAUA3H,EAVA2H,UACAC,EASA5H,EATA4H,SACAyE,EAQArM,EARAqM,MACAkU,EAOAvgB,EAPAugB,MACAC,EAMAxgB,EANAwgB,oBACAC,EAKAzgB,EALAygB,iBACAC,EAIA1gB,EAJA0gB,uBACAlY,EAGAxI,EAHAwI,aACA0B,EAEAlK,EAFAkK,eACAC,EACAnK,EADAmK,SAGEmY,GAAa,SAAC9c,GAChB,GAAc,UAAVA,EAAEE,IAAiB,CAAC,IACZ8B,EAAShC,EAAEI,OAAX4B,KACR,GAAa,UAATA,EAAkB,CAClB,IAAMsb,EAAWH,EAAShM,QAAQjP,MACjB,KAAbob,EACAvZ,EACI,GACA,kDAGJia,GAAc,SAACD,GAAD,4BAAoBA,GAApB,CAAgCT,OAC9CH,EAAShM,QAAQjP,MAAQ,SAE1B,GAAa,wBAATF,EAAgC,CACvC,IAAMub,EACFH,EAAuBjM,QAAQjP,MACJ,KAA3Bqb,EACAxZ,EACI,GACA,kDAGJma,GAA4B,SAACD,GAAD,4BACrBA,GADqB,CAExBV,OAEJH,EAAuBjM,QAAQjP,MAAQ,SAExC,GAAa,qBAATF,EAA6B,CACpC,IAAMwb,EAAsBH,EAAoBlM,QAAQjP,MAC5B,KAAxBsb,EACAzZ,EACI,GACA,kDAGJqa,GAAyB,SAACD,GAAD,4BAClBA,GADkB,CAErBX,OAEJH,EAAoBlM,QAAQjP,MAAQ,IAG5ClC,EAAE+B,mBAIJ0b,GAAY,SAACC,EAAOhT,GACR,UAAVgT,EACAM,GAAc,SAACD,GAAD,mBACPA,EAAW5jB,QAAO,SAACoI,GAAD,OAAOwb,EAAWpO,QAAQpN,KAAOmI,SAEzC,wBAAVgT,EACPQ,GAA4B,SAACD,GAAD,mBACrBA,EAAyB9jB,QACxB,SAACoI,GAAD,OAAO0b,EAAyBtO,QAAQpN,KAAOmI,SAGtC,qBAAVgT,GACPU,GAAyB,SAACD,GAAD,mBAClBA,EAAsBhkB,QACrB,SAACoI,GAAD,OAAO4b,EAAsBxO,QAAQpN,KAAOmI,UAMtD2T,GAAY,SAAChkB,GACfyjB,EAAYzjB,GACZsR,EAAQ,2BACDhS,GADA,IAEH0M,QACAlE,YACAC,WACAyE,QACAqU,yBACAlY,eACA0B,iBACAC,cAEJqZ,EAAcjD,GACdmD,EAA4BlD,GAC5BoD,EAAyBnD,IAGvBhZ,GAAW,SAACjC,GAAO,IAAD,EACIA,EAAEI,OAAlB4B,EADY,EACZA,KAAME,EADM,EACNA,MAGVyJ,EADS,cAAT3J,GAAiC,aAATA,EAChB,2BAAKrI,GAAN,kBAAaqI,EAAOE,EAAMQ,MAAM,QAE/B,2BAAK/I,GAAN,kBAAaqI,EAAOE,MAI7Boc,GAAc,SAACjkB,GACjBod,EAAO,2BACA9d,GADD,IAEFohB,MAAOgD,EACP/C,oBAAqBiD,EACrBhD,iBAAkBkD,KAEtBL,EAAY,IAWhB,OARAxhB,qBAAU,WACF0H,GA3HiBnC,GAAQ,KAgI9B,CAACmC,EAAQxJ,IAGR,kBAACmL,GAAA,EAAD,CACI/D,KAAMA,EACNgE,OAAQH,EACRI,SAAS,SACTC,UAAU,EACVC,KAAK,KACLjH,UAAU,eAEV,kBAAC6G,GAAA,EAAMuH,OAAP,CAAcC,aAAW,GACrB,kBAACxH,GAAA,EAAMyH,MAAP,6BAEJ,kBAACzH,GAAA,EAAMK,KAAP,KACI,yBAAKlH,UAAU,mBACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,yBACX,yBAAKA,UAAU,QACX,yBAAKA,UAAU,QACX,yBAAKA,UAAU,mCACX,uBACIA,UAAU,WACV4B,MAAO,CAAE8J,MAAO,YAFpB,UAMc,IAAbqT,EACG,uBACI1d,KAAK,IACL5E,GAAG,YACHuD,UAAU,YACVQ,QAAS,SAACU,GACNA,EAAE+B,iBACFuc,OANR,QAYA,uBACIne,KAAK,IACL5E,GAAG,YACHuD,UAAU,YACVQ,QAAS,SAACU,GACNA,EAAE+B,iBACFsc,GAAU,KANlB,SAaR,yBAAKvf,UAAU,gBAEnB,wBAAIA,UAAU,SAAd,aACA,yBAAKA,UAAU,OACX,yBAAKA,UAAU,YACX,uBAAGA,UAAU,YAAb,cAEJ,yBAAKA,UAAU,YACG,IAAb+e,EACG,2BACI/iB,KAAK,OACLkH,KAAK,QACLlD,UAAU,0BACVmD,SAAUA,GACVC,MAAOvI,EAAK0M,QAGhB,0BAAMvH,UAAU,OAAOkD,KAAK,SACvBqE,KAKjB,yBAAKvH,UAAU,OACX,yBAAKA,UAAU,YACX,uBAAGA,UAAU,YAAb,cAEJ,yBAAKA,UAAU,YACG,IAAb+e,EACG,2BACI/iB,KAAK,OACLkH,KAAK,YACLlD,UAAU,0BACVmD,SAAUA,GACVC,MAAOvI,EAAKwI,UAAUW,KAClB,QAIR,0BACIhE,UAAU,OACVkD,KAAK,aAEJG,EAAUW,KAAK,SAKhC,yBAAKhE,UAAU,OACX,yBAAKA,UAAU,YACX,uBAAGA,UAAU,YAAb,iBAEJ,yBAAKA,UAAU,YACG,IAAb+e,EACG,2BACI/iB,KAAK,OACLkH,KAAK,WACLlD,UAAU,0BACVmD,SAAUA,GACVC,MAAOvI,EAAKyI,SAASU,KAAK,QAG9B,0BACIhE,UAAU,OACVkD,KAAK,YAEJI,EAASU,KAAK,UAMnC,yBAAKhE,UAAU,QACX,yBAAKA,UAAU,QACX,yBAAKA,UAAU,mCACX,uBACIA,UAAU,WACV4B,MAAO,CAAE8J,MAAO,YAFpB,UAMc,IAAbqT,EACG,uBACI1d,KAAK,IACL5E,GAAG,YACHuD,UAAU,YACVQ,QAAS,SAACU,GACNA,EAAE+B,iBACFuc,OANR,QAYA,uBACIne,KAAK,IACL5E,GAAG,YACHuD,UAAU,YACVQ,QAAS,SAACU,GACNA,EAAE+B,iBACFsc,GAAU,KANlB,SAaR,yBAAKvf,UAAU,gBAEnB,wBAAIA,UAAU,SAAd,4BAGA,yBAAKA,UAAU,OACX,yBAAKA,UAAU,YACX,uBAAGA,UAAU,YAAb,oBAIJ,yBAAKA,UAAU,YACG,IAAb+e,EACG,4BACI7b,KAAK,eACLlD,UAAU,0BACVmD,SAAUA,GACVC,MAAOvI,EAAKqJ,cvEpWjD,CAAC,YAAa,YAAa,uBuEsW8BjD,KAChB,SAACC,EAAGC,GAAJ,OACI,4BACIiC,MAAOlC,EACPE,IAAKD,GAEJD,OAMjB,0BACIlB,UAAU,OACVkD,KAAK,gBAEJgB,KAKjB,yBAAKlE,UAAU,OACX,yBAAKA,UAAU,YACX,uBAAGA,UAAU,YAAb,oBAIJ,yBAAKA,UAAU,YACG,IAAb+e,EACG,yBAAK/e,UAAU,eACX,2BACIhE,KAAK,OACLkH,KAAK,iBACLlD,UAAU,kCACVmD,SAAUA,GACVC,MAAOvI,EAAK+K,iBAEhB,4BACI1C,KAAK,WACLlD,UAAU,0BACVmD,SAAUA,GACVC,MAAOvI,EAAKgL,UAEZ,4BAAQzC,MAAM,OAAd,SAMR,kBAAC,WAAD,KACK,IACD,0BACIpD,UAAU,OACVkD,KAAK,kBAEJ0C,GACG,IACR,0BACI5F,UAAU,OACVkD,KAAK,YAEJ2C,QAQ7B,yBAAK7F,UAAU,YACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,QACX,yBAAKA,UAAU,QACX,yBAAKA,UAAU,mCACX,uBACIA,UAAU,WACV4B,MAAO,CAAE8J,MAAO,YAFpB,UAMc,IAAbqT,EACG,uBACI1d,KAAK,IACL5E,GAAG,YACHuD,UAAU,YACVQ,QAAS,SAACU,GACNA,EAAE+B,iBACFuc,OANR,QAYA,uBACIne,KAAK,IACL5E,GAAG,YACHuD,UAAU,YACVQ,QAAS,SAACU,GACNA,EAAE+B,iBACFsc,GAAU,KANlB,SAaR,yBAAKvf,UAAU,gBAEnB,wBAAIA,UAAU,SAAd,iBACA,yBAAKA,UAAU,QACX,uBAAGA,UAAU,YAAb,mBAGc,IAAb+e,EACG,8BACI7b,KAAK,QACLlD,UAAU,0BACVmD,SAAUA,GACVwP,KAAK,IACLvP,MAAOvI,EAAKkN,QAGhB,0BAAM/H,UAAU,OAAOkD,KAAK,SACvB6E,IAIb,yBAAK/H,UAAU,QACX,uBAAGA,UAAU,YAAb,SACc,IAAb+e,EACG,kBAAC,WAAD,KACI,yBAAK/e,UAAU,qBACX,2BACIhE,KAAK,OACLgE,UAAU,0BACVkD,KAAK,QACL8a,WAAYA,GACZlH,IAAKuH,IAET,uBAAGre,UAAU,iBAEjB,wBAAIA,UAAU,cACTif,EAAWlb,OAAS,GACjBkb,EAAWhe,KACP,SAACC,EAAGC,GAAJ,OACI,wBAAIC,IAAKD,GACL,0BAAMnB,UAAU,cACXkB,EACD,0BACIlB,UAAU,cACVQ,QAAS,kBACLme,GACI,QACAxd,KALZ,YAkB5B,yBAAKnB,UAAU,OAAOkD,KAAK,SACvB,wBAAIlD,UAAU,QACTic,EAAMhb,KAAI,SAACC,EAAGC,GAAJ,OACP,wBAAIC,IAAKD,GAAID,SAMjC,yBAAKlB,UAAU,QACX,uBAAGA,UAAU,YAAb,wBAGc,IAAb+e,EACG,kBAAC,WAAD,KACI,yBAAK/e,UAAU,qBACX,2BACIhE,KAAK,OACLgE,UAAU,0BACVkD,KAAK,sBACL8a,WAAYA,GACZlH,IACIwH,IAGR,uBAAGte,UAAU,iBAEjB,wBAAIA,UAAU,6BACTmf,EAAyBpb,OACtB,GACAob,EAAyBle,KACrB,SAACC,EAAGC,GAAJ,OACI,wBAAIC,IAAKD,GACL,0BAAMnB,UAAU,6BACXkB,EACD,0BACIlB,UAAU,6BACVQ,QAAS,kBACLme,GACI,sBACAxd,KALZ,YAkB5B,yBACInB,UAAU,OACVkD,KAAK,uBAEL,wBAAIlD,UAAU,QACTkc,EAAoBjb,KACjB,SAACC,EAAGC,GAAJ,OACI,wBAAIC,IAAKD,GAAID,SAOrC,yBAAKlB,UAAU,QACX,uBAAGA,UAAU,YAAb,oBAGc,IAAb+e,EACG,kBAAC,WAAD,KACI,yBAAK/e,UAAU,qBACX,2BACIhE,KAAK,OACLgE,UAAU,0BACVkD,KAAK,mBACL8a,WAAYA,GACZlH,IACIyH,IAGR,uBAAGve,UAAU,iBAEjB,wBAAIA,UAAU,yBACTqf,EAAsBtb,OACnB,GACAsb,EAAsBpe,KAClB,SAACC,EAAGC,GAAJ,OACI,wBAAIC,IAAKD,GACL,0BAAMnB,UAAU,yBACXkB,EACD,0BACIlB,UAAU,yBACVQ,QAAS,kBACLme,GACI,mBACAxd,KALZ,YAkB5B,yBACInB,UAAU,OACVkD,KAAK,oBAEL,wBAAIlD,UAAU,QACTmc,EAAiBlb,KACd,SAACC,EAAGC,GAAJ,OACI,wBAAIC,IAAKD,GAAID,SAOrC,yBAAKlB,UAAU,QACX,uBAAGA,UAAU,YAAb,4BAGc,IAAb+e,EACG,8BACI7b,KAAK,yBACLlD,UAAU,0BACVmD,SAAUA,GACVwP,KAAK,IACLvP,MACIvI,EAAKuhB,yBAIb,0BACIpc,UAAU,OACVkD,KAAK,0BAEJkZ,KAKjB,yBAAKpc,UAAU,OACX,yBAAKA,UAAU,YACX,4BACIA,UAAU,8BACVQ,QAASmG,GAFb,WAOJ,yBAAK3G,UAAU,YACX,4BACIA,UAAU,8BACVQ,QAAS,WACLmG,IACA6G,MAJR,yBC5ezBrO,gBAJS,SAACrD,GAAD,MAAY,CAChCc,SAAUd,EAAMc,YAGoB,CACpCqI,YACA0T,UACA8G,U7B7KqB,SAAC/jB,GAAD,8CAAS,WAAO8C,GAAP,eAAAC,EAAA,sEAEpBC,EAAS,CACXL,QAAS,CACL,eAAgB,qBAJE,SAOpBF,IAAMQ,KAAK,WAAYjD,EAAKgD,GAPR,OAQ1BF,EAAS,CACLxC,K1DNa,c0DHS,gDAY1BwC,EAAS,CACLxC,K1DTc,a0DUdC,QAAS,KAAM6C,SAASD,OAdF,yDAAT,uD6B8KrBuZ,WACAsH,W7B3JsB,WACtB,MAAO,CACH1jB,K1DVmB,gBuFoKvBgD,W7BrJsB,WACtB,MAAO,CACHhD,K1DrCmB,gBuFyLvB+C,aAPWI,EAxKD,SAAC,GASR,IARHwZ,EAQE,EARFA,OACA8G,EAOE,EAPFA,UACAxa,EAME,EANFA,SACAmT,EAKE,EALFA,QACAsH,EAIE,EAJFA,WACA1gB,EAGE,EAHFA,WACAD,EAEE,EAFFA,UAEE,IADFnC,SAAYlB,EACV,EADUA,IAAKd,EACf,EADeA,MAAOW,EACtB,EADsBA,KAAMC,EAC5B,EAD4BA,QAC5B,EAMEuQ,KANF,mBAGEE,GAHF,WAIEM,EAJF,KAKEJ,EALF,KAQIK,EAAc,CAChBtI,aAAc,YACd0B,eAAgB,GAChBC,SAAU,OAXZ,EAcsBnD,mBAAS8J,GAd/B,mBAcK3R,EAdL,KAcWgS,EAdX,OAe0BnK,oBAAS,GAfnC,gCAgBsBA,oBAAS,IAhB/B,mBAgBKoK,EAhBL,KAgBWC,EAhBX,OAiBsCrK,oBAAS,GAjB/C,mBAiBKid,EAjBL,KAiBmBC,EAjBnB,KAmBM1b,EAA2CrJ,EAA3CqJ,aAAc0B,EAA6B/K,EAA7B+K,eAAgBC,EAAahL,EAAbgL,SAEhC1C,EAAW,SAACjC,GAAO,IAAD,EACIA,EAAEI,OAAlB4B,EADY,EACZA,KAAME,EADM,EACNA,MACdyJ,EAAQ,2BAAKhS,GAAN,kBAAaqI,EAAOE,KAC3B6I,IACAE,EAAW,8CA8Cf,OA5BA3O,qBAAU,WACFsP,IACa,IAATvR,GACA0J,EACI,IACA,oEAGR8H,GAAQ,IAGRnS,IACAqK,EAAS,GAAIrK,EAAMF,KACnBsE,KAGAxD,IACAW,aAAa6Q,QACb/H,EACI,IACA,sIAEJya,IACAtH,EAAQ,GACRrZ,OAEL,CAACvD,EAASZ,EAAOkS,IAGhB,yBAAK9M,UAAU,UACV2f,EACG,kBAAC,GAAD,CACIza,OAAQya,EACRxa,OAAQ,kBAAMya,GAAiBD,IAC/BnS,OAAQ,WACJiS,EAAU/jB,GACV6Q,OAGR,KACJ,yBAAKvM,UAAU,OACX,yBAAKA,UAAU,wBACX,0BAAMA,UAAU,OAAOmN,SAzDtB,SAACjM,GAGd,GAFAA,EAAE+B,iBAEmB,KAAjBiB,GAA0C,KAAnB0B,GAAsC,KAAbC,EAChD,OAAOZ,EACH,GACA,iDAGJ0T,EAAO,CAAEzU,eAAc0B,iBAAgBC,aACvCgH,EAAQL,GACRoT,GAAgB,KA+CJ,yBAAK5f,UAAU,cACX,wBAAIA,UAAU,SAAd,4BxEvHjB,CAAC,YAAa,YAAa,uBwEwHUiB,KAAI,SAACC,EAAGC,GAAJ,OACpB,yBAAKnB,UAAU,aAAaoB,IAAKD,GAC7B,2BACInF,KAAK,QACLkH,KAAK,eACLzG,GAAE,sBAAiB0E,GACnBnB,UAAU,yBACVoD,MAAOlC,EACPiC,SAAUA,EACViB,QAASF,IAAiBhD,IAE9B,2BACImD,QAAO,sBAAiBlD,GACxBnB,UAAU,oBAETkB,QAKjB,yBAAKlB,UAAU,cACX,2BAAOA,UAAU,cAAjB,mBAGA,yBAAKA,UAAU,eACX,2BACIhE,KAAK,SACLS,GAAG,sBACHuD,UAAU,qBACVkD,KAAK,iBACL6H,YAAY,WACZ5H,SAAUA,EACVC,MAAOwC,IAEX,4BACI1C,KAAK,WACLlD,UAAU,qBACVmD,SAAUA,EACVC,MAAOyC,GAEP,4BAAQzC,MAAM,OAAd,UAIZ,yBAAKpD,UAAU,cACX,4BAAQA,UAAU,oCAAlB,2BCzHb6f,GApCE,WAAO,IACZtiB,EAAWF,cAAXE,OACAhC,EAAS8b,KAAYC,MAAM/Z,GAA3BhC,KACF8D,EAAUC,cAiBhB,OACI,yBAAK7C,GAAG,YACJ,kBAACkE,EAAA,EAAD,KACI,wBAAIX,UAAU,SAAd,eACA,yBAAKA,UAAU,YACX,yBAAKA,UAAU,eACf,uBAAGA,UAAS,eAAUzE,GAAQ,EAAI,SAAW,KAA7C,KACA,uBAAGyE,UAAS,eAAUzE,GAAQ,EAAI,SAAW,KAA7C,KACA,uBAAGyE,UAAS,eAAUzE,GAAQ,EAAI,SAAW,KAA7C,MAtBW,IAAnBwN,SAASxN,GACF,kBAAC,GAAD,MACmB,IAAnBwN,SAASxN,GACT,kBAAC,GAAD,MACmB,IAAnBwN,SAASxN,GACT,kBAAC,GAAD,WAEP8D,EAAQoB,KAAK,CACTnD,SAAS,aACTC,OAAQ,cCiIT4B,gBAJS,SAACrD,GAAD,MAAY,CAChCI,UAAWJ,EAAMI,aAGmB,CACpCqC,UACA0G,YACAlG,YACAC,cAJWG,EAjJK,SAAC,GAMd,IALHZ,EAKE,EALFA,QACA0G,EAIE,EAJFA,SACAlG,EAGE,EAHFA,UACAC,EAEE,EAFFA,WAEE,IADF9C,UAAavB,EACX,EADWA,KAAMC,EACjB,EADiBA,MAEb4R,EAAc,CAChBhH,UAAW,GACXC,SAAU,GACVgH,MAAO,GACPsQ,SAAU,IALZ,EAQsBra,mBAAS8J,GAR/B,mBAQK3R,EARL,KAQWgS,EARX,KAUMrH,EAAyC3K,EAAzC2K,UAAWC,EAA8B5K,EAA9B4K,SAAUgH,EAAoB5R,EAApB4R,MAAOsQ,EAAaliB,EAAbkiB,SAE9B5Z,EAAW,SAACjC,GAAO,IAAD,EACIA,EAAEI,OAAlB4B,EADY,EACZA,KAAME,EADM,EACNA,MACdyJ,EAAQ,2BAAKhS,GAAN,kBAAaqI,EAAOE,MA6B/B,OAZA5F,qBAAU,WACF5C,IACAqK,EAAS,GAAIrK,EAAMF,KACnBsE,KAGArE,IACAsK,EAAS,IAAK,qBACdlG,OAEL,CAACpE,EAAMC,IAGN,yBAAKgH,MAAO,CAAE1B,OAAQ,SAClB,yBAAKF,UAAU,mBACX,yBAAKA,UAAU,gCACX,yBAAKA,UAAU,wBACX,0BAAMmN,SA/BT,SAACjM,GAGd,GAFAA,EAAE+B,iBAEEgK,KAAKC,UAAUrS,KAAUoS,KAAKC,UAAUV,GACxC,OAAOvH,EACH,GACA,iDAGJ1G,EAAQ,2BAAK1D,GAAN,IAAYmB,KAAM,WACzB6Q,EAAQL,IAqB8BxM,UAAU,gBAChC,wBAAIA,UAAU,eAAd,kBACA,yBAAKA,UAAU,cACX,2BACIqE,QAAQ,iBACRrE,UAAU,cAFd,cAMA,2BACIhE,KAAK,OACLS,GAAG,iBACHyG,KAAK,YACLlD,UAAU,qBACVmD,SAAUA,EACVC,MAAOoC,KAGf,yBAAKxF,UAAU,cACX,2BACIqE,QAAQ,gBACRrE,UAAU,cAFd,aAMA,2BACIhE,KAAK,OACLS,GAAG,gBACHyG,KAAK,WACLlD,UAAU,qBACVmD,SAAUA,EACVC,MAAOqC,KAGf,yBAAKzF,UAAU,cACX,2BACIqE,QAAQ,aACRrE,UAAU,cAFd,SAMA,2BACIhE,KAAK,QACLS,GAAG,aACHyG,KAAK,QACLlD,UAAU,qBACVmD,SAAUA,EACVC,MAAOqJ,KAGf,yBAAKzM,UAAU,cACX,2BACIqE,QAAQ,gBACRrE,UAAU,cAFd,YAMA,2BACIhE,KAAK,WACLkH,KAAK,WACLzG,GAAG,gBACHuD,UAAU,qBACVmD,SAAUA,EACVC,MAAO2Z,KAGf,2BACI/gB,KAAK,SACLoH,MAAM,SACNpD,UAAU,6CC+B3Bb,gBAJS,SAACrD,GAAD,MAAY,CAChCI,UAAWJ,EAAMI,aAGmB,CACpC+I,YACA1G,UACAS,aACAD,aAJWI,EAlJD,SAAC,GAMR,IALH8F,EAKE,EALFA,SACA1G,EAIE,EAJFA,QACAS,EAGE,EAHFA,WACAD,EAEE,EAFFA,UAEE,IADF7C,UAAavB,EACX,EADWA,KAAMC,EACjB,EADiBA,MACjB,EAMEmR,KANF,mBAEEO,EAFF,KAGEL,EAHF,KAIEM,EAJF,KAKEJ,EALF,KAQMnQ,EAAS8P,cAAT9P,KAERG,aAAa6Q,QAEb,IAAMR,EAAc,CAChBC,MAAO,GACPsQ,SAAU,GACV+C,UAAW,IAfb,EAiBsBpd,mBAAS8J,GAjB/B,mBAiBK3R,EAjBL,KAiBWgS,EAjBX,KAmBMJ,EAA+B5R,EAA/B4R,MAAOsQ,EAAwBliB,EAAxBkiB,SAAU+C,EAAcjlB,EAAdilB,UAEnB3c,EAAW,SAACjC,GAAO,IAAD,EACIA,EAAEI,OAAlB4B,EADY,EACZA,KAAME,EADM,EACNA,MACdyJ,EAAQ,2BAAKhS,GAAN,kBAAaqI,EAAOE,KAC3B6I,IACAE,EAAW,8CAiCf,OAfA3O,qBAAU,WACF5C,IACAqK,EAAS,GAAIrK,EAAMF,KACnBsE,KAGArE,IACAsK,EACI,IACA,gEAEJlG,OAEL,CAACpE,EAAMC,IAGN,yBAAKoF,UAAU,UACVsM,EACD,0BAAMtM,UAAU,OAAOmN,SAjCd,SAACjM,GAGd,GAFAA,EAAE+B,iBAEY,KAAVwJ,GAA6B,KAAbsQ,GAAmBA,IAAa+C,EAChD,OAAO7a,EACH,GACA,iDAGJ1G,EAAQ,2BAAK1D,GAAN,IAAYmB,KAAMA,EAAK+jB,gBAC9BlT,EAAQL,GACRD,MAuBI,yBAAKvM,UAAU,cACX,yBAAKA,UAAU,YACX,yBAAKA,UAAU,YACX,2BAAOA,UAAU,cAAjB,UAEJ,yBAAKA,UAAU,YACX,2BACIhE,KAAK,QACLkH,KAAK,QACLlD,UAAU,qBACVmD,SAAUA,EACVC,MAAOqJ,OAKvB,yBAAKzM,UAAU,cACX,yBAAKA,UAAU,YACX,yBAAKA,UAAU,YACX,2BAAOA,UAAU,cAAjB,aAEJ,yBAAKA,UAAU,YACX,2BACIhE,KAAK,WACLkH,KAAK,WACLlD,UAAU,qBACVmD,SAAUA,EACVC,MAAO2Z,OAKvB,yBAAK/c,UAAU,cACX,yBAAKA,UAAU,YACX,yBAAKA,UAAU,YACX,2BAAOA,UAAU,cAAjB,qBAIJ,yBAAKA,UAAU,YACX,2BACIhE,KAAK,WACLkH,KAAK,YACLlD,UAAU,qBACVmD,SAAUA,EACVC,MAAO0c,OAKvB,yBAAK9f,UAAU,cACX,yBAAKA,UAAU,YACX,yBAAKA,UAAU,wBACX,2BACIhE,KAAK,SACLoH,MAAM,SACNpD,UAAU,6CC4C3Bb,gBAJS,SAACrD,GAAD,MAAY,CAChCa,cAAeb,EAAMa,iBAGe,CACpCsI,YACA+a,YpC/KuB,SAAC1kB,GAAD,OAAc,SAACkD,GACtCA,EAAS,CACLxC,KvDcoB,euDbpBC,QAASX,MoC6Kb8c,YAHWjZ,EAzKD,SAAC,GAAiE,IAA/D8F,EAA8D,EAA9DA,SAAU+a,EAAoD,EAApDA,YAAa5H,EAAuC,EAAvCA,QAA0B7c,EAAa,EAA9BoB,cAAiBpB,KAAa,EAMvEwQ,KANuE,mBAEvEO,EAFuE,KAGvEL,EAHuE,KAIvEM,EAJuE,KAKvEJ,EALuE,KAQrE9M,EAAUC,cAEVkN,EAAc,CAChBhH,UAAW,GACXC,SAAU,GACVwa,UAAW,GACXtT,QAAS,eAd8D,EAiBnDjK,mBAAS8J,GAjB0C,mBAiBpE3R,EAjBoE,KAiB9DgS,EAjB8D,OAkBnDnK,oBAAS,GAlB0C,mBAkBpEoK,EAlBoE,KAkB9DC,EAlB8D,OAmB/CrK,oBAAS,GAnBsC,mBAmBpE8K,EAnBoE,KAmB5DC,EAnB4D,KAqBnEjI,EAA4C3K,EAA5C2K,UAAWC,EAAiC5K,EAAjC4K,SAAUwa,EAAuBplB,EAAvBolB,UAAWtT,EAAY9R,EAAZ8R,QAElCxJ,EAAW,SAACjC,GAAO,IAAD,EACIA,EAAEI,OAAlB4B,EADY,EACZA,KAAME,EADM,EACNA,MACdyJ,EAAQ,2BAAKhS,GAAN,kBAAaqI,EAAOE,KAC3B6I,IACAE,EAAW,8CA4Cf,OApBA3O,qBAAU,WACFsP,IACa,IAATvR,GACA0J,EACI,IACA,oEAGR8H,GAAQ,IAGRS,IACA4K,EAAQ,GACR/Y,EAAQoB,KAAK,CACTnD,SAAU,mBACVC,OAAQ,cAGjB,CAACuP,EAAMU,IAGN,yBAAKxN,UAAU,UACVsM,EACD,0BAAMtM,UAAU,OAAOmN,SA5Cd,SAACjM,GAGd,GAFAA,EAAE+B,iBAGgB,KAAduC,GACa,KAAbC,GACc,KAAdwa,GACY,KAAZtT,EAEA,OAAO1H,EACH,GACA,iDAGJ+a,EAAYnlB,GACZgS,EAAQL,GACRD,IACAkB,GAAU,KA4BN,yBAAKzN,UAAU,cACX,yBAAKA,UAAU,YACX,yBAAKA,UAAU,YACX,2BAAOA,UAAU,cAAjB,eAEJ,yBAAKA,UAAU,YACX,2BACIhE,KAAK,OACLkH,KAAK,YACLlD,UAAU,qBACVmD,SAAUA,EACVC,MAAOoC,OAKvB,yBAAKxF,UAAU,cACX,yBAAKA,UAAU,YACX,yBAAKA,UAAU,YACX,2BAAOA,UAAU,cAAjB,cAEJ,yBAAKA,UAAU,YACX,2BACIhE,KAAK,OACLkH,KAAK,WACLlD,UAAU,qBACVmD,SAAUA,EACVC,MAAOqC,OAKvB,yBAAKzF,UAAU,cACX,yBAAKA,UAAU,YACX,yBAAKA,UAAU,YACX,2BAAOA,UAAU,cAAjB,gBAEJ,yBAAKA,UAAU,YACX,2BACIhE,KAAK,SACLkH,KAAK,YACLlD,UAAU,qBACVmD,SAAUA,EACVC,MAAO6c,OAKvB,yBAAKjgB,UAAU,cACX,yBAAKA,UAAU,YACX,yBAAKA,UAAU,YACX,2BAAOA,UAAU,cAAjB,gBAEJ,yBAAKA,UAAU,YACX,4BACIA,UAAU,qBACVkD,KAAK,W/DjJpB,CACT,cACA,UACA,UACA,UACA,SACA,WACA,oBACA,YACA,UACA,QACA,YACA,UACA,aACA,UACA,UACA,aACA,WACA,UACA,UACA,SACA,QACA,UACA,SACA,UACA,uBACA,WACA,SACA,yBACA,SACA,WACA,eACA,UACA,WACA,WACA,aACA,iBACA,OACA,QACA,QACA,WACA,QACA,eACA,aACA,gBACA,UACA,cACA,OACA,SACA,iBACA,UACA,WACA,WACA,qBACA,UACA,QACA,cACA,oBACA,UACA,WACA,mBACA,gBACA,OACA,UACA,SACA,mBACA,qBACA,QACA,SACA,UACA,UACA,QACA,YACA,SACA,YACA,UACA,OACA,YACA,WACA,SACA,gBACA,SACA,QACA,WACA,YACA,UACA,UACA,QACA,YACA,OACA,OACA,UACA,cACA,SACA,QACA,UACA,QACA,SACA,SACA,aACA,QACA,SACA,kBACA,OACA,SACA,UACA,UACA,UACA,QACA,gBACA,YACA,aACA,QACA,YACA,aACA,SACA,WACA,WACA,OACA,QACA,aACA,YACA,SACA,UACA,SACA,WACA,aACA,aACA,UACA,aACA,UACA,QACA,cACA,uBACA,gBACA,cACA,YACA,QACA,UACA,SACA,OACA,WACA,YACA,SACA,mBACA,WACA,OACA,cACA,SACA,WACA,cACA,QACA,UACA,UACA,SACA,SACA,0BACA,QACA,aACA,YACA,eACA,UACA,SACA,aACA,eACA,YACA,WACA,WACA,eACA,cACA,QACA,YACA,mBACA,WACA,aACA,YACA,QACA,WACA,YACA,SACA,cACA,QACA,SACA,aACA,WACA,WACA,eACA,OACA,QACA,oBACA,UACA,SACA,eACA,iBACA,SACA,UACA,uBACA,iBACA,UACA,aACA,YACA,UACA,sBACA,QACA,SACA,Y+D1DuCjC,KAAI,SAACC,EAAGC,GAAJ,OACf,4BAAQiC,MAAOlC,EAAGE,IAAKD,GAClBD,UAOzB,yBAAKlB,UAAU,cACX,yBAAKA,UAAU,YACX,yBAAKA,UAAU,wBACX,2BACIhE,KAAK,SACLoH,MAAM,SACNpD,UAAU,6CCgB3Bb,gBAJS,SAACrD,GAAD,MAAY,CAChCa,cAAeb,EAAMa,iBAGe,CACpCsI,YACAmT,WACA8H,erC3J0B,SAAC5kB,GAAD,8CAAc,WAAOkD,GAAP,eAAAC,EAAA,sEAE9BC,EAAS,CACXL,QAAS,CACL,eAAgB,qBAJY,SAO9BF,IAAMQ,KAAK,gBAAiBrD,EAAUoD,GAPR,OAQpCF,EAAS,CACLxC,KvDHkB,mBuDNc,gDAYpCwC,EAAS,CACLxC,KvDXmB,mBuDYnBC,QAAS,KAAM6C,SAASD,OAdQ,yDAAd,uDqC4J1B6gB,WrCxIsB,WACtB,MAAO,CACH1jB,KvDfmB,gB4FsJvBgD,WrClIsB,WACtB,MAAO,CACHhD,KvD1CmB,iB4FqKZmD,EAtKD,SAAC,GAOR,IANH8F,EAME,EANFA,SACAmT,EAKE,EALFA,QACA8H,EAIE,EAJFA,eACAR,EAGE,EAHFA,WACA1gB,EAEE,EAFFA,WAEE,IADFrC,cAAiBrB,EACf,EADeA,SAAUV,EACzB,EADyBA,MAAOW,EAChC,EADgCA,KAAMC,EACtC,EADsCA,QAElCgR,EAAc,CAChBtJ,KAAM,GACNid,SAAU,GACVC,SAAU,GACVC,QAA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","file":"static/js/main.b817f22e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/speedtest_sample.ce73b389.jpg\";","module.exports = __webpack_public_path__ + \"static/media/computer_specs_sample.d66a305a.jpg\";","import { SET_ALERT, REMOVE_ALERT } from './../actions/types';\n\nconst initialState = {\n    redirect: '',\n    msg: '',\n};\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n        case SET_ALERT:\n            return {\n                ...state,\n                redirect: action.payload.redirect,\n                msg: action.payload.msg,\n            };\n        case REMOVE_ALERT:\n            return {\n                ...state,\n                ...initialState,\n            };\n        default:\n            return state;\n    }\n};\n","import {\n    ADD_USER,\n    CLEAR_ERROR,\n    USERS_ERROR,\n    CLEAR_USER,\n    VERIFY_USER,\n    LOAD_USER,\n    LOGIN_USER,\n    GET_USER_INFO,\n    LOGOUT_USER,\n} from './../actions/types';\n\nconst initialState = {\n    user: null,\n    error: null,\n    info: null,\n};\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n        case ADD_USER:\n        case LOAD_USER:\n            return {\n                ...state,\n                user: action.payload,\n            };\n        case CLEAR_USER:\n            return {\n                ...state,\n                user: null,\n            };\n        case VERIFY_USER:\n        case LOGIN_USER:\n            localStorage.setItem('token', action.payload.token);\n            return state;\n        case LOGOUT_USER:\n            localStorage.removeItem('token');\n            return {\n                ...state,\n                user: null,\n                info: null,\n            };\n        case USERS_ERROR:\n            return {\n                ...state,\n                error: action.payload,\n            };\n        case GET_USER_INFO:\n            return {\n                ...state,\n                info: action.payload,\n            };\n        case CLEAR_ERROR:\n            return {\n                ...state,\n                error: null,\n            };\n        default:\n            return state;\n    }\n};\n","import {\n    ADD_RESUME,\n    RESUMES_ERROR,\n    CLEAR_RESUME,\n    CLEAR_ERROR,\n} from '../actions/types';\n\nconst initialState = {\n    resume: null,\n    error: null,\n};\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n        case ADD_RESUME:\n            return {\n                ...state,\n                resume: { ...state.resume, ...action.payload },\n            };\n        case CLEAR_RESUME:\n            return {\n                ...state,\n                resume: null,\n            };\n        case CLEAR_ERROR:\n            return {\n                ...state,\n                error: null,\n            };\n        case RESUMES_ERROR:\n            return {\n                ...state,\n                error: action.payload,\n            };\n        default:\n            return state;\n    }\n};\n","import {\n    GET_CANDIDATES,\n    CANDIDATES_ERROR,\n    VIEW_RESUME,\n    CLEAR_RESUME,\n    ADD_CANDIDATE,\n    REMOVE_CANDIDATE,\n    GET_SHORTLISTED,\n    SET_SHORTLISTED,\n} from './../actions/types';\n\nconst initialState = {\n    candidates: null,\n    next: null,\n    previous: null,\n    total: null,\n    shortlist: [],\n    shortlistedInfo: [],\n    error: null,\n    resume: null,\n};\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n        case GET_CANDIDATES:\n            return {\n                ...state,\n                candidates: action.payload.candidates,\n                next: action.payload.next,\n                previous: action.payload.previous,\n                total: action.payload.total,\n            };\n        case CANDIDATES_ERROR:\n            return {\n                ...state,\n                error: action.payload,\n            };\n        case VIEW_RESUME:\n            return {\n                ...state,\n                resume: action.payload,\n            };\n        case SET_SHORTLISTED:\n            return {\n                ...state,\n                shortlist: [action.payload],\n            };\n        case ADD_CANDIDATE:\n            return {\n                ...state,\n                shortlist: [...state.shortlist, action.payload],\n            };\n        case REMOVE_CANDIDATE:\n            return {\n                ...state,\n                shortlist: state.shortlist.filter(\n                    (id) => id !== action.payload\n                ),\n            };\n        case GET_SHORTLISTED:\n            return {\n                ...state,\n                shortlistedInfo: action.payload,\n            };\n        case CLEAR_RESUME:\n            return {\n                ...state,\n                resume: null,\n            };\n        default:\n            return state;\n    }\n};\n","import { ADD_FILTER, UPDATE_FILTER, REMOVE_FILTER } from './../actions/types';\n\nconst initialState = {\n    filter: {},\n};\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n        case ADD_FILTER:\n            return {\n                ...state,\n                filter: { ...state.filter, ...action.payload },\n            };\n        case UPDATE_FILTER:\n            return {\n                filter: { ...state.filter, ...action.payload },\n            };\n        case REMOVE_FILTER:\n            return {\n                filter: action.payload,\n            };\n        default:\n            return state;\n    }\n};\n","import {\n    ADD_EMPLOYER,\n    EMPLOYERS_ERROR,\n    EMPLOYER_STEP,\n    CLEAR_EMPLOYER,\n    SET_SUCCESS,\n    CLEAR_ERROR,\n} from './../actions/types';\n\nconst initialState = {\n    employer: null,\n    error: null,\n    step: 0,\n    success: false,\n};\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n        case ADD_EMPLOYER:\n            return {\n                ...state,\n                employer: { ...state.employer, ...action.payload },\n            };\n        case EMPLOYERS_ERROR:\n            return {\n                ...state,\n                error: action.payload,\n            };\n        case EMPLOYER_STEP:\n            return {\n                ...state,\n                step: action.payload,\n            };\n        case CLEAR_EMPLOYER:\n            return {\n                ...state,\n                employer: null,\n                success: true,\n            };\n        case SET_SUCCESS:\n            return {\n                ...state,\n                success: false,\n            };\n        case CLEAR_ERROR:\n            return {\n                ...state,\n                error: null,\n            };\n        default:\n            return state;\n    }\n};\n","import {\n    ADD_JOB,\n    CLEAR_JOB,\n    JOBS_ERROR,\n    CLEAR_ERROR,\n    JOB_STEP,\n    SET_SUCCESS,\n    GET_JOBS,\n    CLEAR_DETAILS,\n    VIEW_DETAILS,\n} from './../actions/types';\n\nconst initialState = {\n    jobs: null,\n    job: null,\n    error: null,\n    step: 0,\n    success: false,\n    details: null,\n    next: null,\n    previous: null,\n    total: null,\n};\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n        case ADD_JOB:\n            return {\n                ...state,\n                job: { ...state.job, ...action.payload },\n            };\n        case CLEAR_JOB:\n            return {\n                ...state,\n                job: null,\n                success: true,\n            };\n        case CLEAR_ERROR:\n            return {\n                ...state,\n                error: null,\n            };\n        case JOB_STEP:\n            return {\n                ...state,\n                step: action.payload,\n            };\n        case SET_SUCCESS:\n            return {\n                ...state,\n                success: false,\n            };\n        case JOBS_ERROR:\n            return {\n                ...state,\n                error: action.payload,\n            };\n        case VIEW_DETAILS:\n            return {\n                ...state,\n                details: action.payload,\n            };\n        case GET_JOBS:\n            return {\n                ...state,\n                jobs: action.payload.job,\n                candidates: action.payload.candidates,\n                next: action.payload.next,\n                previous: action.payload.previous,\n                total: action.payload.total,\n            };\n        case CLEAR_DETAILS:\n            return {\n                ...state,\n                details: null,\n            };\n        default:\n            return state;\n    }\n};\n","import { combineReducers } from 'redux';\nimport alertReducer from './alertReducer';\nimport userReducer from './userReducer';\nimport resumeReducer from './resumeReducer';\nimport candidateReducer from './candidateReducer';\nimport filterReducer from './filterReducer';\nimport employerReducer from './employerReducer';\nimport jobReducer from './jobReducer';\n\nexport default combineReducers({\n    alertState: alertReducer,\n    userState: userReducer,\n    resumeState: resumeReducer,\n    candidateState: candidateReducer,\n    filterState: filterReducer,\n    employerState: employerReducer,\n    jobState: jobReducer,\n});\n","export const SET_ALERT = 'SET_ALERT';\nexport const REMOVE_ALERT = 'REMOVE_ALERT';\nexport const ADD_USER = 'ADD_USER';\nexport const CLEAR_USER = 'CLEAR_USER';\nexport const VERIFY_USER = 'VERIFY_USER';\nexport const LOGIN_USER = 'LOGIN_USER';\nexport const LOGOUT_USER = 'LOGOUT_USER';\nexport const LOAD_USER = 'LOAD_USER';\nexport const USERS_ERROR = 'USERS_ERROR';\nexport const GET_USER_INFO = 'GET_USER_INFO';\nexport const ADD_RESUME = 'ADD_RESUME';\nexport const CLEAR_RESUME = 'CLEAR_RESUME';\nexport const VIEW_RESUME = 'VIEW_RESUME';\nexport const RESUMES_ERROR = 'RESUMES_ERROR';\nexport const CLEAR_ERROR = 'CLEAR_ERROR';\nexport const GET_CANDIDATES = 'GET_CANDIDATES';\nexport const CANDIDATES_ERROR = 'CANDIDATES_ERROR';\nexport const ADD_FILTER = 'ADD_FILTER';\nexport const UPDATE_FILTER = 'UPDATE_FILTER';\nexport const REMOVE_FILTER = 'REMOVE_FILTER';\nexport const ADD_CANDIDATE = 'ADD_CANDIDATE';\nexport const REMOVE_CANDIDATE = 'REMOVE_CANDIDATE';\nexport const GET_SHORTLISTED = 'GET_SHORTLISTED';\nexport const SET_SHORTLISTED = 'SET_SHORTLISTED';\nexport const ADD_JOB = 'ADD_JOB';\nexport const CLEAR_JOB = 'CLEAR_JOB';\nexport const JOBS_ERROR = 'JOBS_ERROR';\nexport const ADD_EMPLOYER = 'ADD_EMPLOYER';\nexport const GET_JOBS = 'GET_JOBS';\nexport const EMPLOYERS_ERROR = 'EMPLOYERS_ERRROR';\nexport const JOB_STEP = 'JOB_STEP';\nexport const EMPLOYER_STEP = 'EMPLOYER_STEP';\nexport const SUBMIT_EMPLOYER = 'SUBMIT_EMPLOYER';\nexport const CLEAR_EMPLOYER = 'CLEAR_EMPLOYER';\nexport const SET_SUCCESS = 'SET_SUCCESS';\nexport const CLEAR_DETAILS = 'CLEAR_DETAILS';\nexport const VIEW_DETAILS = 'VIEW_DETAILS';\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReducer from './state/reducers';\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n    rootReducer,\n    initialState,\n    composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n","import { useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\n\nconst ScrollToTop = () => {\n    const { pathname, search } = useLocation();\n\n    useEffect(\n        () => () => {\n            try {\n                window.scroll({\n                    top: 0,\n                    left: 0,\n                    behavior: 'smooth',\n                });\n            } catch (error) {\n                window.scrollTo(0, 0);\n            }\n        },\n        [pathname, search]\n    );\n\n    return null;\n};\n\nexport default ScrollToTop;\n","import { openPopupWidget } from 'react-calendly';\n\nexport const talkRecruiter = () => {\n    return openPopupWidget({\n        url: 'https://calendly.com/draftsourcevirtual/talktoarecruiter',\n    });\n};\n","import axios from 'axios';\n\nconst setAuthToken = (token) => {\n    if (token) {\n        axios.defaults.headers.common['x-auth-token'] = token;\n    } else {\n        delete axios.defaults.headers.common['x-auth-token'];\n    }\n};\n\nexport default setAuthToken;\n","import axios from 'axios';\nimport setAuthToken from './../../utils/setAuthToken';\nimport {\n    ADD_USER,\n    USERS_ERROR,\n    CLEAR_ERROR,\n    CLEAR_USER,\n    VERIFY_USER,\n    LOAD_USER,\n    LOGIN_USER,\n    GET_USER_INFO,\n    LOGOUT_USER,\n} from './types';\n\n// Add user\nexport const addUser = (user) => async (dispatch) => {\n    try {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        const res = await axios.post('/api/auth/signup', user, config);\n        dispatch({\n            type: ADD_USER,\n            payload: res.data,\n        });\n    } catch (error) {\n        dispatch({\n            type: USERS_ERROR,\n            payload: error.response.data,\n        });\n    }\n};\n\n// Clear user\nexport const clearUser = () => {\n    return {\n        type: CLEAR_USER,\n    };\n};\n\n// Clear error\nexport const clearError = () => {\n    return {\n        type: CLEAR_ERROR,\n    };\n};\n\n// Verify user\nexport const verifyUser = (token) => async (dispatch) => {\n    try {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        const res = await axios.put('/api/auth/verify', token, config);\n        dispatch({\n            type: VERIFY_USER,\n            payload: res.data,\n        });\n        loadUser()(dispatch);\n    } catch (error) {\n        dispatch({\n            type: USERS_ERROR,\n            payload: error.response.data,\n        });\n    }\n};\n\n// Load user\nexport const loadUser = () => async (dispatch) => {\n    setAuthToken(localStorage.token);\n    try {\n        const res = await axios.get('/api/auth');\n        dispatch({\n            type: LOAD_USER,\n            payload: res.data,\n        });\n    } catch (error) {\n        dispatch({\n            type: USERS_ERROR,\n            payload: error.response.data,\n        });\n    }\n};\n\n// Login user\nexport const loginUser = (user) => async (dispatch) => {\n    try {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        const res = await axios.post('/api/auth/login', user, config);\n        dispatch({\n            type: LOGIN_USER,\n            payload: res.data,\n        });\n        loadUser()(dispatch);\n    } catch (error) {\n        dispatch({\n            type: USERS_ERROR,\n            payload: error.response.data,\n        });\n    }\n};\n\n// Get user info\nexport const getUserInfo = () => async (dispatch) => {\n    try {\n        const res = await axios.get('/api/auth/get-user-info');\n        dispatch({\n            type: GET_USER_INFO,\n            payload: res.data,\n        });\n    } catch (error) {\n        dispatch({\n            type: USERS_ERROR,\n            payload: error.response.data,\n        });\n    }\n};\n\n// Logout user\nexport const logoutUser = () => {\n    return {\n        type: LOGOUT_USER,\n    };\n};\n","import React, { Fragment } from 'react';\nimport { Navbar, Nav } from 'react-bootstrap';\nimport { NavLink, useHistory } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\n// Images\nimport draftsourceLogo from './../images/draftsource_logo.svg';\n\n// Components\nimport { talkRecruiter } from './../components/TalkRecruiter';\n\n// Actions\nimport { logoutUser } from './../state/actions/userAction';\n\nconst Header = ({ logoutUser, userState: { user } }) => {\n    const history = useHistory();\n\n    const onLogout = () => {\n        logoutUser();\n        history.push('/login');\n    };\n\n    return (\n        <Navbar bg=\"white\" expand=\"lg\" id=\"header\">\n            <Navbar.Brand as={NavLink} to=\"/\">\n                <img\n                    src={draftsourceLogo}\n                    className=\"d-inline-block align-top\"\n                    alt=\"Draftsource Logo\"\n                    height=\"40\"\n                />\n            </Navbar.Brand>\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n            <Navbar.Collapse id=\"basic-navbar-nav\" className=\"mt-2\">\n                <Nav className=\"mr-auto\">\n                    <Nav.Link as={NavLink} to=\"/view-candidates\">\n                        View Ready to Hire Candidates\n                    </Nav.Link>\n                    <Nav.Link as={NavLink} to=\"/pricing\">\n                        Pricing\n                    </Nav.Link>\n                </Nav>\n                <Nav className=\"ml-auto\">\n                    <Nav.Link\n                        onClick={talkRecruiter}\n                        className=\"talk-recruiter\"\n                    >\n                        Talk to a Recruiter\n                    </Nav.Link>\n                    {(user && user.type === 'Admin') ||\n                    (user && user.type === 'Recruiter') ? (\n                        <Fragment>\n                            <Nav.Link as={NavLink} to=\"/dashboard\">\n                                Dashboard\n                            </Nav.Link>\n                            <Nav.Link onClick={onLogout}>Logout</Nav.Link>\n                        </Fragment>\n                    ) : null}\n                </Nav>\n            </Navbar.Collapse>\n        </Navbar>\n    );\n};\n\nHeader.propTypes = {\n    logoutUser: PropTypes.func.isRequired,\n    userState: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n    userState: state.userState,\n});\n\nexport default connect(mapStateToProps, { logoutUser })(Header);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Container, Row, Col } from 'react-bootstrap';\n\nimport draftsourceLogo from './../images/draftsource_logo.svg';\nimport { peopleWeServeList } from '../list/PeopleWeServe';\nimport { popularJobsList } from '../list/PopularJobs';\nimport { countriesWeServeList } from '../list/CountriesWeServe';\n\nconst Footer = () => {\n    return (\n        <footer id=\"footer\">\n            <Container>\n                <Row>\n                    <Col lg=\"3\" md=\"3\" sm=\"6\">\n                        <h6 className=\"title\">People we serve</h6>\n                        <ul className=\"list\">\n                            {peopleWeServeList().map((e, i) => (\n                                <li className=\"item\" key={i}>\n                                    {e}\n                                </li>\n                            ))}\n                        </ul>\n                    </Col>\n                    <Col lg=\"3\" md=\"3\" sm=\"6\">\n                        <h6 className=\"title\">Popular jobs</h6>\n                        <ul className=\"list\">\n                            {popularJobsList().map((e, i) => (\n                                <li className=\"item\" key={i}>\n                                    {e}\n                                </li>\n                            ))}\n                        </ul>\n                    </Col>\n                    <Col lg=\"3\" md=\"3\" sm=\"6\">\n                        <h6 className=\"title\">Countries we serve</h6>\n                        <ul className=\"list\">\n                            {countriesWeServeList().map((e, i) => (\n                                <li className=\"item\" key={i}>\n                                    {e}\n                                </li>\n                            ))}\n                        </ul>\n                    </Col>\n                    <Col lg=\"3\" md=\"3\" sm=\"6\">\n                        <img\n                            src={draftsourceLogo}\n                            alt=\"\"\n                            className=\"img-fluid logo\"\n                        />\n                        <p className=\"address\">\n                            Draftsource Virtual is a full-service BPO company\n                            providing top rated staff to Architecture,\n                            Engineering and Construction companies worldwide\n                        </p>\n                        <p className=\"social-media\">\n                            Follow us\n                            <br />\n                            <a\n                                href=\"https://www.facebook.com/draftsourcevirtualdotcom\"\n                                target=\"_blank\"\n                                rel=\"noopener noreferrer\"\n                            >\n                                <i className=\"fab fa-facebook-f\"></i>\n                            </a>\n                            <a\n                                href=\"https://www.instagram.com/draftsourcevirtual/\"\n                                target=\"_blank\"\n                                rel=\"noopener noreferrer\"\n                            >\n                                <i className=\"fab fa-instagram\"></i>\n                            </a>\n                            <a\n                                href=\"https://www.linkedin.com/company/43262336/admin/\"\n                                target=\"_blank\"\n                                rel=\"noopener noreferrer\"\n                            >\n                                <i className=\"fab fa-linkedin-in\"></i>\n                            </a>\n                            <a\n                                href=\"https://www.youtube.com/channel/UCGKEYz7JLUSkXQPEI8MDh2w?disable_polymer=true\"\n                                target=\"_blank\"\n                                rel=\"noopener noreferrer\"\n                            >\n                                <i className=\"fab fa-youtube\"></i>\n                            </a>\n                        </p>\n                    </Col>\n                    <Col sm=\"12\">\n                        <p className=\"policy\">\n                            <Link to=\"/privacy-policy\">Privacy Policy</Link>\n                        </p>\n                        <p className=\"copyright\">\n                            Copyright <Link to=\"/create-resume\">&copy;</Link>{' '}\n                            Draftsource Global Consulting Services Inc. trading\n                            as Draftsource Virtual\n                        </p>\n                    </Col>\n                </Row>\n            </Container>\n        </footer>\n    );\n};\n\nexport default Footer;\n","export const peopleWeServeList = () => {\n    const list = [\n        'Architects',\n        'Drafters',\n        'Engineers',\n        'Builders',\n        'Fabricators',\n    ];\n    return list;\n};\n","export const popularJobsList = () => {\n    const list = [\n        'Architectural Drafter',\n        'MEP Drafter',\n        '3D Renderer',\n        'Quantity Surveyor',\n        'Structural Drafter',\n    ];\n    return list;\n};\n","export const countriesWeServeList = () => {\n    const list = [\n        'Australia',\n        'United Kingdom',\n        'New Zealand',\n        'United States of America',\n        'Canada',\n    ];\n    return list;\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Container, Row, Col } from 'react-bootstrap';\n\nimport { talkRecruiter } from './../components/TalkRecruiter';\n\nconst Home = () => {\n    return (\n        <div id=\"home\">\n            <section className=\"sec-1\">\n                <Container className=\"h-100\">\n                    <Row className=\"h-100 align-items-center\">\n                        <Col lg={{ span: 8, offset: 2 }}>\n                            <h1 className=\"title\">\n                                Hire Full-Time Dedicated Filipino CAD Drafter,\n                                Quantity Surveyors & More\n                            </h1>\n                            <div className=\"cta my-4\">\n                                <Link\n                                    to=\"/view-candidates\"\n                                    className=\"btn btn-primary button\"\n                                >\n                                    View Candidates\n                                </Link>\n                                <button\n                                    onClick={talkRecruiter}\n                                    className=\"btn btn-primary button\"\n                                >\n                                    Talk to a Recruiter\n                                </button>\n                            </div>\n                            <ul className=\"list\">\n                                <li className=\"item\">No hiring headcaches</li>\n                                <li className=\"item\">No interviews</li>\n                                <li className=\"item\">No dramas</li>\n                            </ul>\n                        </Col>\n                    </Row>\n                </Container>\n            </section>\n        </div>\n    );\n};\n\nexport default Home;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Container, Row, Col } from 'react-bootstrap';\n\nconst Pricing = () => {\n    return (\n        <div id=\"pricing\">\n            <section className=\"sec-1\">\n                <Container>\n                    <div className=\"head\">\n                        <h1 className=\"title\" style={{ fontWeight: '400' }}>\n                            <span\n                                style={{ fontWeight: 'bold', fontSize: '28px' }}\n                            >\n                                Pricing\n                            </span>\n                            <br />\n                            Provide{' '}\n                            <s>\n                                <span>Short</span>\n                            </s>{' '}\n                            Long Term Solution For Your Business\n                        </h1>\n                        <ul className=\"list\">\n                            <li className=\"item\">No hiring headaches.</li>\n                            <li className=\"item\">No recruitment fees.</li>\n                            <li className=\"item\">No surprise charges.</li>\n                            <li className=\"item\">No work no pay.</li>\n                        </ul>\n                    </div>\n                    <Row>\n                        <div className=\"col-lg-6 offset-lg-3\">\n                            <div className=\"card\">\n                                <div className=\"card-body\">\n                                    <h3 className=\"card-title\">\n                                        Staff Leasing\n                                    </h3>\n                                    <p className=\"subtitle\">\n                                        The perfect plan extremely busy\n                                        professionals\n                                    </p>\n                                    <hr className=\"line-break\" />\n                                    <h3 className=\"card-title\">$9-15 USD/hr</h3>\n                                    <Link\n                                        to=\"/talk-recruiter\"\n                                        className=\"btn btn-primary button\"\n                                    >\n                                        Talk to a Recruiter\n                                    </Link>\n                                    <p\n                                        className=\"subtitle pt-3 pb-1\"\n                                        style={{\n                                            marginLeft: '44px',\n                                            marginRight: '57px',\n                                        }}\n                                    >\n                                        <i>\n                                            80-160 hours per staff per month No\n                                            fixed based project; no freelacing\n                                        </i>\n                                    </p>\n                                    <hr className=\"line-break\" />\n\n                                    <ul className=\"list\">\n                                        <li className=\"item\">\n                                            Sourcing and Screening\n                                        </li>\n                                        <li className=\"item\">\n                                            Profile Verification\n                                        </li>\n                                        <li className=\"item\">\n                                            Senior Level Expertise\n                                        </li>\n                                        <li className=\"item\">\n                                            No Contracts, Month to Month\n                                        </li>\n                                        <li className=\"item\">\n                                            Unlimited Staff Replacement\n                                        </li>\n                                        <li className=\"item\">\n                                            Recruitment Assistance\n                                        </li>\n                                        <li className=\"item\">\n                                            Time Tracking Access\n                                        </li>\n                                        <li className=\"item\">\n                                            Payroll Guarantee\n                                        </li>\n                                        <li className=\"item\">IT Assistance</li>\n                                        <li className=\"item\">\n                                            Onboarding Training\n                                        </li>\n                                        <li className=\"item\">\n                                            Dedicated Account Manager\n                                        </li>\n                                        <li className=\"item\">\n                                            Live Staff Monitoring\n                                        </li>\n                                        <li className=\"item\">\n                                            Dedicated HR Management\n                                        </li>\n                                        <li className=\"item\">\n                                            Daily Team Huddles\n                                        </li>\n                                    </ul>\n                                </div>\n                            </div>\n                        </div>\n                    </Row>\n                    <Row className=\"question\">\n                        <Col lg=\"12\">\n                            <h1 className=\"text-center mt-3 mb-5\">\n                                Common Questions and Concerns\n                            </h1>\n                        </Col>\n                        <Col lg=\"6\" className=\"mt-3\">\n                            <div className=\"mb-5 mr-5\">\n                                <h6 className=\"font-weight-bold mb-4\">\n                                    Are we required to pay in advance?\n                                </h6>\n                                <p className=\"text\">\n                                    Yes, in order to attract good talent, they\n                                    must feel secure that they are working for a\n                                    legit employer who can actually pay and not\n                                    a bogus freeloader.\n                                </p>\n                                <p className=\"text\">\n                                    We require a one-month advance payroll for\n                                    security purposes after the interview or\n                                    before official onboarding.\n                                </p>\n                                <p className=\"text\">\n                                    We deduct every hour and send you weekly\n                                    updates every after the end of the week.\n                                </p>\n                                <p className=\"text\">\n                                    If you wish to continue, simple pay in\n                                    advance for the following month before the\n                                    4th week starts.\n                                </p>\n                            </div>\n                            <div className=\"mb-5 mr-5\">\n                                <h6 className=\"font-weight-bold mb-4\">\n                                    How long does it take to get started?\n                                </h6>\n                                <p className=\"text\">\n                                    We can onboard a new hire once payment is\n                                    secured in 3-5 days.\n                                </p>\n                                <p className=\"text\">\n                                    For sourcing and qualification of new\n                                    candidates it may takes us not more than 2\n                                    weeks, depending on how difficult the\n                                    requirements are.\n                                </p>\n                                <p className=\"text\">\n                                    You can{' '}\n                                    <Link to=\"/draft-job\">\n                                        <u>draft a job</u>\n                                    </Link>{' '}\n                                    if you already have someone in mind or you{' '}\n                                    <Link to=\"/talk-recruiter\">\n                                        <u>talk to a recruiter</u>\n                                    </Link>{' '}\n                                    to ask for assistance. We have more\n                                    applicants in our database that are not\n                                    uploaded onsite.\n                                </p>\n                            </div>\n                            <div className=\"mb-5 mr-5\">\n                                <h6 className=\"font-weight-bold mb-4\">\n                                    Will they work according to our timezones?\n                                </h6>\n                                <p className=\"text\">\n                                    Absolutely! We only get people who are\n                                    willing to work according to your timezones.\n                                    We don’t force people to work if they are\n                                    not comfortable with the arrangement\n                                </p>\n                                <p className=\"text\">\n                                    You will be assured that the person we will\n                                    recommend will be happily working for you,\n                                    anytime you want.\n                                </p>\n                            </div>\n                        </Col>\n                        <Col lg=\"6\" className=\"mt-3\">\n                            <div className=\"mb-5 mr-5\">\n                                <h6 className=\"font-weight-bold mb-4\">\n                                    What if I’m not happy with my hire?\n                                </h6>\n                                <p className=\"text\">\n                                    We are absolutely convinced with the staff\n                                    that we will recommend. It usually takes an\n                                    average of 2-3 weeks for a staff to adapt to\n                                    a remote working environment and it takes\n                                    the same time for people who are new to\n                                    remote working like you.\n                                </p>\n                                <p className=\"text\">\n                                    But in the off chance you’re not completely\n                                    happy, we’ll do whatever we can to fix it.\n                                    You can even have a strategy session with\n                                    our Founder for free.\n                                </p>\n                            </div>\n                            <div className=\"mb-5 mr-5\">\n                                <h6 className=\"font-weight-bold mb-4\">\n                                    Are there any long term contracts?\n                                </h6>\n                                <p className=\"text\">None!</p>\n                                <p className=\"text\">\n                                    Draftsoure Virtual is a month to month\n                                    basis. You can replace your staff until you\n                                    find the right fit.\n                                </p>\n                                <p className=\"text\">\n                                    You can replace a staff after serving for a\n                                    minimum of 40 hours or 5 days working for\n                                    you. Not unless that person wasn’t able to\n                                    provide you for what you’re require them, we\n                                    will have to replace that staff immediately\n                                </p>\n                            </div>\n                            <div className=\"mb-5 mr-5\">\n                                <h6 className=\"font-weight-bold mb-4\">\n                                    What are your payment options?\n                                </h6>\n                                <p className=\"text\">\n                                    We accept all major credit cards in USD and\n                                    AUD for Visa, AmEx and Mastercard.\n                                </p>\n                                <p className=\"text\">\n                                    For Paypal, we only accept AUD and USD.\n                                </p>\n                            </div>\n                            <div className=\"mb-5 mr-5\">\n                                <h6 className=\"font-weight-bold mb-4\">\n                                    When will I pay Draftsource?\n                                </h6>\n                                <p className=\"text\">\n                                    You will receive a billing update every week\n                                    and you are billed at the end of the 3rd\n                                    week if you wish to continue working with\n                                    your staff. You have to settle before the\n                                    4th week ends or it may result to\n                                    termination of contract.\n                                </p>\n                                <p className=\"text\">\n                                    Unconsumed hours will be returned within 5\n                                    days upon end of a 4 week period.\n                                </p>\n                            </div>\n                        </Col>\n                    </Row>\n                    <Row className=\"task mb-5\">\n                        <Col sm=\"12\">\n                            <h1 className=\"title\">\n                                Be the fastest growing company in your industry\n                            </h1>\n                            <div className=\"cta mt-4\">\n                                <Link\n                                    to=\"/view-candidates\"\n                                    className=\"btn btn-primary button\"\n                                >\n                                    View Candidates\n                                </Link>\n                                <Link\n                                    to=\"/talk-recruiter\"\n                                    className=\"btn btn-primary button\"\n                                >\n                                    Talk to a Recruiter\n                                </Link>\n                            </div>\n                            <ul className=\"list mt-3\">\n                                <li className=\"item\">No hiring headcaches</li>\n                                <li className=\"item\">No interviews</li>\n                                <li className=\"item\">No dramas</li>\n                            </ul>\n                        </Col>\n                    </Row>\n                </Container>\n            </section>\n        </div>\n    );\n};\n\nexport default Pricing;\n","import { ADD_FILTER, UPDATE_FILTER, REMOVE_FILTER } from './types';\n\n// Add filter\nexport const addFilter = (filter) => (dispatch) => {\n    dispatch({\n        type: ADD_FILTER,\n        payload: filter,\n    });\n};\n\n// Update filter\nexport const updateFilter = (filter) => (dispatch) => {\n    dispatch({\n        type: UPDATE_FILTER,\n        payload: filter,\n    });\n};\n\n// Remove filter\nexport const removeFilter = (filter) => (dispatch) => {\n    dispatch({\n        type: REMOVE_FILTER,\n        payload: filter,\n    });\n};\n","import React, { useState, useEffect } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\n// Lists\nimport { availabilityList } from './../../list/Availability';\nimport { specialtyList } from './../../list/Specialty';\nimport { softwareList } from './../../list/Software';\n\n// Actions\nimport {\n    addFilter,\n    removeFilter,\n    updateFilter,\n} from './../../state/actions/filterAction';\n\nconst Filter = ({\n    loadData,\n    addFilter,\n    updateFilter,\n    removeFilter,\n    filterState: { filter },\n}) => {\n    const queryParams = new URLSearchParams(window.location.search);\n    const newUrl = new URL(window.location.href);\n    const history = useHistory();\n    const [show, setShow] = useState({\n        availabilityCat: false,\n        specialtyCat: false,\n        softwareCat: false,\n    });\n    const onShow = (e) => {\n        e.preventDefault();\n        const { name } = e.target;\n        setShow({ ...show, [name]: !show[name] });\n    };\n    const onChange = (e) => {\n        const { name, value } = e.target;\n        const { specialty, software } = filter;\n\n        if (name === 'availability') {\n            addFilter({ [name]: value });\n        }\n\n        if (name === 'specialty') {\n            if (specialty === undefined) {\n                addFilter({ [name]: [value] });\n            } else if (specialty.includes(value)) {\n                updateFilter({\n                    [name]: [...specialty.filter((x) => x !== value)],\n                });\n            } else {\n                updateFilter({ [name]: [...specialty, value] });\n            }\n        }\n\n        if (name === 'software') {\n            if (software === undefined) {\n                addFilter({ [name]: [value] });\n            } else if (software.includes(value)) {\n                updateFilter({\n                    [name]: [...software.filter((x) => x !== value)],\n                });\n            } else {\n                updateFilter({ [name]: [...software, value] });\n            }\n        }\n\n        const oldData = queryParams.get(name);\n        let newData;\n\n        if (oldData) {\n            newData = oldData.split(',');\n\n            if (name === 'availability') {\n                newUrl.searchParams.set(name, value);\n            } else {\n                if (newData.includes(value)) {\n                    newData = newData.filter((e) => e !== value);\n                } else {\n                    newData.push(value);\n                }\n\n                if (newData.length !== 0) {\n                    newData = newData.join(',');\n                    newUrl.searchParams.set(name, newData);\n                } else {\n                    newUrl.searchParams.delete(name);\n                }\n            }\n        } else {\n            newUrl.searchParams.set(name, value);\n        }\n\n        if (queryParams.get('page')) {\n            newUrl.searchParams.set('page', 1);\n        }\n\n        history.push({\n            pathname: newUrl.pathname,\n            search: newUrl.search,\n        });\n\n        loadData();\n    };\n\n    useEffect(() => {\n        if (queryParams.get('availability') !== filter.availability) {\n            if (queryParams.get('availability')) {\n                addFilter({ availability: queryParams.get('availability') });\n            } else {\n                if (filter.availability) {\n                    const { availability, ...newFilter } = filter;\n                    removeFilter(newFilter);\n                }\n            }\n        }\n\n        const specialty =\n            queryParams.get('specialty') !== null\n                ? queryParams.get('specialty').split(',')\n                : [];\n\n        if (specialty.length > 0) {\n            if (filter.specialty === undefined) {\n                addFilter({ specialty });\n            }\n        } else {\n            if (filter.specialty) {\n                const { specialty, ...newFilter } = filter;\n                removeFilter(newFilter);\n            }\n        }\n\n        const software =\n            queryParams.get('software') !== null\n                ? queryParams.get('software').split(',')\n                : [];\n\n        if (software.length > 0) {\n            if (filter.software === undefined) {\n                addFilter({ software });\n            }\n        } else {\n            if (filter.software) {\n                const { software, ...newFilter } = filter;\n                removeFilter(newFilter);\n            }\n        }\n\n        // eslint-disable-next-line\n    }, [queryParams, filter]);\n\n    return (\n        <div className=\"filter\">\n            <h4 className=\"title\">Filter by</h4>\n            <ul className=\"nav flex-column\">\n                <li className=\"nav-item\">\n                    <Link\n                        className=\"nav-link\"\n                        to=\"#\"\n                        name=\"availabilityCat\"\n                        onClick={onShow}\n                    >\n                        Availability{' '}\n                        <i\n                            className={`fas float-right pt-1 fa-${\n                                show.availabilityCat ? 'minus' : 'plus'\n                            }`}\n                        ></i>\n                    </Link>\n                    <ul\n                        className={`nav flex-column filter-dropdown${\n                            show.availabilityCat ? ' d-block' : ' d-none'\n                        }`}\n                    >\n                        {availabilityList().map((e, i) => (\n                            <li\n                                key={i}\n                                className={`nav-item${\n                                    filter.availability &&\n                                    filter.availability === e\n                                        ? ' checked'\n                                        : ''\n                                }`}\n                            >\n                                <input\n                                    type=\"radio\"\n                                    name=\"availability\"\n                                    className=\"filter-input\"\n                                    id={`availability${i}`}\n                                    value={e}\n                                    onChange={onChange}\n                                    checked={\n                                        filter.availability &&\n                                        filter.availability === e\n                                    }\n                                />\n                                <label\n                                    htmlFor={`availability${i}`}\n                                    className=\"filter-label\"\n                                >\n                                    {e}\n                                </label>\n                            </li>\n                        ))}\n                    </ul>\n                </li>\n                <li className=\"nav-item\">\n                    <Link\n                        className=\"nav-link\"\n                        to=\"#\"\n                        name=\"specialtyCat\"\n                        onClick={onShow}\n                    >\n                        Specialty{' '}\n                        <i\n                            className={`fas float-right pt-1 fa-${\n                                show.specialtyCat ? 'minus' : 'plus'\n                            }`}\n                        ></i>\n                    </Link>\n                    <ul\n                        className={`nav flex-column filter-dropdown${\n                            show.specialtyCat ? ' d-block' : ' d-none'\n                        }`}\n                    >\n                        {specialtyList().map((e, i) => (\n                            <li\n                                key={i}\n                                className={`nav-item${\n                                    filter.specialty &&\n                                    filter.specialty.includes(e)\n                                        ? ' checked'\n                                        : ''\n                                }`}\n                            >\n                                <input\n                                    type=\"checkbox\"\n                                    name=\"specialty\"\n                                    className=\"filter-input\"\n                                    id={`specialty${i}`}\n                                    value={e}\n                                    onChange={onChange}\n                                    checked={\n                                        filter.specialty &&\n                                        filter.specialty.includes(e)\n                                    }\n                                />\n                                <label\n                                    htmlFor={`specialty${i}`}\n                                    className=\"filter-label\"\n                                >\n                                    {e}\n                                </label>\n                            </li>\n                        ))}\n                    </ul>\n                </li>\n                <li className=\"nav-item\">\n                    <Link\n                        className=\"nav-link\"\n                        to=\"#\"\n                        name=\"softwareCat\"\n                        onClick={onShow}\n                    >\n                        Software Use{' '}\n                        <i\n                            className={`fas float-right pt-1 fa-${\n                                show.softwareCat ? 'minus' : 'plus'\n                            }`}\n                        ></i>\n                    </Link>\n                    <ul\n                        className={`nav flex-column filter-dropdown${\n                            show.softwareCat ? ' d-block' : ' d-none'\n                        }`}\n                    >\n                        {softwareList().map((e, i) => (\n                            <li\n                                key={i}\n                                className={`nav-item${\n                                    filter.software &&\n                                    filter.software.includes(e)\n                                        ? ' checked'\n                                        : ''\n                                }`}\n                            >\n                                <input\n                                    type=\"checkbox\"\n                                    name=\"software\"\n                                    className=\"filter-input\"\n                                    id={`software${i}`}\n                                    value={e}\n                                    onChange={onChange}\n                                    checked={\n                                        filter.software &&\n                                        filter.software.includes(e)\n                                    }\n                                />\n                                <label\n                                    htmlFor={`software${i}`}\n                                    className=\"filter-label\"\n                                >\n                                    {e}\n                                </label>\n                            </li>\n                        ))}\n                    </ul>\n                </li>\n            </ul>\n        </div>\n    );\n};\n\nFilter.propTypes = {\n    addFilter: PropTypes.func.isRequired,\n    updateFilter: PropTypes.func.isRequired,\n    filterState: PropTypes.object.isRequired,\n    removeFilter: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n    filterState: state.filterState,\n});\n\nexport default connect(mapStateToProps, {\n    addFilter,\n    updateFilter,\n    removeFilter,\n})(Filter);\n","export const availabilityList = () => {\n    return ['Full Time', 'Part Time', 'Full Time/Part Time'];\n};\n","export const specialtyList = () => {\n    return [\n        '3D Modeling',\n        '3D Rendering',\n        '3D Visualization',\n        'Mechanical Drafting',\n        'Electrical Drafting',\n        'Structural Drafting',\n        'Civil Drafting',\n        'BIM Modeling',\n        'CAD Drafting',\n        'Quantity Surveying',\n        'Estimating and Tendering',\n        'Document Controlling',\n        'HVAC Drafting',\n        'MEP Drafter',\n        'CAD/CAM',\n        'Architectural Rendering',\n        'Architectural Drafting',\n        'Project Management',\n        'Millwork and Joinery',\n        'Document controlling',\n    ];\n};\n","export const softwareList = () => {\n    return [\n        'ArchiCAD',\n        'AutoDesk 3ds Max',\n        'Cabinet Vision',\n        'Pytha',\n        '3D Kitchen',\n        'Microvellum',\n        'BIM',\n        'MS Powerpoint',\n        'MS Word',\n        'Microsoft Excel',\n        'Figma',\n        'Adobe XD',\n        'Sketch',\n        'Autodesk Revit',\n        'SolidWorks',\n        'Adobe Illustrator',\n        'Adobe Photoshop',\n        'Adobe InDesign',\n        'Autodesk Architecture',\n        'V-Ray',\n        'STAAD',\n        'SketchUp',\n        'Adobe Acrobat',\n        'CATIA',\n        '3DS Max',\n        'Lumion',\n        'Microstation',\n        'Planswift',\n        'Bluebeam',\n    ];\n};\n","import axios from 'axios';\nimport {\n    GET_CANDIDATES,\n    CANDIDATES_ERROR,\n    VIEW_RESUME,\n    CLEAR_RESUME,\n    ADD_CANDIDATE,\n    REMOVE_CANDIDATE,\n    GET_SHORTLISTED,\n    SET_SHORTLISTED,\n} from './types';\n\n// New applicants\nexport const newApplicants = () => async (dispatch) => {\n    try {\n        const getSearch = window.location.search;\n        const res = await axios.get(\n            `/api/candidate/new-applicants${getSearch}`\n        );\n        dispatch({\n            type: GET_CANDIDATES,\n            payload: res.data,\n        });\n    } catch (error) {\n        dispatch({\n            type: CANDIDATES_ERROR,\n            payload: error.response.data,\n        });\n    }\n};\n\n// Rejected applicants\nexport const rejectedApplicants = () => async (dispatch) => {\n    try {\n        const getSearch = window.location.search;\n        const res = await axios.get(\n            `/api/candidate/rejected-applicants${getSearch}`\n        );\n        dispatch({\n            type: GET_CANDIDATES,\n            payload: res.data,\n        });\n    } catch (error) {\n        dispatch({\n            type: CANDIDATES_ERROR,\n            payload: error.response.data,\n        });\n    }\n};\n\n// Approved applicants\nexport const approvedApplicants = () => async (dispatch) => {\n    try {\n        const getSearch = window.location.search;\n        const res = await axios.get(\n            `/api/candidate/approved-applicants${getSearch}`\n        );\n        dispatch({\n            type: GET_CANDIDATES,\n            payload: res.data,\n        });\n    } catch (error) {\n        dispatch({\n            type: CANDIDATES_ERROR,\n            payload: error.response.data,\n        });\n    }\n};\n\n// Approve resume\nexport const approveResume = (data) => async (dispatch) => {\n    try {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        await axios.put('/api/candidate/approve-resume', data, config);\n    } catch (error) {\n        dispatch({\n            type: CANDIDATES_ERROR,\n            payload: error.response.data,\n        });\n    }\n};\n\n// Reject resume\nexport const rejectResume = (data) => async (dispatch) => {\n    try {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        await axios.put('/api/candidate/reject-resume', data, config);\n    } catch (error) {\n        dispatch({\n            type: CANDIDATES_ERROR,\n            payload: error.response.data,\n        });\n    }\n};\n\n// Delete resume\nexport const deleteResume = (id) => async (dispatch) => {\n    try {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        await axios.delete(`/api/candidate/delete-resume/${id}`);\n    } catch (error) {\n        dispatch({\n            type: CANDIDATES_ERROR,\n            payload: error.response.data,\n        });\n    }\n};\n\n// View resume\nexport const viewResume = (id) => async (dispatch) => {\n    try {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        const res = await axios.post(\n            '/api/candidate/view-resume',\n            { id },\n            config\n        );\n        dispatch({\n            type: VIEW_RESUME,\n            payload: res.data,\n        });\n    } catch (error) {\n        dispatch({\n            type: CANDIDATES_ERROR,\n            payload: error.response.data,\n        });\n    }\n};\n\n// Clear resume\nexport const clearResume = () => {\n    return {\n        type: CLEAR_RESUME,\n    };\n};\n\n// View candidates\nexport const viewCandidates = () => async (dispatch) => {\n    try {\n        const getSearch = window.location.search;\n        const res = await axios.get(\n            `/api/candidate/view-candidates${getSearch}`\n        );\n        dispatch({\n            type: GET_CANDIDATES,\n            payload: res.data,\n        });\n    } catch (error) {\n        dispatch({\n            type: CANDIDATES_ERROR,\n            payload: error.response.data,\n        });\n    }\n};\n\n// Add candidate to shortlist\nexport const addCandidate = (id) => (dispatch) => {\n    dispatch({\n        type: ADD_CANDIDATE,\n        payload: id,\n    });\n};\n\n// Remove candidate from shortlist\nexport const removeCandidate = (id) => (dispatch) => {\n    dispatch({\n        type: REMOVE_CANDIDATE,\n        payload: id,\n    });\n};\n\n// Set shortlisted\nexport const setShortlisted = (shortlist) => (dispatch) => {\n    dispatch({\n        type: SET_SHORTLISTED,\n        payload: shortlist,\n    });\n};\n\n// Get shortlist info\nexport const getShortlisted = (shortlisted) => async (dispatch) => {\n    try {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n\n        const res = await axios.post(\n            '/api/candidate/shortlisted',\n            { shortlisted },\n            config\n        );\n\n        dispatch({\n            type: GET_SHORTLISTED,\n            payload: res.data,\n        });\n    } catch (error) {\n        dispatch({\n            type: CANDIDATES_ERROR,\n            payload: error.response.data,\n        });\n    }\n};\n","import { SET_ALERT, REMOVE_ALERT } from './types';\n\nexport const setAlert = (redirect, msg) => (dispatch) => {\n    dispatch({\n        type: SET_ALERT,\n        payload: { redirect, msg },\n    });\n};\n\nexport const removeAlert = () => {\n    return { type: REMOVE_ALERT };\n};\n","import React, { useEffect, useState } from 'react';\nimport { Modal } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { useHistory } from 'react-router-dom';\n\n// Actions\nimport { setAlert } from './../../state/actions/alertAction';\nimport {\n    addCandidate,\n    removeCandidate,\n} from './../../state/actions/candidateAction';\n\nconst ViewResume = ({\n    isShow,\n    isHide,\n    candidateState: { resume, shortlist },\n    addCandidate,\n    removeCandidate,\n    shortlistView,\n}) => {\n    const queryParams = new URLSearchParams(window.location.search);\n    const newUrl = new URL(window.location.href);\n    const history = useHistory();\n    const [show, setShow] = useState(false);\n    const [shortlisted, setShortlisted] = useState(shortlist);\n    const initialData = {\n        _id: '',\n        firstName: '',\n        lastName: '',\n        resumeImage: '',\n        city: '',\n        availability: '',\n        expectedSalary: '',\n        currency: '',\n        specialty: [],\n        software: [],\n        uploadWork: {\n            images: [],\n            documents: [],\n        },\n        workHistory: [],\n        education: [],\n        workspace: '',\n        internetType: '',\n        hardwareType: '',\n        brandName: '',\n        internetResult: '',\n        computerSpecs: '',\n        rating: '',\n    };\n    const [data, setData] = useState(initialData);\n\n    const handleClose = () => {\n        setData(initialData);\n        setShow(false);\n        isHide(true);\n    };\n\n    const handleShow = () => setShow(true);\n\n    const viewImage = (file) => {};\n\n    const {\n        _id,\n        firstName,\n        lastName,\n        resumeImage,\n        city,\n        availability,\n        expectedSalary,\n        aboutYourself,\n        specialty,\n        software,\n        uploadWork,\n        workHistory,\n        education,\n        workspace,\n        internetType,\n        hardwareType,\n        brandName,\n        internetResult,\n        computerSpecs,\n        rating,\n    } = data;\n\n    const removeShortlist = (id) => {\n        if (shortlistView) {\n            const oldData = queryParams.get('candidates');\n            let newData;\n\n            if (oldData) {\n                newData = oldData.split(',');\n\n                newData = newData.filter((e) => e !== id);\n\n                if (newData.length !== 0) {\n                    newData = newData.join(',');\n                    newUrl.searchParams.set('candidates', newData);\n                } else {\n                    newUrl.searchParams.delete('candidates');\n                }\n            }\n            history.push({\n                pathname: newUrl.pathname,\n                search: newUrl.search,\n            });\n            isHide(true);\n            removeCandidate(id);\n        } else {\n            removeCandidate(id);\n        }\n    };\n\n    const addShortlist = (id) => {\n        addCandidate(id);\n    };\n\n    useEffect(() => {\n        if (isShow) {\n            handleShow();\n        }\n\n        if (resume !== null) {\n            setData(resume);\n        }\n\n        setShortlisted(shortlist);\n    }, [resume, isShow, shortlist]);\n\n    return (\n        <Modal\n            show={show}\n            onHide={handleClose}\n            backdrop=\"static\"\n            keyboard={false}\n            size=\"xl\"\n            id=\"seeResume\"\n        >\n            <Modal.Body>\n                <button className=\"close\" onClick={handleClose}>\n                    <span aria-hidden=\"true\">×</span>\n                    <span className=\"sr-only\">Close</span>\n                </button>\n                <div className=\"container-fluid\">\n                    <div className=\"row pb-5\">\n                        <div className=\"col-lg-3\">\n                            <img\n                                src={`/uploads/${resumeImage}`}\n                                alt=\"\"\n                                className=\"img-fluid resume-image mb-3\"\n                            />\n                            <audio controls>\n                                <source src={`/uploads/${aboutYourself}`} />\n                                Your browser does not support the audio!\n                            </audio>\n                        </div>\n                        <div className=\"col-lg-9\">\n                            <div className=\"row\">\n                                <div className=\"col-lg-8\">\n                                    <p className=\"fullname\">\n                                        {firstName} <br />\n                                        {lastName}\n                                    </p>\n                                    <p className=\"city\">{city}</p>\n                                </div>\n                                <div className=\"col-lg-4\">\n                                    <button\n                                        className=\"btn btn-primary button\"\n                                        onClick={() =>\n                                            shortlisted.includes(_id)\n                                                ? removeShortlist(_id)\n                                                : addShortlist(_id)\n                                        }\n                                    >\n                                        {shortlist.includes(_id)\n                                            ? 'Remove from Shortlist'\n                                            : 'Add to Shortlist'}\n                                    </button>\n                                    <button\n                                        onClick={() => {\n                                            history.push(\n                                                `/view-candidates/shortlisted-candidates${\n                                                    shortlist.length > 0\n                                                        ? `?candidates=${shortlist.join(\n                                                              ','\n                                                          )}`\n                                                        : ''\n                                                }`\n                                            );\n                                            handleClose();\n                                        }}\n                                        className=\"btn btn-primary button shortlist-candidates\"\n                                    >\n                                        Shortlist Candidates\n                                    </button>\n                                </div>\n                            </div>\n                            <div className=\"row mt-4\">\n                                <div className=\"col-lg-4\">\n                                    <p className=\"eng-proficiency mb-1\">\n                                        English Proficiency\n                                    </p>\n                                    <div className=\"rating d-inline\">\n                                        <i\n                                            className={`rating-color fas fa-star${\n                                                rating >= 1 ? ' checked' : ''\n                                            }`}\n                                        ></i>\n                                        <i\n                                            className={`rating-color fas fa-star${\n                                                rating >= 2 ? ' checked' : ''\n                                            }`}\n                                        ></i>\n                                        <i\n                                            className={`rating-color fas fa-star${\n                                                rating >= 3 ? ' checked' : ''\n                                            }`}\n                                        ></i>\n                                        <i\n                                            className={`rating-color fas fa-star${\n                                                rating >= 4 ? ' checked' : ''\n                                            }`}\n                                        ></i>\n                                        <i\n                                            className={`rating-color fas fa-star${\n                                                rating === 5 ? ' checked' : ''\n                                            }`}\n                                        ></i>\n                                    </div>\n                                </div>\n                                <div className=\"col-lg-4\">\n                                    <p>Availability</p>\n                                    <p className=\"availability mb-1\">\n                                        {availability}\n                                    </p>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"row pb-3\">\n                        <div className=\"col-lg-3\">\n                            <p className=\"item-title color-1 mb-0\">\n                                Skills & Specialties\n                            </p>\n                        </div>\n                        <div className=\"col-lg-9\">\n                            <p id=\"specialty\" className=\"specialty mb-0\">\n                                {specialty.join(', ')}\n                            </p>\n                        </div>\n                    </div>\n                    <div className=\"row pb-5\">\n                        <div className=\"col-lg-3\">\n                            <p className=\"item-title color-1 mb-0\">\n                                Software Use\n                            </p>\n                        </div>\n                        <div className=\"col-lg-9\">\n                            <p id=\"software\" className=\"software mb-0\">\n                                {software.join(', ')}\n                            </p>\n                        </div>\n                    </div>\n                    <div className=\"row pb-5\">\n                        <div className=\"col-lg-3\">\n                            <p className=\"item-title color-2\">Sample Works</p>\n                        </div>\n                        <div className=\"col-lg-9\">\n                            <p className=\"item-title color-1\">JPEG OR PNG</p>\n                            <div className=\"row pb-3 upload-work-images\">\n                                {uploadWork.images.map((e, i) => (\n                                    <div className=\"col-lg-3\" key={i}>\n                                        <figure className=\"figure\">\n                                            <img\n                                                src={`/uploads/${e.file}`}\n                                                alt=\"\"\n                                                className=\"figure-img img-fluid\"\n                                            />\n                                            <figcaption className=\"figure-caption\">\n                                                {e.title}\n                                            </figcaption>\n                                        </figure>\n                                    </div>\n                                ))}\n                            </div>\n                            <p className=\"item-title color-1\">PDF</p>\n                            <div className=\"row upload-work-documents\">\n                                {uploadWork.documents.map((e, i) => (\n                                    <div className=\"col-lg-3\" key={i}>\n                                        <figure className=\"figure\">\n                                            <img\n                                                src={`/uploads/bg-upload-${e.skin}.png`}\n                                                alt=\"\"\n                                                className=\"figure-img img-fluid\"\n                                            />\n                                            <figcaption className=\"figure-caption\">\n                                                {e.title}\n                                            </figcaption>\n                                        </figure>\n                                    </div>\n                                ))}\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"row pb-5\">\n                        <div className=\"col-lg-3\">\n                            <p className=\"item-title color-2\">\n                                Work Experience\n                            </p>\n                        </div>\n                        <div className=\"col-lg-9\">\n                            <div id=\"workHistory\" className=\"work-history\">\n                                {workHistory.map((e, i) => (\n                                    <div className=\"work-history-item\" key={i}>\n                                        <p className=\"title\">{e.title}</p>\n                                        <p className=\"company\">{e.company}</p>\n                                        <p className=\"month-year\">\n                                            {e.monthStarted} {e.yearStarted} -{' '}\n                                            {e.monthEnded} {e.yearEnded}\n                                        </p>\n                                        <p className=\"item-title\">\n                                            Job Description\n                                        </p>\n                                        <p className=\"description\">\n                                            {e.description}\n                                        </p>\n                                        <p className=\"item-title\">About</p>\n                                        <p className=\"about\">{e.about}</p>\n                                    </div>\n                                ))}\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"row pb-5\">\n                        <div className=\"col-lg-3\">\n                            <p className=\"item-title color-2\">Education</p>\n                        </div>\n                        <div className=\"col-lg-9\">\n                            <div id=\"education\" className=\"education\">\n                                {education.map((e, i) => (\n                                    <div className=\"education-item\" key={i}>\n                                        <table className=\"education-item table table-borderless\">\n                                            <tbody>\n                                                <tr>\n                                                    <td\n                                                        className={`item-choices pl-0${\n                                                            i === 0\n                                                                ? ' pt-0'\n                                                                : ''\n                                                        }`}\n                                                    >\n                                                        {e.choices}\n                                                    </td>\n                                                </tr>\n                                                {e.choices !== 'High School' ? (\n                                                    <tr>\n                                                        <td className=\"item-title pb-0 pl-0\">\n                                                            Degree\n                                                        </td>\n                                                        <td className=\"item-degree pb-0 item-value\">\n                                                            {e.degree}\n                                                        </td>\n                                                    </tr>\n                                                ) : null}\n                                                <tr>\n                                                    <td className=\"item-title pb-0 pl-0\">\n                                                        School\n                                                    </td>\n                                                    <td className=\"item-school pb-0 item-value\">\n                                                        {e.school}\n                                                    </td>\n                                                </tr>\n                                                {e.choices !== 'High School' ? (\n                                                    <tr>\n                                                        <td className=\"item-title pb-0 pl-0\">\n                                                            Course\n                                                        </td>\n                                                        <td className=\"item-course pb-0 item-value\">\n                                                            {e.course}\n                                                        </td>\n                                                    </tr>\n                                                ) : null}\n                                                <tr>\n                                                    <td className=\"item-title pb-0 pl-0\">\n                                                        Started - Graduated\n                                                    </td>\n                                                    <td className=\"item-month-year pb-0 item-value\">\n                                                        {e.monthYearStarted} -{' '}\n                                                        {e.monthYearGraduated}\n                                                    </td>\n                                                </tr>\n                                            </tbody>\n                                        </table>\n                                    </div>\n                                ))}\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"row pb-5\">\n                        <div className=\"col-lg-3\">\n                            <p className=\"item-title color-2\">\n                                Recruiter's Comments\n                            </p>\n                        </div>\n                        <div className=\"col-lg-9\">\n                            <div id=\"recruitersComments\"></div>\n                        </div>\n                    </div>\n                    <div className=\"row pb-5\">\n                        <div className=\"col-lg-3\">\n                            <p className=\"item-title color-2\">\n                                Work from Home Capabilites\n                            </p>\n                        </div>\n                        <div className=\"col-lg-9\">\n                            <table className=\"table table-borderless workspace-item\">\n                                <tbody>\n                                    <tr>\n                                        <th\n                                            scope=\"row\"\n                                            className=\"pt-0 item-title\"\n                                        >\n                                            Workspace\n                                        </th>\n                                        <td\n                                            id=\"workspace\"\n                                            className=\"pt-0 item-value\"\n                                        >\n                                            {workspace}\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <th\n                                            scope=\"row\"\n                                            className=\"pt-0 item-title\"\n                                        >\n                                            Internet Type\n                                        </th>\n                                        <td\n                                            id=\"internetType\"\n                                            className=\"pt-0 item-value\"\n                                        >\n                                            {internetType}\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <th\n                                            scope=\"row\"\n                                            className=\"pt-0 item-title\"\n                                        >\n                                            Hardware Type\n                                        </th>\n                                        <td\n                                            id=\"hardwareType\"\n                                            className=\"pt-0 item-value\"\n                                        >\n                                            {hardwareType}\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <th\n                                            scope=\"row\"\n                                            className=\"pt-0 item-title\"\n                                        >\n                                            Brand Name\n                                        </th>\n                                        <td\n                                            id=\"brandName\"\n                                            className=\"pt-0 item-value\"\n                                        >\n                                            {brandName}\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <th\n                                            scope=\"row\"\n                                            className=\"pt-0 item-title\"\n                                        >\n                                            Internet Speedtest Result\n                                        </th>\n                                        <td className=\"pt-0\">\n                                            <button\n                                                className=\"btn btn-primary view\"\n                                                onClick={viewImage(\n                                                    internetResult\n                                                )}\n                                            >\n                                                View\n                                            </button>\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <th\n                                            scope=\"row\"\n                                            className=\"pt-0 item-title\"\n                                        >\n                                            Computer Specs\n                                        </th>\n                                        <td className=\"pt-0\">\n                                            <button\n                                                className=\"btn btn-primary view\"\n                                                onClick={viewImage(\n                                                    computerSpecs\n                                                )}\n                                            >\n                                                View\n                                            </button>\n                                        </td>\n                                    </tr>\n                                </tbody>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n            </Modal.Body>\n        </Modal>\n    );\n};\n\nViewResume.propTypes = {\n    setAlert: PropTypes.func.isRequired,\n    candidateState: PropTypes.object.isRequired,\n    addCandidate: PropTypes.func.isRequired,\n    removeCandidate: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n    candidateState: state.candidateState,\n});\n\nexport default connect(mapStateToProps, {\n    setAlert,\n    addCandidate,\n    removeCandidate,\n})(ViewResume);\n","import React, { useEffect, useState } from 'react';\n// import { Pagination } from 'react-bootstrap';\nimport { useHistory } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport ReactPaginate from 'react-paginate';\n\n// Actions\nimport { addFilter } from './../../state/actions/filterAction';\n\nconst PaginationLink = ({\n    addFilter,\n    filterState: { filter },\n    candidateState: { total },\n}) => {\n    const queryParams = new URLSearchParams(window.location.search);\n    const newUrl = new URL(window.location.href);\n    const history = useHistory();\n    const [page, setPage] = useState(1);\n    const [limit, setLimit] = useState(10);\n    let pageNumbers = [];\n\n    for (let i = 1; i <= Math.ceil(total / filter.limit); i++) {\n        pageNumbers.push(i);\n    }\n\n    const paginate = (number) => {\n        if (number !== page) {\n            newUrl.searchParams.set('page', number);\n            setPage(number);\n            addFilter({ page: number });\n\n            history.push({\n                pathname: newUrl.pathname,\n                search: newUrl.search,\n            });\n        }\n    };\n\n    useEffect(() => {\n        if (parseInt(queryParams.get('page')) !== parseInt(filter.page)) {\n            if (parseInt(queryParams.get('page'))) {\n                addFilter({ page: parseInt(queryParams.get('page')) });\n                setPage(queryParams.get('page'));\n            } else {\n                if (page !== filter.page) {\n                    addFilter({ page: 1 });\n                }\n            }\n        }\n\n        if (parseInt(queryParams.get('limit')) !== parseInt(filter.limit)) {\n            if (parseInt(queryParams.get('limit'))) {\n                addFilter({ limit: parseInt(queryParams.get('limit')) });\n                setLimit(queryParams.get('limit'));\n            } else {\n                if (limit !== filter.limit) {\n                    addFilter({ limit: 10 });\n                }\n            }\n        }\n\n        // eslint-disable-next-line\n    }, [filter, queryParams, total]);\n\n    const onPageChange = (data) => {\n        paginate(data.selected + 1);\n    };\n\n    return (\n        <ReactPaginate\n            previousLabel={<i className=\"fas fa-caret-left\"></i>}\n            nextLabel={<i same=\"fas fa-caret-right\"></i>}\n            breakLabel={'...'}\n            breakClassName={'page-item disabled'}\n            breakLinkClassName={'page-link'}\n            pageCount={pageNumbers.length}\n            pageClassName={'page-item'}\n            pageLinkClassName={'page-link'}\n            previousClassName={'page-item'}\n            previousLinkClassName={'page-link'}\n            nextLinkClassName={'page-link'}\n            nextClassName={'page-item'}\n            marginPagesDisplayed={2}\n            pageRangeDisplayed={3}\n            containerClassName={'pagination'}\n            subContainerClassName={'pages pagination'}\n            activeClassName={'active'}\n            onPageChange={onPageChange}\n            forcePage={filter.page - 1}\n        />\n    );\n};\n\nPaginationLink.propTypes = {\n    addFilter: PropTypes.func.isRequired,\n    filterState: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n    filterState: state.filterState,\n    candidateState: state.candidateState,\n});\n\nexport default connect(mapStateToProps, {\n    addFilter,\n})(PaginationLink);\n","import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Carousel } from 'react-bootstrap';\nimport { useHistory } from 'react-router-dom';\n\n// Actions\nimport {\n    viewCandidates,\n    viewResume,\n    clearResume,\n    addCandidate,\n    removeCandidate,\n} from './../../state/actions/candidateAction';\nimport { addFilter, removeFilter } from './../../state/actions/filterAction';\n\n// Components\nimport ViewResume from './ViewResume';\nimport PaginationLink from './PaginationLink';\n\nconst TopVerifiedCandidates = ({\n    viewCandidates,\n    addFilter,\n    removeFilter,\n    viewResume,\n    clearResume,\n    addCandidate,\n    removeCandidate,\n    candidateState: { candidates, shortlist },\n    filterState: { filter },\n}) => {\n    const queryParams = new URLSearchParams(window.location.search);\n    const newUrl = new URL(window.location.href);\n    const history = useHistory();\n    const [activeMiniSlide, setActiveMiniSlide] = useState(0);\n    const [seeResume, setSeeResume] = useState(false);\n    const [params, setParams] = useState({\n        search: '',\n        viewBy: '10',\n    });\n\n    const miniSlideSelect = (selectedIndex) => {\n        setActiveMiniSlide(selectedIndex);\n    };\n\n    const onChange = (e) => {\n        const { name, value } = e.target;\n\n        if (value === '') {\n            newUrl.searchParams.delete(name);\n        } else {\n            newUrl.searchParams.set(name, value);\n        }\n\n        setParams({ ...params, [name]: value });\n\n        if (name === 'limit') {\n            addFilter({ [name]: parseInt(value) });\n        } else {\n            addFilter({ [name]: value });\n        }\n\n        if (queryParams.get('page')) {\n            newUrl.searchParams.set('page', 1);\n        }\n\n        history.push({\n            pathname: newUrl.pathname,\n            search: newUrl.search,\n        });\n    };\n\n    const addShortlist = (id) => {\n        addCandidate(id);\n    };\n\n    const removeShortlist = (id) => {\n        removeCandidate(id);\n    };\n\n    useEffect(() => {\n        if (queryParams.get('search') !== null) {\n            if (params.search === '') {\n                addFilter({ search: queryParams.get('search') });\n                setParams({ ...params, search: queryParams.get('search') });\n            }\n        } else {\n            if (filter.search) {\n                const { search, ...newFilter } = filter;\n                removeFilter(newFilter);\n            }\n        }\n\n        // eslint-disable-next-line\n    }, [queryParams, params, filter, candidates]);\n\n    return (\n        <div id=\"topVerifiedCandidates\">\n            <div className=\"header\">\n                <input\n                    type=\"text\"\n                    name=\"search\"\n                    className=\"form-control input\"\n                    placeholder=\"Search for software, specialty or keyword\"\n                    onChange={onChange}\n                    value={params.search}\n                />\n                <label className=\"form-label view-by-label\">View by</label>\n                <select\n                    className=\"form-control input\"\n                    name=\"limit\"\n                    onChange={onChange}\n                    value={parseInt(queryParams.get('limit') || params.viewBy)}\n                >\n                    <option value=\"10\">10</option>\n                    <option value=\"20\">20</option>\n                    <option value=\"50\">50</option>\n                </select>\n            </div>\n\n            {seeResume ? (\n                <ViewResume\n                    isShow={true}\n                    isHide={() => {\n                        setSeeResume(false);\n                        clearResume();\n                    }}\n                    loadCandidate={() => {\n                        viewCandidates();\n                        clearResume();\n                    }}\n                />\n            ) : null}\n            {candidates !== null\n                ? candidates.map((e, i) => (\n                      <div className=\"candidate\" key={i}>\n                          <div className=\"row\">\n                              <div className=\"col-lg-9\">\n                                  <div className=\"d-flex justify-content-between mt-3\">\n                                      <div className=\"profile flex-fill\">\n                                          <img\n                                              src={`/uploads/${e.resumeImage}`}\n                                              alt=\"\"\n                                              className=\"img-fluid\"\n                                          />\n                                          <audio controls>\n                                              <source\n                                                  src={`/uploads/${e.aboutYourself}`}\n                                              />\n                                              Your browser does not support the\n                                              audio!\n                                          </audio>\n                                      </div>\n                                      <div className=\"available flex-fill\">\n                                          <p className=\"per-hour\">\n                                              Availability\n                                          </p>\n                                          <p className=\"available\">\n                                              {e.availability}\n                                          </p>\n                                      </div>\n                                      <div className=\"eng-rating flex-fill\">\n                                          <div className=\"rating\">\n                                              <i\n                                                  className={`rating-color fas fa-star${\n                                                      e.rating >= 1\n                                                          ? ` checked`\n                                                          : ''\n                                                  }`}\n                                              ></i>\n                                              <i\n                                                  className={`rating-color fas fa-star${\n                                                      e.rating >= 2\n                                                          ? ` checked`\n                                                          : ''\n                                                  }`}\n                                              ></i>\n                                              <i\n                                                  className={`rating-color fas fa-star${\n                                                      e.rating >= 3\n                                                          ? ` checked`\n                                                          : ''\n                                                  }`}\n                                              ></i>\n                                              <i\n                                                  className={`rating-color fas fa-star${\n                                                      e.rating >= 4\n                                                          ? ` checked`\n                                                          : ''\n                                                  }`}\n                                              ></i>\n                                              <i\n                                                  className={`rating-color fas fa-star${\n                                                      e.rating === 5\n                                                          ? ` checked`\n                                                          : ''\n                                                  }`}\n                                              ></i>\n                                          </div>\n                                          <span className=\"eng-prof d-block\">\n                                              English Proficiency\n                                          </span>\n                                      </div>\n                                  </div>\n                                  <div className=\"d-flex\">\n                                      {e.specialty.map((e, i) => (\n                                          <span\n                                              className=\"specialty-software\"\n                                              key={i}\n                                          >\n                                              {e}\n                                          </span>\n                                      ))}\n                                      {e.software.map((e, i) => (\n                                          <span\n                                              className=\"specialty-software\"\n                                              key={i}\n                                          >\n                                              {e}\n                                          </span>\n                                      ))}\n                                  </div>\n                                  <hr className=\"line-break\" />\n                                  <p className=\"recruiters-comment\">\n                                      Recruiters Comment:\n                                  </p>\n                                  {/* {recruitmentsComment.map((e, i) => )} */}\n                                  {e.recruitmentsComment.join('. ')}\n                                  <button\n                                      className=\"see-resume\"\n                                      onClick={() => {\n                                          setSeeResume(true);\n                                          viewResume(e._id);\n                                      }}\n                                  >\n                                      See resume and recruiter comments &gt;\n                                  </button>\n                              </div>\n                              <div className=\"col-lg-3\">\n                                  {shortlist && shortlist.includes(e._id) ? (\n                                      <button\n                                          onClick={() => removeShortlist(e._id)}\n                                          className=\"btn btn-primary button mt-3 remove\"\n                                      >\n                                          Remove from Shortlist\n                                      </button>\n                                  ) : (\n                                      <button\n                                          onClick={() => addShortlist(e._id)}\n                                          className=\"btn btn-primary button mt-3\"\n                                      >\n                                          Add to Shortlist\n                                      </button>\n                                  )}\n                                  <div className=\"mini-slide\">\n                                      <Carousel\n                                          activeIndex={activeMiniSlide}\n                                          interval={null}\n                                          onSelect={miniSlideSelect}\n                                          indicators={false}\n                                          nextIcon={\n                                              <i\n                                                  className=\"fas fa-caret-right\"\n                                                  aria-hidden=\"true\"\n                                              ></i>\n                                          }\n                                          prevIcon={\n                                              <i\n                                                  className=\"fas fa-caret-left\"\n                                                  aria-hidden=\"true\"\n                                              ></i>\n                                          }\n                                      >\n                                          {e.uploadWork.images.map((e, i) => (\n                                              <Carousel.Item key={i}>\n                                                  <img\n                                                      src={`/uploads/${e.file}`}\n                                                      className=\"d-block w-100\"\n                                                      alt=\"...\"\n                                                  />\n                                              </Carousel.Item>\n                                          ))}\n                                      </Carousel>\n                                      <span className=\"num\">\n                                          {activeMiniSlide + 1} of{' '}\n                                          {e.uploadWork.images.length}\n                                      </span>\n                                  </div>\n                              </div>\n                          </div>\n                      </div>\n                  ))\n                : 'No New Candidate'}\n            <div className=\"footer\">\n                <div\n                    className={`ml-auto${\n                        candidates && candidates.length === 0\n                            ? ' invisible'\n                            : ''\n                    }`}\n                >\n                    <PaginationLink />\n                </div>\n                <label className=\"form-label view-by-label\">View by</label>\n                <select\n                    className=\"form-control input\"\n                    name=\"limit\"\n                    onChange={onChange}\n                    value={parseInt(queryParams.get('limit') || params.viewBy)}\n                >\n                    <option value=\"10\">10</option>\n                    <option value=\"20\">20</option>\n                    <option value=\"50\">50</option>\n                </select>\n            </div>\n        </div>\n    );\n};\n\nTopVerifiedCandidates.propTypes = {\n    candidateState: PropTypes.object.isRequired,\n    filterState: PropTypes.object.isRequired,\n    viewCandidates: PropTypes.func.isRequired,\n    addFilter: PropTypes.func.isRequired,\n    viewResume: PropTypes.func.isRequired,\n    clearResume: PropTypes.func.isRequired,\n    addCandidate: PropTypes.func.isRequired,\n    removeCandidate: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n    candidateState: state.candidateState,\n    filterState: state.filterState,\n});\n\nexport default connect(mapStateToProps, {\n    viewCandidates,\n    addFilter,\n    removeFilter,\n    viewResume,\n    addCandidate,\n    removeCandidate,\n    clearResume,\n})(TopVerifiedCandidates);\n","import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Carousel } from 'react-bootstrap';\nimport { useHistory } from 'react-router-dom';\n\n// Actions\nimport {\n    viewCandidates,\n    viewResume,\n    clearResume,\n    addCandidate,\n    removeCandidate,\n    getShortlisted,\n    setShortlisted,\n} from './../../state/actions/candidateAction';\nimport { addFilter, removeFilter } from './../../state/actions/filterAction';\n\n// Components\nimport ViewResume from './ViewResume';\nimport PaginationLink from './PaginationLink';\n\nconst ShortlistedCandidates = ({\n    viewCandidates,\n    addFilter,\n    removeFilter,\n    viewResume,\n    clearResume,\n    addCandidate,\n    removeCandidate,\n    getShortlisted,\n    setShortlisted,\n    candidateState: { candidates, shortlist, shortlistedInfo },\n    filterState: { filter },\n}) => {\n    const queryParams = new URLSearchParams(window.location.search);\n    const newUrl = new URL(window.location.href);\n    const history = useHistory();\n    const [activeMiniSlide, setActiveMiniSlide] = useState(0);\n    const [seeResume, setSeeResume] = useState(false);\n    const [params, setParams] = useState({\n        search: '',\n        viewBy: '10',\n    });\n\n    const miniSlideSelect = (selectedIndex) => {\n        setActiveMiniSlide(selectedIndex);\n    };\n\n    const onChange = (e) => {\n        const { name, value } = e.target;\n\n        if (value === '') {\n            newUrl.searchParams.delete(name);\n        } else {\n            newUrl.searchParams.set(name, value);\n        }\n\n        setParams({ ...params, [name]: value });\n\n        if (name === 'limit') {\n            addFilter({ [name]: parseInt(value) });\n        } else {\n            addFilter({ [name]: value });\n        }\n\n        if (queryParams.get('page')) {\n            newUrl.searchParams.set('page', 1);\n        }\n\n        history.push({\n            pathname: newUrl.pathname,\n            search: newUrl.search,\n        });\n    };\n\n    const addShortlist = (id) => {\n        addCandidate(id);\n    };\n\n    const removeShortlist = (id) => {\n        removeCandidate(id);\n        const oldQuery = queryParams.get('candidates');\n        let newQuery = '';\n        newQuery = oldQuery.split(',');\n        newQuery = newQuery.filter((e) => e !== id);\n        if (newQuery.length === 0) {\n            newUrl.searchParams.delete('candidates');\n        }\n\n        history.push({\n            pathname: newUrl.pathname,\n            search: newUrl.search,\n        });\n    };\n\n    useEffect(() => {\n        if (queryParams.get('search') !== null) {\n            if (params.search === '') {\n                addFilter({ search: queryParams.get('search') });\n                setParams({ ...params, search: queryParams.get('search') });\n            }\n        } else {\n            if (filter.search) {\n                const { search, ...newFilter } = filter;\n                removeFilter(newFilter);\n            }\n        }\n\n        if (queryParams.get('candidates') !== null) {\n            if (shortlist.length === 0) {\n                getShortlisted(queryParams.get('candidates'));\n            }\n        }\n\n        if (shortlist.length === 0) {\n            if (queryParams.get('candidates')) {\n                setShortlisted(queryParams.get('candidates'));\n            }\n        }\n\n        getShortlisted(\n            queryParams.get('candidates') !== null\n                ? queryParams.get('candidates')\n                : []\n        );\n\n        // eslint-disable-next-line\n    }, [queryParams, params, filter, shortlist, shortlistedInfo]);\n\n    return (\n        <div id=\"shortlistedCandidates\">\n            <div className=\"header\">\n                <input\n                    type=\"text\"\n                    name=\"search\"\n                    className=\"form-control input\"\n                    placeholder=\"Search for software, specialty or keyword\"\n                    onChange={onChange}\n                    value={params.search}\n                />\n                <label className=\"form-label view-by-label\">View by</label>\n                <select\n                    className=\"form-control input\"\n                    name=\"limit\"\n                    onChange={onChange}\n                    value={parseInt(queryParams.get('limit') || params.viewBy)}\n                >\n                    <option value=\"10\">10</option>\n                    <option value=\"20\">20</option>\n                    <option value=\"50\">50</option>\n                </select>\n            </div>\n\n            {seeResume ? (\n                <ViewResume\n                    isShow={true}\n                    shortlistView={true}\n                    isHide={() => {\n                        setSeeResume(false);\n                        clearResume();\n                    }}\n                    loadCandidate={() => {\n                        viewCandidates();\n                        clearResume();\n                    }}\n                />\n            ) : null}\n            {shortlistedInfo !== null\n                ? shortlistedInfo.map((e, i) => (\n                      <div className=\"candidate\" key={i}>\n                          <div className=\"row\">\n                              <div className=\"col-lg-2\">\n                                  <div className=\"profile mt-3 mb-5\">\n                                      <img\n                                          src={`/uploads/${e.resumeImage}`}\n                                          alt=\"\"\n                                          className=\"img-fluid\"\n                                      />\n                                      <p className=\"name\">\n                                          {e.firstName} {e.lastName}\n                                      </p>\n                                  </div>\n                                  <p className=\"address\">{e.city}</p>\n                                  <p className=\"per-hour\">\n                                      {e.expectedSalary}{' '}\n                                      <span\n                                          style={{\n                                              color: '#0c3961',\n                                              fontWeight: 600,\n                                          }}\n                                      >\n                                          /hr\n                                      </span>\n                                  </p>\n                                  <p className=\"available\">{e.availability}</p>\n                              </div>\n                              <div className=\"col-lg-10\">\n                                  <div className=\"row\">\n                                      <div className=\"col-lg-7\">\n                                          <h6 className=\"title mt-3\">\n                                              Skills & Specialties\n                                          </h6>\n                                          <p className=\"specialty\">\n                                              {e.specialty}\n                                          </p>\n                                          <hr className=\"line-break\" />\n                                          <h6 className=\"title mt-3\">\n                                              Software Use\n                                          </h6>\n                                          <p className=\"software\">\n                                              {e.software}\n                                          </p>\n                                          <hr className=\"line-break\" />\n                                          <div className=\"eng-rating\">\n                                              <p className=\"eng-prof\">\n                                                  English Language\n                                              </p>\n                                              <div className=\"rating d-inline\">\n                                                  <i className=\"rating-color fas fa-star\"></i>\n                                                  <i className=\"rating-color fas fa-star\"></i>\n                                                  <i className=\"rating-color fas fa-star\"></i>\n                                                  <i className=\"rating-color fas fa-star\"></i>\n                                                  <i className=\"rating-color fas fa-star\"></i>\n                                              </div>\n                                          </div>\n                                          <hr className=\"line-break\" />\n                                      </div>\n                                      <div className=\"col-lg-5\">\n                                          <button\n                                              className=\"btn btn-primary button btn-block mt-3\"\n                                              onClick={() => {\n                                                  setSeeResume(true);\n                                                  viewResume(e._id);\n                                              }}\n                                          >\n                                              See Full Resume\n                                          </button>\n                                          <button\n                                              className=\"btn btn-primary button btn-block mt-3\"\n                                              onClick={() => {\n                                                  removeShortlist(e._id);\n                                              }}\n                                          >\n                                              Remove from Shortlist\n                                          </button>\n                                      </div>\n                                      <div className=\"col-lg-12\">\n                                          <div className=\"recruiter-comments\">\n                                              <p\n                                                  style={{\n                                                      color: '#298494',\n                                                      fontWeight: 600,\n                                                  }}\n                                              >\n                                                  Recruitment's Comments\n                                              </p>\n                                              {e.recruitmentsComment.length >\n                                              0 ? (\n                                                  e.recruitmentsComment.map(\n                                                      (element, index) => (\n                                                          <li\n                                                              className=\"item\"\n                                                              key={index}\n                                                          >\n                                                              {element}\n                                                          </li>\n                                                      )\n                                                  )\n                                              ) : (\n                                                  <p>No comment</p>\n                                              )}\n                                          </div>\n                                      </div>\n                                  </div>\n                              </div>\n                          </div>\n                      </div>\n                  ))\n                : 'No New Candidate'}\n            <div className=\"footer\">\n                <div\n                    className={`ml-auto${\n                        shortlist && shortlist.length === 0 ? ' invisible' : ''\n                    }`}\n                >\n                    {/* <PaginationLink /> */}\n                </div>\n                <label className=\"form-label view-by-label\">View by</label>\n                <select\n                    className=\"form-control input\"\n                    name=\"limit\"\n                    onChange={onChange}\n                    value={parseInt(queryParams.get('limit') || params.viewBy)}\n                >\n                    <option value=\"10\">10</option>\n                    <option value=\"20\">20</option>\n                    <option value=\"50\">50</option>\n                </select>\n            </div>\n        </div>\n    );\n};\n\nShortlistedCandidates.propTypes = {\n    candidateState: PropTypes.object.isRequired,\n    filterState: PropTypes.object.isRequired,\n    viewCandidates: PropTypes.func.isRequired,\n    addFilter: PropTypes.func.isRequired,\n    viewResume: PropTypes.func.isRequired,\n    clearResume: PropTypes.func.isRequired,\n    addCandidate: PropTypes.func.isRequired,\n    removeCandidate: PropTypes.func.isRequired,\n    getShortlisted: PropTypes.func.isRequired,\n    setShortlisted: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n    candidateState: state.candidateState,\n    filterState: state.filterState,\n});\n\nexport default connect(mapStateToProps, {\n    viewCandidates,\n    addFilter,\n    removeFilter,\n    viewResume,\n    addCandidate,\n    removeCandidate,\n    clearResume,\n    getShortlisted,\n    setShortlisted,\n})(ShortlistedCandidates);\n","import React, { Fragment, useEffect } from 'react';\nimport { useParams } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\n// Components\nimport Filter from './ViewCandidates/Filter';\nimport TopVerifedCandidates from './ViewCandidates/TopVerifiedCandidates';\nimport ShortlistedCandidates from './ViewCandidates/ShortlistedCandidates';\nimport { bookInterview } from './../components/BookInterview';\nimport { talkRecruiter } from './../components/TalkRecruiter';\n\n// Actions\nimport {\n    viewCandidates,\n    getShortlisted,\n} from './../state/actions/candidateAction';\n\nconst ViewCandidates = ({\n    viewCandidates,\n    getShortlisted,\n    candidateState: { shortlist },\n    filterState: { filter },\n}) => {\n    const { menu } = useParams();\n\n    const onClick = () => {\n        getShortlisted(shortlist);\n    };\n\n    useEffect(() => {\n        if (menu === 'top-verified-candidates') {\n            viewCandidates();\n        }\n\n        if (menu === 'shortlisted-candidates') {\n            viewCandidates();\n        }\n\n        // eslint-disable-next-line\n    }, [menu, filter]);\n\n    return (\n        <div id=\"viewCandidates\">\n            <div className=\"container-fluid\">\n                <div className=\"header\">\n                    {menu === 'top-verified-candidates' && (\n                        <Fragment>\n                            <h2 className=\"title\">Top Verifed Candidates</h2>\n                            <Link\n                                className=\"btn btn-primary button\"\n                                to={`/view-candidates/shortlisted-candidates${\n                                    shortlist.length > 0\n                                        ? `?candidates=${shortlist.join(',')}`\n                                        : ''\n                                }`}\n                                onClick={onClick}\n                            >\n                                Shortlisted Candidates\n                            </Link>\n                        </Fragment>\n                    )}\n                    {menu === 'shortlisted-candidates' && (\n                        <Fragment>\n                            <h2 className=\"title\">\n                                Your Shortlisted Candidates{' '}\n                                <sup>({shortlist.length})</sup>\n                            </h2>\n                            <button\n                                className=\"btn btn-primary button\"\n                                onClick={() => bookInterview()}\n                            >\n                                Book an Interview\n                            </button>\n                        </Fragment>\n                    )}\n                </div>\n                <div className=\"line-break\" />\n                <div className=\"row\">\n                    <nav className=\"d-none d-sm-block col-sm-2 sidebar\">\n                        <Filter loadData={viewCandidates} />\n                    </nav>\n                    <main className=\"col-sm-10 main\">\n                        {menu === 'top-verified-candidates' && (\n                            <TopVerifedCandidates />\n                        )}\n                        {menu === 'shortlisted-candidates' && (\n                            <ShortlistedCandidates />\n                        )}\n                    </main>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-lg-12\">\n                        <footer>\n                            <div className=\"container\">\n                                <div className=\"row\">\n                                    <div className=\"col-lg-9 text-right\">\n                                        <h1 className=\"title\">\n                                            Didn’t see the talent you’re looking\n                                            for?\n                                        </h1>\n                                    </div>\n                                    <div className=\"col-lg-3\">\n                                        <button\n                                            className=\"btn btn-primary button\"\n                                            onClick={talkRecruiter}\n                                        >\n                                            Talk to a Recruiter\n                                        </button>\n                                    </div>\n                                </div>\n                            </div>\n                        </footer>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nViewCandidates.propTypes = {\n    viewCandidates: PropTypes.func.isRequired,\n    filterState: PropTypes.object.isRequired,\n    candidateState: PropTypes.object.isRequired,\n    getShortlisted: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n    filterState: state.filterState,\n    candidateState: state.candidateState,\n});\n\nexport default connect(mapStateToProps, {\n    viewCandidates,\n    getShortlisted,\n})(ViewCandidates);\n","import { openPopupWidget } from 'react-calendly';\n\nexport const bookInterview = () => {\n    return openPopupWidget({\n        url: 'https://calendly.com/draftsourcevirtual/book-an-interview',\n    });\n};\n","import React, { useState, useEffect } from 'react';\nimport { Prompt } from 'react-router-dom';\n\nconst useUnsavedChangesWarning = () => {\n    const [isDirty, setDirty] = useState(false);\n    const [message, setMessage] = useState('');\n\n    useEffect(() => {\n        //Detecting browser closing\n        window.onbeforeunload = isDirty && (() => message);\n\n        return () => {\n            window.onbeforeunload = null;\n        };\n    }, [isDirty, message]);\n    const routerPrompt = <Prompt when={isDirty} message={message} />;\n\n    return [\n        routerPrompt,\n        () => setDirty(true),\n        () => setDirty(false),\n        (msg) => setMessage(msg),\n    ];\n};\n\nexport default useUnsavedChangesWarning;\n","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\n// List\nimport { countryList } from './../../list/Country';\n\n// Action\nimport { setAlert } from './../../state/actions/alertAction';\nimport {\n    addUser,\n    clearError,\n    clearUser,\n} from './../../state/actions/userAction';\n\n// Utils\nimport useUnsavedChangesWarning from './../../utils/useUnsavedChangesWarning';\n\nconst Step1 = ({\n    setAlert,\n    addUser,\n    clearError,\n    clearUser,\n    userState: { user, error },\n}) => {\n    const [\n        Prompt,\n        setDirty,\n        setPristine,\n        setMessage,\n    ] = useUnsavedChangesWarning();\n\n    const initialInfo = {\n        firstName: '',\n        lastName: '',\n        email: '',\n        cellphone: '',\n        city: '',\n        country: 'Afghanistan',\n        facebook: '',\n    };\n\n    const [info, setInfo] = useState(initialInfo);\n    const [load, setLoad] = useState(true);\n\n    const {\n        firstName,\n        lastName,\n        email,\n        cellphone,\n        city,\n        country,\n        facebook,\n    } = info;\n\n    const onChange = (e) => {\n        const { name, value } = e.target;\n        setInfo({ ...info, [name]: value });\n        setDirty();\n        setMessage('Are you sure you want to leave this page?');\n    };\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n        if (JSON.stringify(info) === JSON.stringify(initialInfo)) {\n            return setAlert(\n                '',\n                'Please fill-in the required boxes to Proceed.'\n            );\n        } else {\n            for (const property in info) {\n                localStorage.setItem([property], info[property]);\n            }\n            addUser({ ...info, type: 'Remote Worker' });\n            setInfo(initialInfo);\n            setPristine();\n        }\n    };\n\n    useEffect(() => {\n        if (load) {\n            localStorage.clear();\n            setLoad(false);\n        }\n\n        if (JSON.stringify(info) !== JSON.stringify(initialInfo)) {\n            setDirty();\n            setMessage('Are you sure you want to leave this page?');\n        }\n\n        if (error) {\n            localStorage.clear();\n            setAlert('', error.msg);\n            clearError();\n        }\n\n        if (user) {\n            setAlert(\n                '/',\n                'Kindly check <span>email</span> for confirmation to proceed.'\n            );\n            clearUser();\n        }\n\n        // eslint-disable-next-line\n    }, [info, load, error, user]);\n    return (\n        <div className=\"step-1\">\n            {Prompt}\n            <div className=\"row\">\n                <div className=\"col-lg-6 offset-lg-3\">\n                    <form className=\"form\" onSubmit={onSubmit}>\n                        <div className=\"form-group\">\n                            <div className=\"form-row\">\n                                <div className=\"col-lg-4\">\n                                    <label\n                                        htmlFor=\"firstNameInput\"\n                                        className=\"form-label\"\n                                    >\n                                        First Name\n                                    </label>\n                                </div>\n                                <div className=\"col-lg-8\">\n                                    <input\n                                        type=\"text\"\n                                        className=\"form-control input\"\n                                        id=\"firstNameInput\"\n                                        name=\"firstName\"\n                                        value={firstName}\n                                        onChange={onChange}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"form-group\">\n                            <div className=\"form-row\">\n                                <div className=\"col-lg-4\">\n                                    <label\n                                        htmlFor=\"lastNameInput\"\n                                        className=\"form-label\"\n                                    >\n                                        Last Name\n                                    </label>\n                                </div>\n                                <div className=\"col-lg-8\">\n                                    <input\n                                        type=\"text\"\n                                        className=\"form-control input\"\n                                        id=\"lastNameInput\"\n                                        name=\"lastName\"\n                                        value={lastName}\n                                        onChange={onChange}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"form-group\">\n                            <div className=\"form-row\">\n                                <div className=\"col-lg-4\">\n                                    <label\n                                        htmlFor=\"emailInput\"\n                                        className=\"form-label\"\n                                    >\n                                        Email\n                                    </label>\n                                </div>\n                                <div className=\"col-lg-8\">\n                                    <input\n                                        type=\"email\"\n                                        className=\"form-control input\"\n                                        id=\"emailInput\"\n                                        name=\"email\"\n                                        value={email}\n                                        onChange={onChange}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"form-group\">\n                            <div className=\"form-row\">\n                                <div className=\"col-lg-4\">\n                                    <label\n                                        htmlFor=\"cellphoneInput\"\n                                        className=\"form-label\"\n                                    >\n                                        Cellphone No.\n                                    </label>\n                                </div>\n                                <div className=\"col-lg-8\">\n                                    <input\n                                        type=\"text\"\n                                        className=\"form-control input\"\n                                        id=\"cellphoneInput\"\n                                        value={cellphone}\n                                        name=\"cellphone\"\n                                        onChange={onChange}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"form-group\">\n                            <div className=\"form-row\">\n                                <div className=\"col-lg-4\">\n                                    <label\n                                        htmlFor=\"cityInput\"\n                                        className=\"form-label\"\n                                    >\n                                        Country\n                                    </label>\n                                </div>\n                                <div className=\"col-lg-8\">\n                                    <select\n                                        id=\"countryInput\"\n                                        className=\"form-control input\"\n                                        name=\"country\"\n                                        onChange={onChange}\n                                        value={country}\n                                    >\n                                        {countryList().map((e, i) => (\n                                            <option key={i} value={e}>\n                                                {e}\n                                            </option>\n                                        ))}\n                                    </select>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"form-group\">\n                            <div className=\"form-row\">\n                                <div className=\"col-lg-4\">\n                                    <label\n                                        htmlFor=\"cityInput\"\n                                        className=\"form-label\"\n                                    >\n                                        City\n                                    </label>\n                                </div>\n                                <div className=\"col-lg-8\">\n                                    <input\n                                        type=\"text\"\n                                        className=\"form-control input\"\n                                        id=\"cityInput\"\n                                        name=\"city\"\n                                        value={city}\n                                        onChange={onChange}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"form-group\">\n                            <div className=\"form-row\">\n                                <div className=\"col-lg-4\">\n                                    <label\n                                        htmlFor=\"facebookInput\"\n                                        className=\"form-label\"\n                                    >\n                                        Facebook Link\n                                    </label>\n                                </div>\n                                <div className=\"col-lg-8\">\n                                    <input\n                                        type=\"text\"\n                                        className=\"form-control input\"\n                                        id=\"facebookInput\"\n                                        value={facebook}\n                                        name=\"facebook\"\n                                        onChange={onChange}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"form-group\">\n                            <div className=\"form-row\">\n                                <div className=\"col-lg-8 offset-lg-4\">\n                                    <input\n                                        type=\"submit\"\n                                        className=\"btn btn-primary btn-block button\"\n                                        value=\"Create Resume\"\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nStep1.propTypes = {\n    setAlert: PropTypes.func.isRequired,\n    addUser: PropTypes.func.isRequired,\n    userState: PropTypes.object.isRequired,\n    clearError: PropTypes.func.isRequired,\n    clearUser: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n    userState: state.userState,\n});\n\nexport default connect(mapStateToProps, {\n    setAlert,\n    addUser,\n    clearError,\n    clearUser,\n})(Step1);\n","export const countryList = () => {\n    const list = [\n        'Afghanistan',\n        'Albania',\n        'Algeria',\n        'Andorra',\n        'Angola',\n        'Anguilla',\n        'Antigua & Barbuda',\n        'Argentina',\n        'Armenia',\n        'Aruba',\n        'Australia',\n        'Austria',\n        'Azerbaijan',\n        'Bahamas',\n        'Bahrain',\n        'Bangladesh',\n        'Barbados',\n        'Belarus',\n        'Belgium',\n        'Belize',\n        'Benin',\n        'Bermuda',\n        'Bhutan',\n        'Bolivia',\n        'Bosnia & Herzegovina',\n        'Botswana',\n        'Brazil',\n        'British Virgin Islands',\n        'Brunei',\n        'Bulgaria',\n        'Burkina Faso',\n        'Burundi',\n        'Cambodia',\n        'Cameroon',\n        'Cape Verde',\n        'Cayman Islands',\n        'Chad',\n        'Chile',\n        'China',\n        'Colombia',\n        'Congo',\n        'Cook Islands',\n        'Costa Rica',\n        'Cote D Ivoire',\n        'Croatia',\n        'Cruise Ship',\n        'Cuba',\n        'Cyprus',\n        'Czech Republic',\n        'Denmark',\n        'Djibouti',\n        'Dominica',\n        'Dominican Republic',\n        'Ecuador',\n        'Egypt',\n        'El Salvador',\n        'Equatorial Guinea',\n        'Estonia',\n        'Ethiopia',\n        'Falkland Islands',\n        'Faroe Islands',\n        'Fiji',\n        'Finland',\n        'France',\n        'French Polynesia',\n        'French West Indies',\n        'Gabon',\n        'Gambia',\n        'Georgia',\n        'Germany',\n        'Ghana',\n        'Gibraltar',\n        'Greece',\n        'Greenland',\n        'Grenada',\n        'Guam',\n        'Guatemala',\n        'Guernsey',\n        'Guinea',\n        'Guinea Bissau',\n        'Guyana',\n        'Haiti',\n        'Honduras',\n        'Hong Kong',\n        'Hungary',\n        'Iceland',\n        'India',\n        'Indonesia',\n        'Iran',\n        'Iraq',\n        'Ireland',\n        'Isle of Man',\n        'Israel',\n        'Italy',\n        'Jamaica',\n        'Japan',\n        'Jersey',\n        'Jordan',\n        'Kazakhstan',\n        'Kenya',\n        'Kuwait',\n        'Kyrgyz Republic',\n        'Laos',\n        'Latvia',\n        'Lebanon',\n        'Lesotho',\n        'Liberia',\n        'Libya',\n        'Liechtenstein',\n        'Lithuania',\n        'Luxembourg',\n        'Macau',\n        'Macedonia',\n        'Madagascar',\n        'Malawi',\n        'Malaysia',\n        'Maldives',\n        'Mali',\n        'Malta',\n        'Mauritania',\n        'Mauritius',\n        'Mexico',\n        'Moldova',\n        'Monaco',\n        'Mongolia',\n        'Montenegro',\n        'Montserrat',\n        'Morocco',\n        'Mozambique',\n        'Namibia',\n        'Nepal',\n        'Netherlands',\n        'Netherlands Antilles',\n        'New Caledonia',\n        'New Zealand',\n        'Nicaragua',\n        'Niger',\n        'Nigeria',\n        'Norway',\n        'Oman',\n        'Pakistan',\n        'Palestine',\n        'Panama',\n        'Papua New Guinea',\n        'Paraguay',\n        'Peru',\n        'Philippines',\n        'Poland',\n        'Portugal',\n        'Puerto Rico',\n        'Qatar',\n        'Reunion',\n        'Romania',\n        'Russia',\n        'Rwanda',\n        'Saint Pierre & Miquelon',\n        'Samoa',\n        'San Marino',\n        'Satellite',\n        'Saudi Arabia',\n        'Senegal',\n        'Serbia',\n        'Seychelles',\n        'Sierra Leone',\n        'Singapore',\n        'Slovakia',\n        'Slovenia',\n        'South Africa',\n        'South Korea',\n        'Spain',\n        'Sri Lanka',\n        'St Kitts & Nevis',\n        'St Lucia',\n        'St Vincent',\n        'St. Lucia',\n        'Sudan',\n        'Suriname',\n        'Swaziland',\n        'Sweden',\n        'Switzerland',\n        'Syria',\n        'Taiwan',\n        'Tajikistan',\n        'Tanzania',\n        'Thailand',\n        \"Timor L'Este\",\n        'Togo',\n        'Tonga',\n        'Trinidad & Tobago',\n        'Tunisia',\n        'Turkey',\n        'Turkmenistan',\n        'Turks & Caicos',\n        'Uganda',\n        'Ukraine',\n        'United Arab Emirates',\n        'United Kingdom',\n        'Uruguay',\n        'Uzbekistan',\n        'Venezuela',\n        'Vietnam',\n        'Virgin Islands (US)',\n        'Yemen',\n        'Zambia',\n        'Zimbabwe',\n    ];\n    return list;\n};\n","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { useHistory } from 'react-router-dom';\n\n// Utils\nimport useUnsavedChangesWarning from './../../utils/useUnsavedChangesWarning';\n\n// Action\nimport { setAlert } from './../../state/actions/alertAction';\n\nconst Step2 = ({ uploadFile, setAlert }) => {\n    const [\n        Prompt,\n        setDirty,\n        setPristine,\n        setMessage,\n    ] = useUnsavedChangesWarning();\n    const history = useHistory();\n\n    const initialInfo = {\n        resumeImage: '',\n    };\n\n    const [info, setInfo] = useState(initialInfo);\n    const [load, setLoad] = useState(true);\n    const [upload, setUpload] = useState(null);\n    const [submit, setSubmit] = useState(false);\n\n    const onChange = (e) => {\n        const { name, files } = e.target;\n        setInfo({ ...info, [name]: files[0] });\n        setUpload(URL.createObjectURL(files[0]));\n        setDirty();\n        setMessage('Are you sure you want to leave this page?');\n    };\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n\n        if (JSON.stringify(info) === JSON.stringify(initialInfo)) {\n            return setAlert(\n                '',\n                'Please fill-in the required boxes to Proceed.'\n            );\n        } else {\n            uploadFile(info);\n            setInfo(initialInfo);\n            setUpload(null);\n            setSubmit(true);\n            setPristine();\n        }\n    };\n\n    useEffect(() => {\n        if (load) {\n            localStorage.clear();\n            setLoad(false);\n        }\n\n        if (JSON.stringify(info) !== JSON.stringify(initialInfo)) {\n            setDirty();\n            setMessage('Are you sure you want to leave this page?');\n        }\n\n        if (submit) {\n            setSubmit(false);\n            history.push({\n                pathname: '/create-resume',\n                search: 'step=3',\n            });\n        }\n\n        // eslint-disable-next-line\n    }, [info, load, submit]);\n\n    return (\n        <div className=\"step-2\">\n            {Prompt}\n            <div className=\"row\">\n                <div className=\"col-lg-6 offset-lg-3\">\n                    <form className=\"form\" onSubmit={onSubmit}>\n                        <div className=\"form-group\">\n                            <p className=\"title\">\n                                Upload photo ID for verification\n                            </p>\n                            <div\n                                className=\"upload\"\n                                style={\n                                    upload\n                                        ? {\n                                              backgroundImage: `url(${upload})`,\n                                          }\n                                        : null\n                                }\n                            >\n                                <span\n                                    className={`top-right${\n                                        upload ? ' invisible' : ''\n                                    }`}\n                                ></span>\n                                <span\n                                    className={`bottom-left${\n                                        upload ? ' invisible' : ''\n                                    }`}\n                                ></span>\n                                <p\n                                    className={`caption${\n                                        upload ? ' invisible' : ''\n                                    }`}\n                                >\n                                    Drag or Upload from your mobile or desktop\n                                </p>\n                                <label\n                                    htmlFor=\"resumeImageInput\"\n                                    className={`form-label${\n                                        upload ? ' invisible' : ''\n                                    }`}\n                                >\n                                    Upload\n                                </label>\n                                <input\n                                    type=\"file\"\n                                    name=\"resumeImage\"\n                                    id=\"resumeImageInput\"\n                                    className=\"form-control-file input\"\n                                    accept=\"image/*\"\n                                    onChange={onChange}\n                                />\n                            </div>\n                        </div>\n                        <div className=\"form-group\">\n                            {upload ? (\n                                <>\n                                    <label\n                                        htmlFor=\"replaceUpload\"\n                                        className=\"btn btn-primary button replace\"\n                                    >\n                                        Replace\n                                    </label>\n                                    <input\n                                        type=\"file\"\n                                        name=\"replace\"\n                                        id=\"replaceUpload\"\n                                        className=\"d-none\"\n                                        onChange={onChange}\n                                    />\n                                    <br />\n                                </>\n                            ) : null}\n                            <input\n                                type=\"submit\"\n                                className=\"btn btn-primary button\"\n                                value=\"Get Started\"\n                            />\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nStep2.propTypes = {\n    setAlert: PropTypes.func.isRequired,\n};\nexport default connect(null, { setAlert })(Step2);\n","import axios from 'axios';\nimport { ADD_RESUME, CLEAR_RESUME, RESUMES_ERROR, CLEAR_ERROR } from './types';\n\n// Add resume\nexport const addResume = (resume) => (dispatch) => {\n    try {\n        dispatch({\n            type: ADD_RESUME,\n            payload: resume,\n        });\n    } catch (error) {\n        dispatch({\n            type: RESUMES_ERROR,\n            payload: error.response.data,\n        });\n    }\n};\n\n// Submit resume\nexport const submitResume = (resume) => async (dispatch) => {\n    try {\n        const config = {\n            headers: {\n                'Content-Type': 'multipart/form-data',\n            },\n        };\n        await axios.post('/api/resume', resume, config);\n        dispatch({\n            type: CLEAR_RESUME,\n        });\n    } catch (error) {\n        dispatch({\n            type: RESUMES_ERROR,\n            payload: error.response.data,\n        });\n    }\n};\n\n// Clear error\nexport const clearError = () => {\n    return {\n        type: CLEAR_ERROR,\n    };\n};\n","import React, { useState, useEffect, useCallback } from 'react';\nimport { Modal, Button } from 'react-bootstrap';\n\n// Images\nimport image from '../../images/speedtest_sample.jpg';\n\nconst InternetResultModal = ({ isShow, isHide, uploadModal }) => {\n    const [show, setShow] = useState(false);\n    const [upload, setUpload] = useState(null);\n\n    const handleClose = useCallback(() => {\n        isHide();\n        setShow(false);\n    }, [isHide]);\n\n    const handleShow = () => setShow(true);\n\n    const onUpload = (e) => {\n        setUpload(e.target.files[0]);\n    };\n\n    useEffect(() => {\n        if (isShow) {\n            handleShow();\n        }\n\n        if (upload !== null) {\n            uploadModal('internetResult', upload);\n            handleClose();\n        }\n    }, [handleClose, isShow, upload, uploadModal]);\n    return (\n        <Modal\n            className=\"step-3-upload-modal\"\n            show={show}\n            onHide={handleClose}\n            backdrop=\"static\"\n            keyboard={false}\n            size=\"lg\"\n            aria-labelledby=\"contained-modal-title-vcenter\"\n            centered\n        >\n            <Modal.Header closeButton>\n                <Modal.Title>Speedtest Screenshot Guideline</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <p className=\"desc\">\n                    Screenshot your whole laptop / desktop monitor of your\n                    minimized Speedtest browser window on a top of the Work from\n                    Home Capabilities page. See example below\n                </p>\n                <img src={image} className=\"img-fluid\" alt=\"Sample Upload\" />\n            </Modal.Body>\n            <Modal.Footer>\n                <Button\n                    variant=\"primary\"\n                    onClick={handleClose}\n                    className=\"button cancel\"\n                >\n                    Cancel\n                </Button>\n                <label\n                    className=\"btn btn-primary button upload\"\n                    htmlFor=\"uploadInput\"\n                >\n                    Upload\n                </label>\n                <input\n                    type=\"file\"\n                    accept=\"image/*\"\n                    name=\"upload\"\n                    id=\"uploadInput\"\n                    className=\"form-control-file\"\n                    onChange={onUpload}\n                />\n            </Modal.Footer>\n        </Modal>\n    );\n};\n\nexport default InternetResultModal;\n","import React, { useState, useEffect, useCallback } from 'react';\nimport { Modal, Button } from 'react-bootstrap';\n\n// Images\nimport image from '../../images/computer_specs_sample.jpg';\n\nconst ComputerSpecsModal = ({ isShow, isHide, uploadModal }) => {\n    const [show, setShow] = useState(false);\n    const [upload, setUpload] = useState(null);\n\n    const handleClose = useCallback(() => {\n        isHide();\n        setShow(false);\n    }, [isHide]);\n\n    const handleShow = () => setShow(true);\n\n    const onUpload = (e) => {\n        setUpload(e.target.files[0]);\n    };\n\n    useEffect(() => {\n        if (isShow) {\n            handleShow();\n        }\n\n        if (upload !== null) {\n            uploadModal('computerSpecs', upload);\n            handleClose();\n        }\n    }, [handleClose, isShow, upload, uploadModal]);\n    return (\n        <Modal\n            className=\"step-3-upload-modal\"\n            show={show}\n            onHide={handleClose}\n            backdrop=\"static\"\n            keyboard={false}\n            size=\"lg\"\n            aria-labelledby=\"contained-modal-title-vcenter\"\n            centered\n        >\n            <Modal.Header closeButton>\n                <Modal.Title>Computer Specs Screenshot Guideline</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <p className=\"desc\">\n                    Screenshot your whole laptop / desktop monitor of your\n                    Computer Specs window on a top of the Work from Home\n                    Capabilities page. See example below\n                </p>\n                <img src={image} className=\"img-fluid\" alt=\"Sample Upload\" />\n            </Modal.Body>\n            <Modal.Footer>\n                <Button\n                    variant=\"primary\"\n                    onClick={handleClose}\n                    className=\"button cancel\"\n                >\n                    Cancel\n                </Button>\n                <label\n                    className=\"btn btn-primary button upload\"\n                    htmlFor=\"uploadInput\"\n                >\n                    Upload\n                </label>\n                <input\n                    type=\"file\"\n                    accept=\"image/*\"\n                    name=\"upload\"\n                    id=\"uploadInput\"\n                    className=\"form-control-file\"\n                    onChange={onUpload}\n                />\n            </Modal.Footer>\n        </Modal>\n    );\n};\n\nexport default ComputerSpecsModal;\n","import React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\n// Utils\nimport useUnsavedChangesWarning from './../../utils/useUnsavedChangesWarning';\n\n// Action\nimport { setAlert } from './../../state/actions/alertAction';\nimport { addResume, clearError } from './../../state/actions/resumeAction';\n\n// List\nimport { workspaceList } from './../../list/Workspace';\nimport { internetTypeList } from './../../list/InternetType';\nimport { hardwareTypeList } from './../../list/HardwareType';\n\n// Components\nimport InternetResultModal from './InternetResultModal';\nimport ComputerSpecsModal from './ComputerSpecsModal';\n\nconst Step3 = ({\n    setAlert,\n    addResume,\n    clearError,\n    uploadFile,\n    resumeState: { error },\n}) => {\n    const [\n        Prompt,\n        setDirty,\n        setPristine,\n        setMessage,\n    ] = useUnsavedChangesWarning();\n\n    const history = useHistory();\n\n    const initialInfo = {\n        workspace: 'Office',\n        internetType: 'DSL',\n        hardwareType: 'Desktop',\n        brandName: '',\n        internetResult: '',\n        computerSpecs: '',\n    };\n    const initialModal = {\n        internetResult: false,\n        computerSpecs: false,\n    };\n\n    const [info, setInfo] = useState(initialInfo);\n    const [modal, setModal] = useState(initialModal);\n    const [submit, setSubmit] = useState(false);\n\n    const {\n        workspace,\n        internetType,\n        hardwareType,\n        brandName,\n        internetResult,\n        computerSpecs,\n    } = info;\n\n    const onChange = (e) => {\n        const { name, value } = e.target;\n        setInfo({ ...info, [name]: value });\n        setDirty();\n        setMessage('Are you sure you want to leave this page?');\n    };\n\n    const uploadModal = (name, value) => {\n        setInfo({ ...info, [name]: value });\n    };\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n\n        if (\n            JSON.stringify(info) === JSON.stringify(initialInfo) ||\n            internetResult === '' ||\n            computerSpecs === ''\n        ) {\n            return setAlert(\n                '',\n                'Please fill-in the required boxes to Proceed.'\n            );\n        } else {\n            uploadFile({\n                internetResult,\n                computerSpecs,\n            });\n            addResume({\n                workspace,\n                internetType,\n                hardwareType,\n                brandName,\n            });\n            setInfo(initialInfo);\n            setSubmit(true);\n            setPristine();\n        }\n    };\n\n    useEffect(() => {\n        if (JSON.stringify(info) !== JSON.stringify(initialInfo)) {\n            setDirty();\n            setMessage('Are you sure you want to leave this page?');\n        }\n\n        if (error) {\n            setAlert('', error.msg);\n            clearError();\n        }\n\n        if (submit) {\n            setSubmit(false);\n            history.push({\n                pathname: '/create-resume',\n                search: 'step=4',\n            });\n        }\n\n        // eslint-disable-next-line\n    }, [info, submit, error]);\n\n    return (\n        <div className=\"step-3\">\n            <div className=\"row\">\n                <div className=\"col-lg-8 offset-lg-2\">\n                    <form className=\"form\" onSubmit={onSubmit}>\n                        <div className=\"form-row\">\n                            <div className=\"left col-lg-6 col-md-6 col-sm-12\">\n                                <div className=\"form-group\">\n                                    <label\n                                        htmlFor=\"workspaceInput\"\n                                        className=\"form-label\"\n                                    >\n                                        Workspace\n                                    </label>\n                                    <select\n                                        name=\"workspace\"\n                                        id=\"workspaceInput\"\n                                        className=\"form-control input\"\n                                        value={workspace}\n                                        onChange={onChange}\n                                    >\n                                        {workspaceList().map((e, i) => (\n                                            <option key={i} value={e}>\n                                                {e}\n                                            </option>\n                                        ))}\n                                    </select>\n                                </div>\n                                <div className=\"form-group\">\n                                    <label\n                                        htmlFor=\"internetTypeInput\"\n                                        className=\"form-label\"\n                                    >\n                                        Internet Type\n                                    </label>\n                                    <select\n                                        name=\"internetType\"\n                                        id=\"internetTypeInput\"\n                                        className=\"form-control input\"\n                                        value={internetType}\n                                        onChange={onChange}\n                                    >\n                                        {internetTypeList().map((e, i) => (\n                                            <option key={i} value={e}>\n                                                {e}\n                                            </option>\n                                        ))}\n                                    </select>\n                                </div>\n                                <div className=\"form-group\">\n                                    <label\n                                        htmlFor=\"hardwareTypeInput\"\n                                        className=\"form-label\"\n                                    >\n                                        Hardware Type\n                                    </label>\n                                    <select\n                                        name=\"hardwareType\"\n                                        id=\"hardwareTypeInput\"\n                                        className=\"form-control input\"\n                                        value={hardwareType}\n                                        onChange={onChange}\n                                    >\n                                        {hardwareTypeList().map((e, i) => (\n                                            <option key={i} value={e}>\n                                                {e}\n                                            </option>\n                                        ))}\n                                    </select>\n                                </div>\n                                <div className=\"form-group\">\n                                    <label\n                                        htmlFor=\"brandNameInput\"\n                                        className=\"form-label\"\n                                    >\n                                        Brand Name\n                                    </label>\n                                    <input\n                                        type=\"text\"\n                                        className=\"form-control input\"\n                                        id=\"brandNameInput\"\n                                        name=\"brandName\"\n                                        value={brandName}\n                                        onChange={onChange}\n                                    />\n                                </div>\n                            </div>\n                            <div className=\"right col-lg-6 col-md-6 col-sm-12\">\n                                <div className=\"form-group\">\n                                    <p className=\"title\">\n                                        Internet Speedtest Result\n                                    </p>\n                                    <p className=\"subtitle\">\n                                        visit{' '}\n                                        <a\n                                            href=\"https://www.speedtest.net/\"\n                                            style={{ color: '#0c3961' }}\n                                            target=\"_blank\"\n                                            rel=\"noopener noreferrer\"\n                                        >\n                                            www.speedtest.net\n                                        </a>\n                                    </p>\n                                    <button\n                                        type=\"button\"\n                                        className=\"btn btn-primary upload-button\"\n                                        id=\"internetResultButton\"\n                                        onClick={() =>\n                                            setModal({\n                                                ...modal,\n                                                internetResult: true,\n                                            })\n                                        }\n                                    >\n                                        Upload Speedtest Result\n                                    </button>\n                                    <p\n                                        className={`upload${\n                                            internetResult !== ''\n                                                ? ' visible'\n                                                : ''\n                                        }`}\n                                    >\n                                        <label\n                                            id=\"internetResultFile\"\n                                            className=\"selected-file\"\n                                        >\n                                            {internetResult.name}\n                                        </label>\n                                        <label\n                                            htmlFor=\"replaceInternetResultInput\"\n                                            className=\"replace-button\"\n                                        >\n                                            Replace\n                                        </label>\n                                        <input\n                                            type=\"file\"\n                                            accept=\"image/*\"\n                                            name=\"internetResult\"\n                                            id=\"replaceInternetResultInput\"\n                                            className=\"form-control-file\"\n                                            onChange={(e) =>\n                                                setInfo({\n                                                    ...info,\n                                                    internetResult:\n                                                        e.target.files[0],\n                                                })\n                                            }\n                                        />\n                                    </p>\n                                </div>\n                                <div className=\"form-group\">\n                                    <p className=\"title\">Computer Specs</p>\n                                    <button\n                                        type=\"button\"\n                                        className=\"btn btn-primary upload-button\"\n                                        onClick={() =>\n                                            setModal({\n                                                ...modal,\n                                                computerSpecs: true,\n                                            })\n                                        }\n                                    >\n                                        Upload Computer Specs\n                                    </button>\n                                    <p\n                                        className={`upload${\n                                            computerSpecs !== ''\n                                                ? ' visible'\n                                                : ''\n                                        }`}\n                                    >\n                                        <label\n                                            id=\"computerSpecsFile\"\n                                            className=\"selected-file\"\n                                        >\n                                            {computerSpecs.name}\n                                        </label>\n                                        <label\n                                            htmlFor=\"replaceComputerSpecsInput\"\n                                            className=\"replace-button\"\n                                        >\n                                            Replace\n                                        </label>\n                                        <input\n                                            id=\"replaceComputerSpecsInput\"\n                                            type=\"file\"\n                                            accept=\"image/*\"\n                                            name=\"computerSpecs\"\n                                            className=\"form-control-file\"\n                                            onChange={(e) =>\n                                                setInfo({\n                                                    ...info,\n                                                    computerSpecs:\n                                                        e.target.files[0],\n                                                })\n                                            }\n                                        />\n                                    </p>\n                                </div>\n                                <div className=\"form-group\">\n                                    <input\n                                        type=\"submit\"\n                                        value=\"Proceed\"\n                                        className=\"btn btn-primary button\"\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                    </form>\n                </div>\n            </div>\n            {Prompt}\n            {modal.internetResult ? (\n                <InternetResultModal\n                    isShow={modal.internetResult}\n                    isHide={() => setModal({ ...modal, internetResult: false })}\n                    uploadModal={uploadModal}\n                />\n            ) : null}\n            {modal.computerSpecs ? (\n                <ComputerSpecsModal\n                    isShow={modal.computerSpecs}\n                    isHide={() => setModal({ ...modal, computerSpecs: false })}\n                    uploadModal={uploadModal}\n                />\n            ) : null}\n        </div>\n    );\n};\n\nStep3.propTypes = {\n    setAlert: PropTypes.func.isRequired,\n    addResume: PropTypes.func.isRequired,\n    clearError: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n    resumeState: state.resumeState,\n});\n\nexport default connect(mapStateToProps, { setAlert, clearError, addResume })(\n    Step3\n);\n","export const workspaceList = () => {\n    return ['Office', 'Home'];\n};\n","export const internetTypeList = () => {\n    return ['DSL', 'Fiber', 'Wireless Broadband'];\n};\n","export const hardwareTypeList = () => {\n    return ['Desktop', 'Laptop'];\n};\n","import { useState, useEffect } from 'react';\n\nconst useWindowSize = () => {\n    const [windowSize, setWindowSize] = useState({\n        width: undefined,\n        height: undefined,\n    });\n\n    useEffect(() => {\n        function handleResize() {\n            setWindowSize({\n                width: window.innerWidth,\n                height: window.innerHeight,\n            });\n        }\n        window.addEventListener(\"resize\", handleResize);\n        handleResize();\n        return () => window.removeEventListener(\"resize\", handleResize);\n      }, []);\n\n    return windowSize;\n}\n \nexport default useWindowSize;","import React from 'react';\n\nconst EducationItem = ({ index, education, editEdu, deleteEdu }) => {\n    const {\n        choices,\n        degree,\n        school,\n        course,\n        monthYearStarted,\n        monthYearGraduated,\n    } = education;\n    const onEditEdu = (e) => {\n        e.preventDefault();\n        editEdu(index);\n    };\n\n    const onDeleteEdu = (e) => {\n        e.preventDefault();\n        deleteEdu(index);\n    };\n\n    return (\n        <div className=\"education-entry\">\n            <div className=\"row\">\n                <div className=\"col-lg-8 col-sm-8\">\n                    {choices ? (\n                        <h6 className=\"item choices\">{choices}</h6>\n                    ) : null}\n                    {degree ? <p className=\"item degree\">{degree}</p> : null}\n                    {school ? <p className=\"item\">{school}</p> : null}\n                    {course ? <p className=\"item\">{course}</p> : null}\n                    {monthYearStarted && monthYearGraduated ? (\n                        <p className=\"mb-0\">\n                            <span className=\"item\">{monthYearStarted}</span> -{' '}\n                            <span className=\"item\">{monthYearGraduated}</span>\n                        </p>\n                    ) : null}\n                </div>\n                <div className=\"col-lg-4 col-sm-4 d-flex justify-content-between\">\n                    <div>\n                        <button onClick={onEditEdu}>Edit</button>\n                    </div>\n                    <div>\n                        <button onClick={onDeleteEdu}>Delete</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default EducationItem;\n","import React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\n// Utils\nimport useUnsavedChangesWarning from './../../utils/useUnsavedChangesWarning';\nimport useWindowSize from './../../utils/useWindowSize';\n\n// Action\nimport { setAlert } from './../../state/actions/alertAction';\nimport { addResume, clearError } from './../../state/actions/resumeAction';\n\n// List\nimport { availabilityList } from './../../list/Availability';\n\n// Components\nimport EducationItem from './EducationItem';\n\nconst Step4 = ({\n    setAlert,\n    addResume,\n    clearError,\n    uploadFile,\n    resumeState: { error },\n}) => {\n    const [\n        Prompt,\n        setDirty,\n        setPristine,\n        setMessage,\n    ] = useUnsavedChangesWarning();\n\n    const windowSize = useWindowSize();\n\n    const history = useHistory();\n\n    const initialInfo = {\n        availability: 'Full Time',\n        expectedSalary: '',\n        currency: 'USD',\n    };\n    const initialEducation = {\n        choices: 'High School',\n        degree: '',\n        school: '',\n        course: '',\n        monthYearStarted: '',\n        monthYearGraduated: '',\n    };\n\n    const [info, setInfo] = useState(initialInfo);\n    const [education, setEducation] = useState([]);\n    const [currentEdu, setCurrentEdu] = useState(null);\n    const [disableInput, setDisableInput] = useState(true);\n    const [educationItem, setEducationItem] = useState(initialEducation);\n    const [uploadAudio, setUploadAudio] = useState(null);\n    const [submit, setSubmit] = useState(false);\n\n    const { availability, expectedSalary, currency } = info;\n\n    const eduItem = (e) => {\n        const { name, value } = e.target;\n        setEducationItem({ ...educationItem, [name]: value });\n        if (name === 'choices') {\n            if (value === 'High School') {\n                setDisableInput(true);\n                document.querySelector('.input[name=degree]').value = '';\n                document.querySelector('.input[name=course]').value = '';\n                const copy = {\n                    ...educationItem,\n                    choices: 'High School',\n                    degree: '',\n                    course: '',\n                };\n                setEducationItem({ ...copy });\n            } else {\n                setDisableInput(false);\n            }\n        }\n    };\n\n    const uploadButton = (e) => {\n        const { files } = e.target;\n        setUploadAudio(files[0]);\n    };\n\n    const uploadAudioClick = (e) => {\n        if (e.target.classList.contains('disabled')) {\n            return e.preventDefault();\n        }\n    };\n\n    const replaceUploadButton = (e) => {\n        const { files } = e.target;\n        setUploadAudio(files[0]);\n    };\n\n    const addEducation = (e) => {\n        e.preventDefault();\n        const {\n            choices,\n            degree,\n            school,\n            course,\n            monthYearStarted,\n            monthYearGraduated,\n        } = educationItem;\n        if (choices === 'High School') {\n            if (\n                school === '' ||\n                monthYearStarted === '' ||\n                monthYearGraduated === ''\n            ) {\n                return setAlert(\n                    '',\n                    'Please fill-in the required boxes to Proceed.'\n                );\n            }\n        } else {\n            if (\n                degree === '' ||\n                school === '' ||\n                course === '' ||\n                monthYearStarted === '' ||\n                monthYearGraduated === ''\n            ) {\n                return setAlert(\n                    '',\n                    'Please fill-in the required boxes to Proceed.'\n                );\n            }\n        }\n        setEducation((education) => [...education, educationItem]);\n        clearEducationItem();\n        setDisableInput(true);\n        setDirty();\n        setMessage('Are you sure you want to leave this page?');\n    };\n\n    const editEdu = (e) => {\n        if (education[e]['choices'] !== 'High School') {\n            setDisableInput(false);\n        }\n        Array.from(document.querySelectorAll('.center-col .input')).forEach(\n            (input) => (input.value = education[e][input.name])\n        );\n        setEducationItem({ ...education[e] });\n        setCurrentEdu(e);\n    };\n\n    const updateEdu = (e) => {\n        e.preventDefault();\n        setEducationItem([...education.splice(currentEdu, 1, educationItem)]);\n        clearCurrentEdu();\n        setDirty();\n        setMessage('Are you sure you want to leave this page?');\n    };\n\n    const clearCurrentEduBtn = (e) => {\n        e.preventDefault();\n        clearCurrentEdu();\n    };\n\n    const deleteEdu = (e) => {\n        if (currentEdu === e) {\n            clearCurrentEdu();\n        }\n        setEducation((education) => [\n            ...education.filter((x) => education.indexOf(x) !== e),\n        ]);\n    };\n\n    const clearEducationItem = () => {\n        setEducationItem({ ...initialEducation });\n        setDisableInput(true);\n        Array.from(document.querySelectorAll('.center-col .input')).forEach(\n            (input) => (input.value = initialEducation[input.name])\n        );\n    };\n\n    const clearCurrentEdu = () => {\n        clearEducationItem();\n        setCurrentEdu(null);\n    };\n\n    const onChange = (e) => {\n        const { name, value } = e.target;\n        setInfo({ ...info, [name]: value });\n    };\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n\n        if (\n            availability === '' ||\n            expectedSalary === '' ||\n            currency === '' ||\n            uploadAudio === null ||\n            education.length === 0\n        ) {\n            return setAlert(\n                '',\n                'Please fill-in the required boxes to Proceed.'\n            );\n        } else {\n            uploadFile({\n                aboutYourself: uploadAudio,\n            });\n            addResume({\n                ...info,\n                education,\n            });\n            setInfo(initialInfo);\n            setUploadAudio(null);\n            setEducation([]);\n            setSubmit(true);\n            setPristine();\n        }\n    };\n\n    useEffect(() => {\n        if (\n            JSON.stringify(info) === JSON.stringify(initialInfo) ||\n            education.length === 0\n        ) {\n            setDirty();\n            setMessage('Are you sure you want to leave this page?');\n        }\n\n        if (error) {\n            setAlert('', error.msg);\n            clearError();\n        }\n\n        if (submit) {\n            setSubmit(false);\n            history.push({\n                pathname: '/create-resume',\n                search: 'step=5',\n            });\n        }\n\n        // eslint-disable-next-line\n    }, [info, education, error, submit]);\n\n    return (\n        <div className=\"step-4\">\n            {Prompt}\n            <div className=\"row\">\n                <div className=\"col-lg-12\">\n                    <form className=\"form\" onSubmit={onSubmit}>\n                        <div className=\"form-row\">\n                            <div className=\"col-lg-4 col-md-6\">\n                                <div className=\"content\">\n                                    <div className=\"form-group\">\n                                        <h5 className=\"title\">\n                                            Are you looking to work?\n                                        </h5>\n                                        {availabilityList().map((e, i) => (\n                                            <div className=\"form-check\">\n                                                <input\n                                                    type=\"radio\"\n                                                    name=\"availability\"\n                                                    id={`availability${i}`}\n                                                    className=\"form-check-input input\"\n                                                    value={e}\n                                                    onChange={onChange}\n                                                    checked={availability === e}\n                                                />\n                                                <label\n                                                    htmlFor={`availability${i}`}\n                                                    className=\"form-check-label\"\n                                                >\n                                                    {e}\n                                                </label>\n                                            </div>\n                                        ))}\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <label className=\"form-label\">\n                                            Expected Salary\n                                        </label>\n                                        <div className=\"form-inline\">\n                                            <input\n                                                type=\"number\"\n                                                name=\"expectedSalary\"\n                                                className=\"form-control input\"\n                                                placeholder=\"per Hour\"\n                                                value={expectedSalary}\n                                                onChange={onChange}\n                                            />\n                                            <select\n                                                name=\"currency\"\n                                                className=\"form-control input\"\n                                                onChange={onChange}\n                                                value={currency}\n                                            >\n                                                <option value=\"USD\">USD</option>\n                                            </select>\n                                        </div>\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <div className=\"form-inline\">\n                                            <label className=\"form-label upload-audio-label\">\n                                                About Yourself\n                                            </label>\n                                            <div className=\"form-group upload-file\">\n                                                <label\n                                                    htmlFor=\"sampleAudioInput\"\n                                                    className={`form-label${\n                                                        uploadAudio\n                                                            ? ' disabled'\n                                                            : ''\n                                                    }`}\n                                                    onClick={uploadAudioClick}\n                                                >\n                                                    Upload Audio\n                                                </label>\n                                                <input\n                                                    type=\"file\"\n                                                    accept=\"audio/*\"\n                                                    name=\"sampleAudio\"\n                                                    id=\"sampleAudioInput\"\n                                                    className=\"form-control-file\"\n                                                    onChange={uploadButton}\n                                                />\n                                            </div>\n                                        </div>\n                                        <p>\n                                            Record an mp4 audio (not more than\n                                            30 sec) about yourself in English\n                                            <br />\n                                            Example:\n                                            <br />\n                                            “I am a licensed mechanical engineer\n                                            and I have NC II Technical Drafting\n                                            Certificates. I have been working as\n                                            a senior mechanical draftsman for 8\n                                            years and I have handled multiple\n                                            complex projects such as hotels,\n                                            resorts, and malls. I am skilled at\n                                            using Revit, AutoCAD and Quantity\n                                            Surveying, I have experience working\n                                            for Australian and US companies for\n                                            over 6 years”\n                                            <br />\n                                            <br />\n                                            <span>\n                                                * do not include name, email and\n                                                contact number\n                                            </span>\n                                        </p>\n                                        <p\n                                            id=\"sampleAudio\"\n                                            className=\"upload\"\n                                            style={{\n                                                visibility: uploadAudio\n                                                    ? 'visible'\n                                                    : null,\n                                            }}\n                                        >\n                                            <label\n                                                id=\"sampleAudioFile\"\n                                                className=\"selected-file\"\n                                            >\n                                                {uploadAudio\n                                                    ? uploadAudio.name\n                                                    : null}\n                                            </label>\n                                            <label\n                                                htmlFor=\"replacesampleAudioInput\"\n                                                className=\"replace-button\"\n                                            >\n                                                Replace\n                                            </label>\n                                            <input\n                                                type=\"file\"\n                                                accept=\"audio/*\"\n                                                name=\"sampleAudio\"\n                                                id=\"replacesampleAudioInput\"\n                                                className=\"form-control-file\"\n                                                onChange={replaceUploadButton}\n                                            />\n                                        </p>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"col-lg-4 col-md-6 center-col\">\n                                <div className=\"content\">\n                                    <div className=\"form-group\">\n                                        <h5 className=\"title\">\n                                            Personal Information\n                                        </h5>\n                                        <p className=\"subtitle\">Education</p>\n                                        <div>\n                                            <div className=\"form-group\">\n                                                <label className=\"form-label\">\n                                                    Choices\n                                                </label>\n                                                <select\n                                                    name=\"choices\"\n                                                    className=\"form-control input\"\n                                                    onChange={eduItem}\n                                                >\n                                                    <option value=\"High School\">\n                                                        High School\n                                                    </option>\n                                                    <option value=\"College\">\n                                                        College\n                                                    </option>\n                                                    <option value=\"Master's\">\n                                                        Master's\n                                                    </option>\n                                                    <option value=\"Doctor\">\n                                                        Doctor\n                                                    </option>\n                                                </select>\n                                            </div>\n                                            <div className=\"form-group\">\n                                                <label className=\"form-label\">\n                                                    Degree\n                                                </label>\n                                                <input\n                                                    type=\"text\"\n                                                    name=\"degree\"\n                                                    className=\"form-control input\"\n                                                    onChange={eduItem}\n                                                    disabled={disableInput}\n                                                />\n                                            </div>\n                                            <div className=\"form-group\">\n                                                <label className=\"form-label\">\n                                                    Course\n                                                </label>\n                                                <input\n                                                    type=\"text\"\n                                                    name=\"course\"\n                                                    className=\"form-control input\"\n                                                    onChange={eduItem}\n                                                    disabled={disableInput}\n                                                />\n                                            </div>\n                                            <div className=\"form-group\">\n                                                <label className=\"form-label\">\n                                                    School\n                                                </label>\n                                                <input\n                                                    type=\"text\"\n                                                    name=\"school\"\n                                                    className=\"form-control input\"\n                                                    onChange={eduItem}\n                                                />\n                                            </div>\n                                            <div className=\"form-group\">\n                                                <div className=\"form-row\">\n                                                    <div className=\"col-lg-6\">\n                                                        <div className=\"form-group\">\n                                                            <label\n                                                                className=\"form-label\"\n                                                                style={\n                                                                    windowSize.width >=\n                                                                        1024 &&\n                                                                    windowSize.width <\n                                                                        1140\n                                                                        ? {\n                                                                              marginBottom:\n                                                                                  '34px',\n                                                                          }\n                                                                        : null\n                                                                }\n                                                            >\n                                                                Mo/Year Started\n                                                            </label>\n                                                            <input\n                                                                type=\"text\"\n                                                                name=\"monthYearStarted\"\n                                                                className=\"form-control input\"\n                                                                onChange={\n                                                                    eduItem\n                                                                }\n                                                            />\n                                                        </div>\n                                                    </div>\n                                                    <div className=\"col-lg-6\">\n                                                        <div className=\"form-group\">\n                                                            <label className=\"form-label\">\n                                                                Mo/Year\n                                                                Graduated\n                                                            </label>\n                                                            <input\n                                                                type=\"text\"\n                                                                name=\"monthYearGraduated\"\n                                                                className=\"form-control input\"\n                                                                onChange={\n                                                                    eduItem\n                                                                }\n                                                            />\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div className=\"form-group\">\n                                            {currentEdu === null ? (\n                                                <button\n                                                    className=\"btn btn-primary btn-block button\"\n                                                    onClick={addEducation}\n                                                >\n                                                    Add\n                                                </button>\n                                            ) : (\n                                                <>\n                                                    <button\n                                                        className=\"btn btn-primary btn-block button\"\n                                                        onClick={updateEdu}\n                                                    >\n                                                        Update\n                                                    </button>\n                                                    <button\n                                                        className=\"btn btn-primary btn-block button clear\"\n                                                        onClick={\n                                                            clearCurrentEduBtn\n                                                        }\n                                                    >\n                                                        Clear\n                                                    </button>\n                                                </>\n                                            )}\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div\n                                className={`col-lg-4 col-md-6${\n                                    windowSize.width < 1024\n                                        ? ' offset-md-3'\n                                        : ''\n                                }`}\n                            >\n                                <div className=\"content\">\n                                    <div className=\"form-group\">\n                                        <p\n                                            className=\"subtitle\"\n                                            style={{ marginTop: '44px' }}\n                                        >\n                                            Summary\n                                        </p>\n                                        <div className=\"summary\">\n                                            {education.length === 0 ? (\n                                                <>\n                                                    <p className=\"text\">\n                                                        This section is for the\n                                                        viewing onwhat you added\n                                                        on your educational\n                                                        background from the left\n                                                        portion.\n                                                    </p>\n                                                    <p className=\"text\">\n                                                        You can fill up and add\n                                                        as much as you want but\n                                                        always remember that you\n                                                        mush add an info that\n                                                        will or somehow\n                                                        contribute to a job\n                                                        you're applying for.\n                                                    </p>\n                                                </>\n                                            ) : (\n                                                education.map((edu, index) => (\n                                                    <EducationItem\n                                                        education={edu}\n                                                        key={index}\n                                                        index={index}\n                                                        editEdu={editEdu}\n                                                        deleteEdu={deleteEdu}\n                                                    />\n                                                ))\n                                            )}\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"form-row mt-5\">\n                            <div className=\"col-lg-4 offset-lg-8\">\n                                <div className=\"form-group mx-auto\">\n                                    <input\n                                        type=\"submit\"\n                                        value=\"Proceed\"\n                                        className=\"btn btn-primary button submit\"\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nStep4.propTypes = {\n    setAlert: PropTypes.func.isRequired,\n    addResume: PropTypes.func.isRequired,\n    clearError: PropTypes.func.isRequired,\n    resumeState: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n    resumeState: state.resumeState,\n});\n\nexport default connect(mapStateToProps, { setAlert, clearError, addResume })(\n    Step4\n);\n","export const yearList = () => {\n    const currentYear = new Date().getFullYear();\n    let years = [];\n    for (let year = currentYear; year >= 1980; year--) {\n        years = [...years, year];\n    }\n    return years;\n};\n","import React from 'react';\n\nconst WorkHistoryItem = ({ index, workHistory, editWork, deleteWork }) => {\n    const { title, company, monthStarted, yearStarted, monthEnded, yearEnded, description, about } = workHistory;\n\n    const onEdit = (e) => {\n        e.preventDefault();\n        editWork(index);\n    };\n\n    const onDelete = (e) => {\n        e.preventDefault();\n        deleteWork(index);\n    };\n\n    return (\n        <div className=\"work-history-item\">\n            <div className=\"row\">\n                <div className=\"col-lg-4\">\n                    { title ? <h6 className=\"item position\">{ title }</h6> : null }\n                    { company ? <p className=\"item\">{ company }</p> : null }\n                    { monthStarted && yearStarted && monthEnded && yearEnded ? <p>\n                        <span className=\"item\">{ monthStarted } { yearStarted }</span> - <span className=\"item\">{ monthEnded } { yearEnded }</span>\n                    </p> : null }\n                </div>\n                <div className=\"col-lg-8\">\n                    <div className=\"row\">\n                        <div className=\"col-lg-8 col-md-6\">\n                            <h6 className=\"description\">Job Description</h6>\n                            <p className=\"item\" style={ { whiteSpace: 'pre-wrap' } }>{ description }</p>\n                        </div>\n                        <div className=\"col-lg-4 col-md-6 d-flex justify-content-end action\">\n                            <div>\n                                <button onClick={ onEdit }>Edit</button>\n                            </div>\n                            <span>|</span>\n                            <div>\n                                <button onClick={ onDelete }>Delete</button>\n                            </div>\n                        </div>\n                        <div className=\"col-lg-12 mt-4\">\n                            <h6 className=\"about\">About</h6>\n                            <p className=\"item\">{ about }</p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n \nexport default WorkHistoryItem;","import React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\n// Utils\nimport useUnsavedChangesWarning from './../../utils/useUnsavedChangesWarning';\nimport useWindowSize from './../../utils/useWindowSize';\n\n// Action\nimport { setAlert } from './../../state/actions/alertAction';\nimport { addResume, clearError } from './../../state/actions/resumeAction';\n\n// List\nimport { monthList } from './../../list/Month';\nimport { yearList } from './../../list/Year';\n\n// Components\nimport WorkHistoryItem from './WorkHistoryItem';\n\nconst Step5 = ({ setAlert, addResume, clearError, resumeState: { error } }) => {\n    const [\n        Prompt,\n        setDirty,\n        setPristine,\n        setMessage,\n    ] = useUnsavedChangesWarning();\n\n    const history = useHistory();\n\n    const windowSize = useWindowSize();\n\n    const defaultYear = new Date().getFullYear();\n\n    const initialWorkHistory = {\n        title: '',\n        company: '',\n        monthStarted: 'January',\n        yearStarted: defaultYear,\n        monthEnded: 'January',\n        yearEnded: defaultYear,\n        description: '',\n        about: '',\n    };\n\n    const [workHistory, setWorkHistory] = useState([]);\n    const [workHistoryItem, setWorkHistoryItem] = useState(initialWorkHistory);\n    const [current, setCurrent] = useState(null);\n    const [submit, setSubmit] = useState(false);\n\n    const {\n        title,\n        company,\n        monthStarted,\n        yearStarted,\n        monthEnded,\n        yearEnded,\n        description,\n        about,\n    } = workHistoryItem;\n\n    const clearWorkHistoryItem = () => {\n        setWorkHistoryItem(initialWorkHistory);\n        setCurrent(null);\n    };\n\n    const onAdd = (e) => {\n        e.preventDefault();\n        if (\n            title === '' ||\n            company === '' ||\n            monthStarted === '' ||\n            yearStarted === '' ||\n            monthEnded === '' ||\n            yearEnded === '' ||\n            description === '' ||\n            about === ''\n        ) {\n            return setAlert(\n                'error',\n                'Please fill-in the required boxes to Proceed.'\n            );\n        }\n        setWorkHistory((workHistory) => [...workHistory, workHistoryItem]);\n        clearWorkHistoryItem();\n        setDirty();\n        setMessage('Are you sure you want to leave this page?');\n    };\n\n    const onEdit = (e) => {\n        setCurrent(e);\n        setWorkHistoryItem(workHistory[e]);\n    };\n\n    const onUpdate = (e) => {\n        e.preventDefault();\n        setWorkHistoryItem([\n            ...workHistory.splice(current, 1, workHistoryItem),\n        ]);\n        clearWorkHistoryItem();\n        setDirty();\n        setMessage('Are you sure you want to leave this page?');\n    };\n\n    const onDelete = (e) => {\n        if (current === e) {\n            clearWorkHistoryItem();\n        }\n        setWorkHistory((workHistory) => [\n            ...workHistory.filter((x) => workHistory.indexOf(x) !== e),\n        ]);\n    };\n\n    const onClear = (e) => {\n        e.preventDefault();\n        clearWorkHistoryItem();\n    };\n\n    const onChange = (e) => {\n        const { name, value } = e.target;\n        setWorkHistoryItem({ ...workHistoryItem, [name]: value });\n    };\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n\n        if (workHistory.length === 0) {\n            return setAlert(\n                '',\n                'Please fill-in the required boxes to Proceed.'\n            );\n        } else {\n            addResume({\n                workHistory,\n            });\n            setWorkHistory([]);\n            setSubmit(true);\n            setPristine();\n        }\n    };\n\n    useEffect(() => {\n        if (workHistory.length === 0) {\n            setDirty();\n            setMessage('Are you sure you want to leave this page?');\n        }\n\n        if (error) {\n            setAlert('', error.msg);\n            clearError();\n        }\n\n        if (submit) {\n            setSubmit(false);\n            history.push({\n                pathname: '/create-resume',\n                search: 'step=6',\n            });\n        }\n\n        // eslint-disable-next-line\n    }, [workHistory, submit, error]);\n\n    return (\n        <div className=\"step-5\">\n            {Prompt}\n            <div className=\"row\">\n                <div className=\"col-lg-12\">\n                    <form className=\"form\" onSubmit={onSubmit}>\n                        <div className=\"form-row\">\n                            <div className=\"col-lg-4 col-md-6\">\n                                <div className=\"content\">\n                                    <h5 className=\"title\">Work History</h5>\n                                    <div className=\"form-group\">\n                                        <label className=\"form-label\">\n                                            Job Title / Position\n                                        </label>\n                                        <input\n                                            type=\"text\"\n                                            name=\"title\"\n                                            value={title}\n                                            className=\"form-control input\"\n                                            onChange={onChange}\n                                        />\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <label className=\"form-label\">\n                                            Company\n                                        </label>\n                                        <input\n                                            type=\"text\"\n                                            name=\"company\"\n                                            value={company}\n                                            onChange={onChange}\n                                            className=\"form-control input\"\n                                        />\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <label className=\"form-label\">\n                                            Month / Year Started\n                                        </label>\n                                        <div className=\"form-row\">\n                                            <div className=\"col\">\n                                                <select\n                                                    name=\"monthStarted\"\n                                                    className=\"form-control input\"\n                                                    onChange={onChange}\n                                                    value={monthStarted}\n                                                >\n                                                    {monthList().map((e, i) => (\n                                                        <option\n                                                            key={i}\n                                                            value={e}\n                                                        >\n                                                            {e}\n                                                        </option>\n                                                    ))}\n                                                </select>\n                                            </div>\n                                            <div className=\"col\">\n                                                <select\n                                                    name=\"yearStarted\"\n                                                    className=\"form-control input\"\n                                                    onChange={onChange}\n                                                    value={yearStarted}\n                                                >\n                                                    {yearList().map((e, i) => (\n                                                        <option\n                                                            key={i}\n                                                            value={e}\n                                                        >\n                                                            {e}\n                                                        </option>\n                                                    ))}\n                                                </select>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <label className=\"form-label\">\n                                            Month / Year Ended\n                                        </label>\n                                        <div className=\"form-row\">\n                                            <div className=\"col\">\n                                                <select\n                                                    name=\"monthEnded\"\n                                                    className=\"form-control input\"\n                                                    onChange={onChange}\n                                                    value={monthEnded}\n                                                >\n                                                    {monthList().map((e, i) => (\n                                                        <option\n                                                            key={i}\n                                                            value={e}\n                                                        >\n                                                            {e}\n                                                        </option>\n                                                    ))}\n                                                </select>\n                                            </div>\n                                            <div className=\"col\">\n                                                <select\n                                                    name=\"yearEnded\"\n                                                    className=\"form-control input\"\n                                                    onChange={onChange}\n                                                    value={yearEnded}\n                                                >\n                                                    {yearList().map((e, i) => (\n                                                        <option\n                                                            key={i}\n                                                            value={e}\n                                                        >\n                                                            {e}\n                                                        </option>\n                                                    ))}\n                                                </select>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"col-lg-4 col-md-6 center-col\">\n                                <div className=\"content center\">\n                                    <div className=\"form-group\">\n                                        <label className=\"form-label\">\n                                            Job Description\n                                        </label>\n                                        <textarea\n                                            name=\"description\"\n                                            value={description}\n                                            onChange={onChange}\n                                            className=\"form-control input\"\n                                            cols=\"30\"\n                                            rows=\"12\"\n                                        ></textarea>\n                                    </div>\n                                </div>\n                            </div>\n                            <div\n                                className={`col-lg-4 col-md-6${\n                                    windowSize.width < 1024\n                                        ? ' offset-md-3'\n                                        : ''\n                                }`}\n                            >\n                                <div className=\"content right\">\n                                    <div className=\"form-group\">\n                                        <label className=\"form-label\">\n                                            About the company\n                                        </label>\n                                        <textarea\n                                            name=\"about\"\n                                            value={about}\n                                            onChange={onChange}\n                                            className=\"form-control input\"\n                                            cols=\"30\"\n                                            rows=\"12\"\n                                        ></textarea>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"form-row mb-5\">\n                            <div className=\"col-lg-4 offset-lg-8\">\n                                <div className=\"form-inline\">\n                                    {current === null ? (\n                                        <>\n                                            <button\n                                                className=\"btn btn-primary button add\"\n                                                onClick={onAdd}\n                                            >\n                                                Add\n                                            </button>\n                                            <input\n                                                type=\"submit\"\n                                                value=\"Almost done\"\n                                                className=\"btn btn-primary button submit\"\n                                            />\n                                        </>\n                                    ) : (\n                                        <>\n                                            <button\n                                                className=\"btn btn-primary button update\"\n                                                onClick={onUpdate}\n                                            >\n                                                Update\n                                            </button>\n                                            <button\n                                                className=\"btn btn-primary button clear\"\n                                                onClick={onClear}\n                                            >\n                                                Clear\n                                            </button>\n                                        </>\n                                    )}\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"form-row\">\n                            <div className=\"col-lg-12\">\n                                <div className=\"form-row\">\n                                    <div className=\"col-lg-4\">\n                                        <p className=\"subtitle\">Summary</p>\n                                    </div>\n                                    <div className=\"col-lg-8 border-top\">\n                                        {workHistory.length === 0 ? (\n                                            <p className=\"text\">\n                                                This section will display on\n                                                what you added to your work\n                                                history from the top section.\n                                            </p>\n                                        ) : null}\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"col-lg-12\">\n                                {workHistory.length !== 0\n                                    ? workHistory.map((work, index) => (\n                                          <WorkHistoryItem\n                                              key={index}\n                                              workHistory={work}\n                                              index={index}\n                                              editWork={onEdit}\n                                              deleteWork={onDelete}\n                                          />\n                                      ))\n                                    : null}\n                            </div>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nStep5.propTypes = {\n    setAlert: PropTypes.func.isRequired,\n    addResume: PropTypes.func.isRequired,\n    clearError: PropTypes.func.isRequired,\n    resumeState: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n    resumeState: state.resumeState,\n});\n\nexport default connect(mapStateToProps, { setAlert, clearError, addResume })(\n    Step5\n);\n","export const monthList = () => {\n    return [\n        'January',\n        'February',\n        'March',\n        'April',\n        'May',\n        'June',\n        'July',\n        'August',\n        'September',\n        'October',\n        'November',\n        'December',\n    ];\n};\n","import React from 'react';\n\nconst SpecialtyItem = ({ index, value, select }) => {\n    const selectItem = () => {\n        select(index);\n    };\n\n    return (\n        <li className=\"nav-item\" onClick={ selectItem }>{ value }</li>\n    );\n}\n \nexport default SpecialtyItem;","import React from 'react';\n\nconst SpecialtySelected = ({ value, index, onSpecialtyClose }) => {\n    const onClose = () => {\n        onSpecialtyClose(index);\n    };\n\n    return (\n        <span className=\"item\">\n            {value}\n            <span className=\"close\" onClick={onClose}>\n                x\n            </span>\n        </span>\n    );\n};\n\nexport default SpecialtySelected;\n","import React from 'react';\n\nconst SoftwareItem = ({ index, value, select }) => {\n    const selectItem = () => {\n        select(index);\n    };\n\n    return (\n        <li className=\"nav-item\" onClick={ selectItem }>{ value }</li>\n    );\n}\n \nexport default SoftwareItem;","import React from 'react';\n\nconst SoftwareSelected = ({ value, index, onSoftwareClose }) => {\n    const onClose = () => {\n        onSoftwareClose(index);\n    };\n\n    return (\n        <span className=\"item\">\n            {value}\n            <span className=\"close\" onClick={onClose}>\n                x\n            </span>\n        </span>\n    );\n};\n\nexport default SoftwareSelected;\n","import React, { useState, useEffect, useCallback } from 'react';\nimport { Modal } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Cropper from 'react-easy-crop';\n\n// Actions\nimport { setAlert } from './../../state/actions/alertAction';\n\nconst UploadWorkImageModal = ({\n    isShow,\n    isHide,\n    titleModal,\n    note,\n    caption,\n    uploadData,\n    data,\n    updateData,\n    index,\n    setAlert,\n}) => {\n    // State\n    const [show, setShow] = useState(false);\n    const [fileBg, setFileBg] = useState(null);\n    const [upload, setUpload] = useState({\n        file: '',\n        skin: '1',\n        title: '',\n        description: '',\n    });\n    const [crop, setCrop] = useState({ x: 0, y: 0 });\n    const [zoom, setZoom] = useState(1);\n\n    const { file, skin, title, description } = upload;\n\n    // Close Modal\n    const handleClose = useCallback(() => {\n        isHide();\n        setShow(false);\n    }, [isHide]);\n\n    // Show Modal\n    const handleShow = () => setShow(true);\n\n    useEffect(() => {\n        if (isShow) {\n            handleShow();\n        }\n\n        if (data !== '') {\n            setUpload(data);\n            setFileBg(URL.createObjectURL(data.file));\n        }\n    }, [isShow, data]);\n\n    const onUploadWorkImage = (e) => {\n        setUpload({ ...upload, file: e.target.files[0] });\n        setFileBg(URL.createObjectURL(e.target.files[0]));\n    };\n\n    const onChange = (e) => {\n        const { name, value } = e.target;\n        setUpload({ ...upload, [name]: value });\n    };\n\n    const onUpload = (e) => {\n        e.preventDefault();\n\n        if (file === '' || skin === '' || title === '' || description === '') {\n            return setAlert(\n                '',\n                'Please fill-in the required boxes to Proceed.'\n            );\n        }\n\n        if (data) {\n            updateData(index, upload);\n        } else {\n            uploadData(upload);\n        }\n        handleClose();\n    };\n\n    const uploadImageFile = (e) => {\n        if (fileBg) {\n            e.preventDefault();\n        }\n    };\n\n    return (\n        <Modal\n            id=\"uploadWorkImageModal\"\n            show={show}\n            onHide={handleClose}\n            backdrop=\"static\"\n            keyboard={false}\n            size=\"lg\"\n            aria-labelledby=\"contained-modal-title-vcenter\"\n            centered\n        >\n            <Modal.Header closeButton>\n                <Modal.Title>{titleModal}</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <div className=\"container-fluid\">\n                    <div className=\"row\">\n                        <div className=\"col-lg-7\">\n                            <label\n                                htmlFor=\"uploadWorkInput\"\n                                className=\"upload-work-label\"\n                                onClick={uploadImageFile}\n                            >\n                                {!fileBg ? (\n                                    <p\n                                        style={\n                                            fileBg\n                                                ? { visibility: 'hidden' }\n                                                : null\n                                        }\n                                    >\n                                        {caption}{' '}\n                                        <span>\n                                            or click add\n                                            <i className=\"fas fa-plus\"></i>\n                                        </span>\n                                    </p>\n                                ) : (\n                                    <Cropper\n                                        image={fileBg}\n                                        crop={crop}\n                                        zoom={zoom}\n                                        aspect={4 / 3}\n                                        onCropChange={setCrop}\n                                        onZoomChange={setZoom}\n                                    />\n                                )}\n                            </label>\n                            <input\n                                type=\"file\"\n                                id=\"uploadWorkInput\"\n                                className=\"form-control-file input\"\n                                accept=\"image/*\"\n                                onChange={onUploadWorkImage}\n                            />\n                        </div>\n                        <div className=\"col-lg-5\">\n                            <div className=\"form-group\">\n                                <p className=\"text\">\n                                    Choose your layer skin thumbnail\n                                </p>\n                                <div className=\"form-inline\">\n                                    <div className=\"form-check\">\n                                        <input\n                                            type=\"radio\"\n                                            onChange={onChange}\n                                            className=\"form-check-input upload-work-layer\"\n                                            name=\"skin\"\n                                            id=\"uploadWorkLayer1\"\n                                            value=\"1\"\n                                            checked={\n                                                skin === '1' ? true : false\n                                            }\n                                        />\n                                        <div className=\"upload-work-layer-outer\">\n                                            <label\n                                                htmlFor=\"uploadWorkLayer1\"\n                                                id=\"uploadWorkLayerLabel1\"\n                                                className=\"upload-work-layer-label\"\n                                            ></label>\n                                        </div>\n                                    </div>\n                                    <div className=\"form-check\">\n                                        <input\n                                            type=\"radio\"\n                                            onChange={onChange}\n                                            className=\"form-check-input upload-work-layer\"\n                                            name=\"skin\"\n                                            id=\"uploadWorkLayer2\"\n                                            value=\"2\"\n                                            checked={\n                                                skin === '2' ? true : false\n                                            }\n                                        />\n                                        <div className=\"upload-work-layer-outer\">\n                                            <label\n                                                htmlFor=\"uploadWorkLayer2\"\n                                                id=\"uploadWorkLayerLabel2\"\n                                                className=\"upload-work-layer-label\"\n                                            ></label>\n                                        </div>\n                                    </div>\n                                    <div className=\"form-check\">\n                                        <input\n                                            type=\"radio\"\n                                            onChange={onChange}\n                                            className=\"form-check-input upload-work-layer\"\n                                            name=\"skin\"\n                                            id=\"uploadWorkLayer3\"\n                                            value=\"3\"\n                                            checked={\n                                                skin === '3' ? true : false\n                                            }\n                                        />\n                                        <div className=\"upload-work-layer-outer\">\n                                            <label\n                                                htmlFor=\"uploadWorkLayer3\"\n                                                id=\"uploadWorkLayerLabel3\"\n                                                className=\"upload-work-layer-label\"\n                                            ></label>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"form-group\">\n                                <label className=\"form-label\">\n                                    Project Title\n                                </label>\n                                <input\n                                    type=\"text\"\n                                    name=\"title\"\n                                    id=\"\"\n                                    className=\"form-control input\"\n                                    value={title}\n                                    onChange={onChange}\n                                />\n                            </div>\n                            <div className=\"form-group\">\n                                <label className=\"form-label\">\n                                    Project Description\n                                </label>\n                                <textarea\n                                    name=\"description\"\n                                    className=\"form-control input description\"\n                                    value={description}\n                                    onChange={onChange}\n                                ></textarea>\n                            </div>\n                            <ul>\n                                {note.map((e, i) => (\n                                    <li key={i}>{e}</li>\n                                ))}\n                            </ul>\n                            <div className=\"form-inline justify-content-between\">\n                                {fileBg ? (\n                                    <>\n                                        <label\n                                            htmlFor=\"replaceImageInput\"\n                                            className=\"btn btn-primary button replace\"\n                                        >\n                                            Replace\n                                        </label>\n                                        <input\n                                            type=\"file\"\n                                            name=\"replaceImage\"\n                                            id=\"replaceImageInput\"\n                                            className=\"form-control-file input replace-file\"\n                                            accept=\"image/*\"\n                                            onChange={onUploadWorkImage}\n                                        />\n                                    </>\n                                ) : null}\n                                <button\n                                    className=\"btn btn-primary button\"\n                                    style={\n                                        !fileBg ? { marginLeft: 'auto' } : null\n                                    }\n                                    onClick={onUpload}\n                                >\n                                    Upload\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </Modal.Body>\n        </Modal>\n    );\n};\n\nUploadWorkImageModal.propTypes = {\n    setAlert: PropTypes.func.isRequired,\n};\n\nexport default connect(null, { setAlert })(UploadWorkImageModal);\n","import React, { useState, useEffect, useCallback } from 'react';\nimport { Modal } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\n// Actions\nimport { setAlert } from './../../state/actions/alertAction';\n\nconst UploadWorkDocumentModal = ({\n    isShow,\n    isHide,\n    titleModal,\n    note,\n    caption,\n    uploadData,\n    data,\n    updateData,\n    index,\n    setAlert,\n}) => {\n    // State\n    const [show, setShow] = useState(false);\n    const [fileBg, setFileBg] = useState(null);\n    const [upload, setUpload] = useState({\n        file: '',\n        skin: '1',\n        title: '',\n        description: '',\n    });\n\n    const { file, title, description, skin } = upload;\n\n    // Close Modal\n    const handleClose = useCallback(() => {\n        isHide();\n        setShow(false);\n    }, [isHide]);\n\n    // Show Modal\n    const handleShow = () => setShow(true);\n\n    useEffect(() => {\n        if (isShow) {\n            handleShow();\n        }\n\n        if (data !== '') {\n            setUpload(data);\n            setFileBg(URL.createObjectURL(data.file));\n        }\n    }, [isShow, data]);\n\n    const onUploadWorkDocument = (e) => {\n        setUpload({ ...upload, file: e.target.files[0] });\n        setFileBg(URL.createObjectURL(e.target.files[0]));\n    };\n\n    const onChange = (e) => {\n        const { name, value } = e.target;\n        setUpload({ ...upload, [name]: value });\n    };\n\n    const onUpload = (e) => {\n        e.preventDefault();\n\n        if (file === '' || skin === '' || title === '' || description === '') {\n            return setAlert(\n                '',\n                'Please fill-in the required boxes to Proceed.'\n            );\n        }\n\n        if (data) {\n            updateData(index, upload);\n        } else {\n            uploadData(upload);\n        }\n        handleClose();\n    };\n\n    return (\n        <Modal\n            id=\"uploadWorkDocumentModal\"\n            show={show}\n            onHide={handleClose}\n            backdrop=\"static\"\n            keyboard={false}\n            size=\"lg\"\n            aria-labelledby=\"contained-modal-title-vcenter\"\n            centered\n        >\n            <Modal.Header closeButton>\n                <Modal.Title>{titleModal}</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <div className=\"container-fluid\">\n                    <div className=\"row\">\n                        <div className=\"col-lg-7\">\n                            <label\n                                htmlFor=\"uploadWorkInput\"\n                                className=\"upload-work-label\"\n                            >\n                                <p\n                                    style={\n                                        fileBg ? { visibility: 'hidden' } : null\n                                    }\n                                >\n                                    {caption}{' '}\n                                    <span>\n                                        or click add\n                                        <i className=\"fas fa-plus\"></i>\n                                    </span>\n                                </p>\n                                {fileBg ? (\n                                    <iframe\n                                        src={fileBg}\n                                        title=\"Preview PDF\"\n                                    ></iframe>\n                                ) : null}\n                            </label>\n                            <input\n                                type=\"file\"\n                                id=\"uploadWorkInput\"\n                                className=\"form-control-file input\"\n                                accept=\"application/pdf\"\n                                onChange={onUploadWorkDocument}\n                            />\n                        </div>\n                        <div className=\"col-lg-5\">\n                            <div className=\"form-group\">\n                                <p className=\"text\">\n                                    Choose your layer skin thumbnail\n                                </p>\n                                <div className=\"form-inline\">\n                                    <div className=\"form-check\">\n                                        <input\n                                            type=\"radio\"\n                                            onChange={onChange}\n                                            className=\"form-check-input upload-work-layer\"\n                                            name=\"skin\"\n                                            id=\"uploadWorkLayer1\"\n                                            value=\"1\"\n                                            checked={\n                                                skin === '1' ? true : false\n                                            }\n                                        />\n                                        <div className=\"upload-work-layer-outer\">\n                                            <label\n                                                htmlFor=\"uploadWorkLayer1\"\n                                                id=\"uploadWorkLayerLabel1\"\n                                                className=\"upload-work-layer-label\"\n                                            ></label>\n                                        </div>\n                                    </div>\n                                    <div className=\"form-check\">\n                                        <input\n                                            type=\"radio\"\n                                            onChange={onChange}\n                                            className=\"form-check-input upload-work-layer\"\n                                            name=\"skin\"\n                                            id=\"uploadWorkLayer2\"\n                                            value=\"2\"\n                                            checked={\n                                                skin === '2' ? true : false\n                                            }\n                                        />\n                                        <div className=\"upload-work-layer-outer\">\n                                            <label\n                                                htmlFor=\"uploadWorkLayer2\"\n                                                id=\"uploadWorkLayerLabel2\"\n                                                className=\"upload-work-layer-label\"\n                                            ></label>\n                                        </div>\n                                    </div>\n                                    <div className=\"form-check\">\n                                        <input\n                                            type=\"radio\"\n                                            onChange={onChange}\n                                            className=\"form-check-input upload-work-layer\"\n                                            name=\"skin\"\n                                            id=\"uploadWorkLayer3\"\n                                            value=\"3\"\n                                            checked={\n                                                skin === '3' ? true : false\n                                            }\n                                        />\n                                        <div className=\"upload-work-layer-outer\">\n                                            <label\n                                                htmlFor=\"uploadWorkLayer3\"\n                                                id=\"uploadWorkLayerLabel3\"\n                                                className=\"upload-work-layer-label\"\n                                            ></label>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"form-group\">\n                                <label className=\"form-label\">\n                                    Project Title\n                                </label>\n                                <input\n                                    type=\"text\"\n                                    name=\"title\"\n                                    id=\"\"\n                                    className=\"form-control input\"\n                                    value={title}\n                                    onChange={onChange}\n                                />\n                            </div>\n                            <div className=\"form-group\">\n                                <label className=\"form-label\">\n                                    Project Description\n                                </label>\n                                <textarea\n                                    name=\"description\"\n                                    className=\"form-control input description\"\n                                    value={description}\n                                    onChange={onChange}\n                                ></textarea>\n                            </div>\n                            <ul>\n                                {note.map((e, i) => (\n                                    <li key={i}>{e}</li>\n                                ))}\n                            </ul>\n                            <div className=\"form-inline justify-content-between\">\n                                {fileBg ? (\n                                    <>\n                                        <label\n                                            htmlFor=\"replaceDocumentInput\"\n                                            className=\"btn btn-primary button replace\"\n                                        >\n                                            Replace\n                                        </label>\n                                        <input\n                                            type=\"file\"\n                                            name=\"replaceDocument\"\n                                            id=\"replaceDocumentInput\"\n                                            className=\"form-control-file input replace-file\"\n                                            accept=\"application/pdf\"\n                                            onChange={onUploadWorkDocument}\n                                        />\n                                    </>\n                                ) : null}\n                                <button\n                                    className=\"btn btn-primary button\"\n                                    style={\n                                        !fileBg ? { marginLeft: 'auto' } : null\n                                    }\n                                    onClick={onUpload}\n                                >\n                                    Upload\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </Modal.Body>\n        </Modal>\n    );\n};\n\nUploadWorkDocumentModal.propTypes = {\n    setAlert: PropTypes.func.isRequired,\n};\n\nexport default connect(null, { setAlert })(UploadWorkDocumentModal);\n","import React, { useState } from 'react';\nimport { useEffect } from 'react';\n\nconst UploadWorkItem = ({ index, data, isEdit, isDelete }) => {\n    const [bgImage, setBgImage] = useState('');\n    const { title, skin, file } = data;\n    const onEdit = (e) => {\n        e.preventDefault();\n        isEdit(index);\n    };\n\n    const onDelete = (e) => {\n        e.preventDefault();\n        isDelete(index);\n    };\n\n    useEffect(() => {\n        const generateBgImage = () => {\n            setBgImage(URL.createObjectURL(file));\n        };\n        generateBgImage();\n    }, [file]);\n\n    const styles = {\n        backgroundImage: `url(${bgImage})`\n    };\n\n    return (\n        <div className={ `upload-work-item` } style={ styles }>\n            <div className={ `skin skin-${skin} ` }>\n                <h6 className=\"title\">{ title }</h6>\n                <div className=\"action\">\n                    <button className=\"btn btn-primary button\" onClick={ onEdit }>Edit</button>\n                    <span>|</span>\n                    <button className=\"btn btn-primary button\" onClick={ onDelete }>Delete</button>\n                </div>\n            </div>\n        </div>\n    );\n}\n \nexport default UploadWorkItem;","import React, { useState, useEffect, useRef } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\n// Utils\nimport useUnsavedChangesWarning from './../../utils/useUnsavedChangesWarning';\n\n// Components\nimport SpecialtyItem from './SpecialtyItem';\nimport SpecialtySelected from './SpecialtySelected';\nimport SoftwareItem from './SoftwareItem';\nimport SoftwareSelected from './SoftwareSelected';\nimport UploadWorkImageModal from './UploadWorkImageModal';\nimport UploadWorkDocumentModal from './UploadWorkDocumentModal';\nimport UploadWorkItem from './UploadWorkItem';\n\n// List\nimport { specialtyList } from './../../list/Specialty';\nimport { softwareList } from './../../list/Software';\n\n// Action\nimport { setAlert } from './../../state/actions/alertAction';\nimport { clearUser } from './../../state/actions/userAction';\nimport { submitResume, clearError } from './../../state/actions/resumeAction';\n\nconst Step6 = ({\n    setAlert,\n    submitResume,\n    clearError,\n    clearUser,\n    check,\n    resumeState: { resume, error },\n}) => {\n    const [\n        Prompt,\n        setDirty,\n        setPristine,\n        setMessage,\n    ] = useUnsavedChangesWarning();\n\n    const otherSpecialtyRef = useRef(null);\n    const otherSoftwareRef = useRef(null);\n\n    const initialUploadModal = {\n        show: false,\n        title: '',\n        note: '',\n        data: '',\n        index: '',\n    };\n\n    const [specialty, setSpecialty] = useState([]);\n    const [software, setSoftware] = useState([]);\n    const [uploadWork, setUploadWork] = useState({\n        images: [],\n        documents: [],\n    });\n    const [uploadWorkImageModal, setUploadWorkImageModal] = useState(\n        initialUploadModal\n    );\n    const [uploadWorkDocumentModal, setUploadWorkDocumentModal] = useState('');\n    const [load, setLoad] = useState(true);\n    const [submit, setSubmit] = useState(false);\n\n    // Select Specialty\n    const onSelectSpecialty = (e) => {\n        if (specialty.includes(specialtyList()[e])) {\n            setSpecialty((specialty) => [\n                ...specialty.filter(\n                    (x) =>\n                        specialty.indexOf(x) !==\n                        specialty.indexOf(specialtyList()[e])\n                ),\n            ]);\n            Array.from(document.querySelectorAll('.specialty .list .nav-item'))\n                .find((el) => el.textContent === specialtyList()[e])\n                .classList.remove('active');\n        } else {\n            setSpecialty((specialty) => [...specialty, specialtyList()[e]]);\n            Array.from(document.querySelectorAll('.specialty .list .nav-item'))\n                .find((el) => el.textContent === specialtyList()[e])\n                .classList.add('active');\n        }\n        setDirty();\n        setMessage('Are you sure you want to leave this page?');\n    };\n\n    // Select Software\n    const onSelectSoftware = (e) => {\n        if (software.includes(softwareList()[e])) {\n            setSoftware((software) => [\n                ...software.filter(\n                    (x) =>\n                        software.indexOf(x) !==\n                        software.indexOf(softwareList()[e])\n                ),\n            ]);\n            Array.from(document.querySelectorAll('.software .list .nav-item'))\n                .find((el) => el.textContent === softwareList()[e])\n                .classList.remove('active');\n        } else {\n            setSoftware((software) => [...software, softwareList()[e]]);\n            Array.from(document.querySelectorAll('.software .list .nav-item'))\n                .find((el) => el.textContent === softwareList()[e])\n                .classList.add('active');\n        }\n        setDirty();\n        setMessage('Are you sure you want to leave this page?');\n    };\n\n    // Specialty List\n    const specialtyListGenerate = () => {\n        let key = 0;\n        let list = [];\n        for (let x = 0; x < 4; x++) {\n            let item = [];\n            for (let y = 0; y < 5; y++) {\n                item.push(\n                    <SpecialtyItem\n                        key={key}\n                        index={key}\n                        value={specialtyList()[key]}\n                        select={onSelectSpecialty}\n                    />\n                );\n                key++;\n            }\n            list.push(\n                <div className=\"col-lg-3 col-md-6 col-sm-6\" key={x}>\n                    <ul className=\"nav flex-column\">{item}</ul>\n                </div>\n            );\n        }\n        return list;\n    };\n\n    // Software List\n    const softwareListGenerate = () => {\n        let key = 0;\n        let list = [];\n        for (let x = 0; x < 4; x++) {\n            let item = [];\n            for (let y = 0; y < 5; y++) {\n                item.push(\n                    <SoftwareItem\n                        key={key}\n                        index={key}\n                        value={softwareList()[key]}\n                        select={onSelectSoftware}\n                    />\n                );\n                key++;\n            }\n            list.push(\n                <div className=\"col-lg-3 col-md-6 col-sm-6\" key={x}>\n                    <ul className=\"nav flex-column\">{item}</ul>\n                </div>\n            );\n        }\n        return list;\n    };\n\n    // Specialty Close\n    const onSpecialtyClose = (e) => {\n        const item = specialty[e];\n        if (specialtyList().includes(item)) {\n            Array.from(document.querySelectorAll('.specialty .list .nav-item'))\n                .find((el) => el.textContent === item)\n                .classList.remove('active');\n        }\n        setSpecialty((specialty) => [\n            ...specialty.filter((x) => specialty.indexOf(x) !== e),\n        ]);\n    };\n\n    // Software Close\n    const onSoftwareClose = (e) => {\n        const item = software[e];\n        if (softwareList().includes(item)) {\n            Array.from(document.querySelectorAll('.software .list .nav-item'))\n                .find((el) => el.textContent === item)\n                .classList.remove('active');\n        }\n        setSoftware((software) => [\n            ...software.filter((x) => software.indexOf(x) !== e),\n        ]);\n    };\n\n    // Add Other Specialty\n    const addOtherSpecialty = (e) => {\n        e.preventDefault();\n        const lowerSpecialty = specialtyList().map((el) => el.toLowerCase());\n        const lowerOther = otherSpecialtyRef.current.value;\n        if (lowerSpecialty.includes(lowerOther.toLowerCase())) {\n            const index = lowerSpecialty.indexOf(lowerOther.toLowerCase());\n            setSpecialty((specialty) => [...specialty, specialtyList()[index]]);\n            Array.from(document.querySelectorAll('.specialty .list .nav-item'))\n                .find((el) => el.textContent === specialtyList()[index])\n                .classList.add('active');\n        } else {\n            setSpecialty((specialty) => [...specialty, lowerOther]);\n        }\n        otherSpecialtyRef.current.value = '';\n        setDirty();\n        setMessage('Are you sure you want to leave this page?');\n    };\n\n    // Add Other Software\n    const addOtherSoftware = (e) => {\n        e.preventDefault();\n        const lowerSoftware = softwareList().map((el) => el.toLowerCase());\n        const lowerOther = otherSoftwareRef.current.value;\n        if (lowerSoftware.includes(lowerOther.toLowerCase())) {\n            const index = lowerSoftware.indexOf(lowerOther.toLowerCase());\n            setSoftware((software) => [...software, softwareList()[index]]);\n            Array.from(document.querySelectorAll('.software .list .nav-item'))\n                .find((el) => el.textContent === softwareList()[index])\n                .classList.add('active');\n        } else {\n            setSoftware((software) => [...software, lowerOther]);\n        }\n        otherSoftwareRef.current.value = '';\n        setDirty();\n        setMessage('Are you sure you want to leave this page?');\n    };\n\n    // Upload Work Image Modal Click\n    const onUploadWorkImageModal = (e) => {\n        e.preventDefault();\n        setUploadWorkImageModal({\n            show: true,\n            title: 'Upload your JPG or PNG',\n            note: [\n                'Upload your jpeg or png but not exceed on 3mb',\n                'Minimum size W 1200 x H 1100 pixels',\n                'Preferred no texts layered on top of the image to keep it clean look',\n            ],\n            caption: 'Draft a JPEG or PNG',\n            data: '',\n            index: '',\n        });\n    };\n\n    // Upload Work Document Modal Click\n    const onUploadWorkDocumentModal = (e) => {\n        e.preventDefault();\n        setUploadWorkDocumentModal({\n            show: true,\n            title: 'Upload your PDF',\n            note: [\n                'Upload your pdf not exceeding to 5mb',\n                'Concise and professionaly done is a must',\n                'Avoid unnecessary elements to make it more direct',\n                'A clean and modern look attracts client',\n            ],\n            caption: 'Draft PDF',\n            data: '',\n            index: '',\n        });\n    };\n\n    // Hide Upload Work Image Modal\n    const isHideImage = () => {\n        setUploadWorkImageModal(initialUploadModal);\n    };\n\n    // Hide Upload Work Document Modal\n    const isHideDocument = () => {\n        setUploadWorkDocumentModal(initialUploadModal);\n    };\n\n    // Upload Work Image Data\n    const uploadWorkImageData = (data) => {\n        setUploadWork({ ...uploadWork, images: [...uploadWork.images, data] });\n        setUploadWorkImageModal(initialUploadModal);\n        setDirty();\n        setMessage('Are you sure you want to leave this page?');\n    };\n\n    // Upload Work Document Data\n    const uploadWorkDocumentData = (data) => {\n        setUploadWork({\n            ...uploadWork,\n            documents: [...uploadWork.documents, data],\n        });\n        setUploadWorkImageModal(initialUploadModal);\n        setDirty();\n        setMessage('Are you sure you want to leave this page?');\n    };\n\n    // Edit Upload Work Image Modal\n    const onEditWorkImage = (index) => {\n        setUploadWorkImageModal({\n            show: true,\n            title: 'Upload your JPG or PNG',\n            note: [\n                'Upload your jpeg or png but not exceed on 3mb',\n                'Minimum size W 1200 x H 1100 pixels',\n                'Preferred no texts layered on top of the image to keep it clean look',\n            ],\n            caption: 'Draft a JPEG or PNG',\n            data: uploadWork.images[index],\n            index,\n        });\n    };\n\n    // Edit Upload Work Document Modal\n    const onEditWorkDocument = (index) => {\n        setUploadWorkDocumentModal({\n            show: true,\n            title: 'Upload your PDF',\n            note: [\n                'Upload your pdf not exceeding to 5mb',\n                'Concise and professionaly done is a must',\n                'Avoid unnecessary elements to make it more direct',\n                'A clean and modern look attracts client',\n            ],\n            caption: 'Draft a PDF',\n            data: uploadWork.documents[index],\n            index,\n        });\n    };\n\n    // Delete Upload Work Image\n    const onDeleteWorkImage = (current) => {\n        const { images } = uploadWork;\n        const removeItem = images.filter((image, index) => index !== current);\n        setUploadWork({ ...uploadWork, images: [...removeItem] });\n        setUploadWorkImageModal(initialUploadModal);\n    };\n\n    // Delete Upload Work Document\n    const onDeleteWorkDocument = (current) => {\n        const { documents } = uploadWork;\n        const removeItem = documents.filter(\n            (document, index) => index !== current\n        );\n        setUploadWork({ ...uploadWork, documents: [...removeItem] });\n        setUploadWorkDocumentModal(initialUploadModal);\n    };\n\n    // Update Upload Work Image\n    const updateWorkImageData = (current, data) => {\n        const { images } = uploadWork;\n        const newUpdate = images.map((image, index) =>\n            index === current ? data : image\n        );\n        setUploadWork({ ...uploadWork, images: [...newUpdate] });\n        setUploadWorkImageModal(initialUploadModal);\n        setDirty();\n        setMessage('Are you sure you want to leave this page?');\n    };\n\n    // Update Upload Work Document\n    const updateWorkDocumentData = (current, data) => {\n        const { documents } = uploadWork;\n        const newUpdate = documents.map((document, index) =>\n            index === current ? data : document\n        );\n        setUploadWork({ ...uploadWork, documents: [...newUpdate] });\n        setUploadWorkDocumentModal(initialUploadModal);\n        setDirty();\n        setMessage('Are you sure you want to leave this page?');\n    };\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n\n        if (\n            specialty.length === 0 ||\n            software.length === 0 ||\n            uploadWork.images.length === 0 ||\n            uploadWork.documents.length === 0\n        ) {\n            return setAlert(\n                '',\n                'Please fill-in the required boxes to Proceed.'\n            );\n        } else {\n            const formData = new FormData();\n            for (const [key, value] of Object.entries(resume)) {\n                if (key === 'education' || key === 'workHistory') {\n                    formData.append(key, JSON.stringify(value));\n                } else {\n                    formData.append(key, value);\n                }\n            }\n            for (const [key, value] of Object.entries(check())) {\n                formData.append(key, value);\n            }\n            for (const property in uploadWork) {\n                uploadWork[property].forEach((element) => {\n                    formData.append([property], element.file);\n                });\n            }\n            formData.append('specialty', specialty);\n            formData.append('software', software);\n            formData.append('uploadWork', JSON.stringify(uploadWork));\n            submitResume(formData);\n            setSpecialty([]);\n            setSoftware([]);\n            setUploadWork({\n                images: [],\n                documents: [],\n            });\n            setSubmit(true);\n            setPristine();\n        }\n    };\n\n    useEffect(() => {\n        if (load) {\n            setDirty();\n            setMessage('Are you sure you want to leave this page?');\n            setLoad(false);\n        }\n\n        if (error) {\n            setAlert('', error.msg);\n            clearError();\n        }\n\n        if (submit) {\n            setSubmit(false);\n            setAlert(\n                '/',\n                '<h2 class=\"title\">Thank you for your resume</h2><p class=\"subtitle\">We will call you within 72 hours to verify your profile.</p>'\n            );\n            clearUser();\n        }\n\n        // eslint-disable-next-line\n    }, [error, submit, load]);\n\n    return (\n        <div className=\"step-6\">\n            {Prompt}\n            {uploadWorkImageModal.show ? (\n                <UploadWorkImageModal\n                    titleModal={uploadWorkImageModal.title}\n                    note={uploadWorkImageModal.note}\n                    isHide={isHideImage}\n                    isShow={uploadWorkImageModal.show}\n                    caption={uploadWorkImageModal.caption}\n                    uploadData={uploadWorkImageData}\n                    data={uploadWorkImageModal.data}\n                    index={uploadWorkImageModal.index}\n                    updateData={updateWorkImageData}\n                />\n            ) : null}\n            {uploadWorkDocumentModal.show ? (\n                <UploadWorkDocumentModal\n                    titleModal={uploadWorkDocumentModal.title}\n                    note={uploadWorkDocumentModal.note}\n                    isHide={isHideDocument}\n                    isShow={uploadWorkDocumentModal.show}\n                    caption={uploadWorkDocumentModal.caption}\n                    uploadData={uploadWorkDocumentData}\n                    data={uploadWorkDocumentModal.data}\n                    index={uploadWorkDocumentModal.index}\n                    updateData={updateWorkDocumentData}\n                />\n            ) : null}\n            <div className=\"row\">\n                <div className=\"col-lg-12\">\n                    <form className=\"form\" onSubmit={onSubmit}>\n                        <div className=\"form-row specialty\">\n                            <div className=\"col-lg-4\">\n                                <h5 className=\"title\">\n                                    Specialty{' '}\n                                    <span>Atleast (3) three skills</span>\n                                </h5>\n                                {specialty.length === 0 ? (\n                                    <p className=\"subtitle\">\n                                        This section wil view your selected\n                                        specialties. Choose atleast (3) three or\n                                        more skills and still relevant to the\n                                        job position you are applying for.\n                                    </p>\n                                ) : (\n                                    specialty.map((e, i) => (\n                                        <SpecialtySelected\n                                            key={i}\n                                            value={e}\n                                            index={i}\n                                            onSpecialtyClose={onSpecialtyClose}\n                                        />\n                                    ))\n                                )}\n                            </div>\n                            <div className=\"col-lg-8\">\n                                <div className=\"list\">\n                                    <div className=\"form-row\">\n                                        {specialtyListGenerate()}\n                                    </div>\n                                </div>\n                                <div className=\"form-inline\">\n                                    <input\n                                        type=\"text\"\n                                        placeholder=\"Other Specialty\"\n                                        className=\"form-control input other-input\"\n                                        ref={otherSpecialtyRef}\n                                    />\n                                    <button\n                                        className=\"btn btn-primary button other-add\"\n                                        onClick={addOtherSpecialty}\n                                    >\n                                        Add\n                                    </button>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"form-row software\">\n                            <div className=\"col-lg-4\">\n                                <h5 className=\"title\">\n                                    Software{' '}\n                                    <span>Atleast (3) three software use</span>\n                                </h5>\n                                {software.length === 0 ? (\n                                    <p className=\"subtitle\">\n                                        This section will view your selected\n                                        software you usually or regularly used\n                                        in order to perform on asuch of wuality\n                                        output and strill matched to the job\n                                        position you are applying for.\n                                    </p>\n                                ) : (\n                                    software.map((e, i) => (\n                                        <SoftwareSelected\n                                            key={i}\n                                            value={e}\n                                            index={i}\n                                            onSoftwareClose={onSoftwareClose}\n                                        />\n                                    ))\n                                )}\n                            </div>\n                            <div className=\"col-lg-8\">\n                                <div className=\"list\">\n                                    <div className=\"form-row\">\n                                        {softwareListGenerate()}\n                                    </div>\n                                </div>\n                                <div className=\"form-inline\">\n                                    <input\n                                        type=\"text\"\n                                        placeholder=\"Other Software\"\n                                        className=\"form-control input other-input\"\n                                        ref={otherSoftwareRef}\n                                    />\n                                    <button\n                                        className=\"btn btn-primary button other-add\"\n                                        onClick={addOtherSoftware}\n                                    >\n                                        Add\n                                    </button>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"form-row upload-work\">\n                            <div className=\"col-lg-4\">\n                                <h5 className=\"title\">\n                                    Upload Your Work <span>upto 50mb</span>\n                                </h5>\n                                <p className=\"subtitle\">\n                                    Avoid putting names on your photos such as\n                                    emails, brand names, company names. such\n                                    action will result to revoking of resumes.\n                                </p>\n                            </div>\n                            <div className=\"col-lg-8\">\n                                <div className=\"upload-image\">\n                                    <label className=\"form-label\">\n                                        JPEG or PNG's\n                                    </label>\n                                    {uploadWork.images.length === 0 ? (\n                                        <button\n                                            className=\"btn btn-primary button\"\n                                            onClick={onUploadWorkImageModal}\n                                        >\n                                            Add your first sample project as\n                                            JPEG or PNG format\n                                            <i className=\"fas fa-plus\"></i>\n                                        </button>\n                                    ) : (\n                                        <div className=\"row\">\n                                            {uploadWork.images.map((e, i) => (\n                                                <div\n                                                    className=\"col-lg-3 col-md-3 col-sm-3\"\n                                                    key={i}\n                                                >\n                                                    <UploadWorkItem\n                                                        index={i}\n                                                        data={e}\n                                                        isEdit={onEditWorkImage}\n                                                        isDelete={\n                                                            onDeleteWorkImage\n                                                        }\n                                                    />\n                                                </div>\n                                            ))}\n                                            <div className=\"col-lg-3 col-md-3 col-sm-3\">\n                                                <div\n                                                    className=\"add-entry\"\n                                                    onClick={\n                                                        onUploadWorkImageModal\n                                                    }\n                                                >\n                                                    <i className=\"fas fa-plus\"></i>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    )}\n                                </div>\n                                <div className=\"upload-document\">\n                                    <label className=\"form-label\">PDF</label>\n                                    {uploadWork.documents.length === 0 ? (\n                                        <button\n                                            className=\"btn btn-primary button\"\n                                            onClick={onUploadWorkDocumentModal}\n                                        >\n                                            Add your first sample project as PDF\n                                            format\n                                            <i className=\"fas fa-plus\"></i>\n                                        </button>\n                                    ) : (\n                                        <div className=\"row\">\n                                            {uploadWork.documents.map(\n                                                (e, i) => (\n                                                    <div\n                                                        className=\"col-lg-3 col-md-3 col-sm-3\"\n                                                        key={i}\n                                                    >\n                                                        <UploadWorkItem\n                                                            index={i}\n                                                            data={e}\n                                                            isEdit={\n                                                                onEditWorkDocument\n                                                            }\n                                                            isDelete={\n                                                                onDeleteWorkDocument\n                                                            }\n                                                        />\n                                                    </div>\n                                                )\n                                            )}\n                                            <div className=\"col-lg-3 col-md-3 col-sm-3\">\n                                                <div\n                                                    className=\"add-entry\"\n                                                    onClick={\n                                                        onUploadWorkDocumentModal\n                                                    }\n                                                >\n                                                    <i className=\"fas fa-plus\"></i>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    )}\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"form-row\">\n                            <div className=\"col-lg-2 offset-lg-10\">\n                                <input\n                                    type=\"submit\"\n                                    value=\"Submit\"\n                                    className=\"btn btn-primary btn-block button submit\"\n                                />\n                            </div>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nStep6.propTypes = {\n    setAlert: PropTypes.func.isRequired,\n    submitResume: PropTypes.func.isRequired,\n    clearError: PropTypes.func.isRequired,\n    clearUser: PropTypes.func.isRequired,\n    resumeState: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n    resumeState: state.resumeState,\n});\n\nexport default connect(mapStateToProps, {\n    setAlert,\n    clearError,\n    submitResume,\n    clearUser,\n})(Step6);\n","import React, { useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport queryString from 'query-string';\nimport { Container } from 'react-bootstrap';\n\nimport Step1 from './CreateResume/Step1';\nimport Step2 from './CreateResume/Step2';\nimport Step3 from './CreateResume/Step3';\nimport Step4 from './CreateResume/Step4';\nimport Step5 from './CreateResume/Step5';\nimport Step6 from './CreateResume/Step6';\n\nconst CreateResume = () => {\n    const { search } = useLocation();\n    const { step } = queryString.parse(search);\n    const [uploadFile, setUploadFile] = useState(null);\n\n    const onUploadFile = (data) => {\n        setUploadFile({ ...uploadFile, ...data });\n    };\n\n    const onCheck = () => {\n        return uploadFile;\n    };\n\n    const renderStep = () => {\n        let r = '';\n        if (parseInt(step) === 1) {\n            r = <Step1 />;\n        } else if (parseInt(step) === 2) {\n            r = <Step2 uploadFile={onUploadFile} />;\n        } else if (parseInt(step) === 3) {\n            r = <Step3 uploadFile={onUploadFile} />;\n        } else if (parseInt(step) === 4) {\n            r = <Step4 uploadFile={onUploadFile} />;\n        } else if (parseInt(step) === 5) {\n            r = <Step5 />;\n        } else if (parseInt(step) === 6) {\n            r = <Step6 check={onCheck} />;\n        }\n        return r;\n    };\n\n    return (\n        <div id=\"createResume\">\n            <Container>\n                <h2 className=\"title\">Create your resume</h2>\n                <div className=\"clearfix\">\n                    <div className=\"line-break\"></div>\n                    <p className={`step ${step >= 1 ? 'active' : ''}`}>1</p>\n                    <p className={`step ${step >= 2 ? 'active' : ''}`}>2</p>\n                    <p className={`step ${step >= 3 ? 'active' : ''}`}>3</p>\n                    <p className={`step ${step >= 4 ? 'active' : ''}`}>4</p>\n                    <p className={`step ${step >= 5 ? 'active' : ''}`}>5</p>\n                    <p className={`step ${step >= 6 ? 'active' : ''}`}>6</p>\n                </div>\n                {renderStep()}\n            </Container>\n        </div>\n    );\n};\n\nexport default CreateResume;\n","import React from 'react';\nimport { Route, Redirect, useLocation } from 'react-router-dom';\nimport queryString from 'query-string';\n\nconst CreateResumeRoute = ({ component: Component }) => {\n    const { search } = useLocation();\n    const { step } = queryString.parse(search);\n\n    return (\n        <Route\n            render={(props) =>\n                step === undefined || step > 6 ? (\n                    <Redirect to=\"/create-resume?step=1\" />\n                ) : (\n                    <Component {...props} />\n                )\n            }\n        />\n    );\n};\n\nexport default CreateResumeRoute;\n","import React, { useState, useEffect } from 'react';\nimport { Modal } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport renderHTML from 'react-render-html';\nimport { useHistory } from 'react-router-dom';\n\nimport { removeAlert } from './../state/actions/alertAction';\n\nconst Alert = ({ removeAlert, alert: { msg, redirect } }) => {\n    const history = useHistory();\n    const [show, setShow] = useState(false);\n    const handleClose = () => {\n        removeAlert();\n        setShow(false);\n        if (redirect !== '') {\n            history.push(redirect);\n        }\n    };\n    const handleShow = () => setShow(true);\n    useEffect(() => {\n        if (msg !== '') {\n            handleShow();\n        }\n    }, [msg]);\n    return (\n        <Modal\n            className=\"alert-msg\"\n            show={show}\n            onHide={handleClose}\n            backdrop=\"static\"\n            keyboard={false}\n        >\n            <Modal.Body>{renderHTML(msg)}</Modal.Body>\n            <Modal.Footer>\n                <button\n                    className=\"btn btn-primary btn-block button\"\n                    onClick={handleClose}\n                >\n                    OK\n                </button>\n            </Modal.Footer>\n        </Modal>\n    );\n};\n\nAlert.propTypes = {\n    removeAlert: PropTypes.func.isRequired,\n    alert: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n    alert: state.alertState,\n});\n\nexport default connect(mapStateToProps, { removeAlert })(Alert);\n","import axios from 'axios';\nimport {\n    ADD_EMPLOYER,\n    EMPLOYERS_ERROR,\n    EMPLOYER_STEP,\n    CLEAR_EMPLOYER,\n    SET_SUCCESS,\n    CLEAR_ERROR,\n} from './types';\n\n// Add employer\nexport const addEmployer = (employer) => (dispatch) => {\n    dispatch({\n        type: ADD_EMPLOYER,\n        payload: employer,\n    });\n};\n\n// Set step\nexport const setStep = (step) => (dispatch) => {\n    dispatch({\n        type: EMPLOYER_STEP,\n        payload: step,\n    });\n};\n\n// Submit employer\nexport const submitEmployer = (employer) => async (dispatch) => {\n    try {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        await axios.post('/api/employer', employer, config);\n        dispatch({\n            type: CLEAR_EMPLOYER,\n        });\n    } catch (error) {\n        dispatch({\n            type: EMPLOYERS_ERROR,\n            payload: error.response.data,\n        });\n    }\n};\n\n// Set success\nexport const setSuccess = () => {\n    return {\n        type: SET_SUCCESS,\n    };\n};\n\n// Clear error\nexport const clearError = () => {\n    return {\n        type: CLEAR_ERROR,\n    };\n};\n","import React, { useEffect, useState } from 'react';\nimport { useParams, Redirect, Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\n// Actions\nimport { verifyUser, clearError } from './../state/actions/userAction';\nimport { setAlert } from './../state/actions/alertAction';\nimport { addResume } from './../state/actions/resumeAction';\nimport { setStep } from './../state/actions/employerAction';\n\nconst Verify = ({\n    verifyUser,\n    setAlert,\n    clearError,\n    addResume,\n    setStep,\n    userState: { user, error },\n}) => {\n    let { token } = useParams();\n    const [load, setLoad] = useState(true);\n    const [link, setLink] = useState(null);\n    useEffect(() => {\n        if (load) {\n            verifyUser({ verificationToken: token });\n            setLoad(false);\n        }\n        if (error) {\n            setAlert('/', error.msg);\n            clearError();\n        }\n\n        if (user) {\n            if (user.type === 'Remote Worker') {\n                const {\n                    firstName,\n                    lastName,\n                    email,\n                    cellphone,\n                    city,\n                    country,\n                    facebook,\n                } = localStorage;\n                const resume = {\n                    firstName,\n                    lastName,\n                    email,\n                    cellphone,\n                    city,\n                    country,\n                    facebook,\n                };\n                localStorage.clear();\n                addResume(resume);\n                setLink('/create-resume?step=2');\n            } else if (user.type === 'Employer') {\n                setStep(2);\n                setLink('/signup/employer?step=2');\n            }\n        }\n\n        // eslint-disable-next-line\n    }, [error, load, user]);\n\n    return <Route render={() => link && <Redirect to={link} />} />;\n};\n\nVerify.propTypes = {\n    verifyUser: PropTypes.func.isRequired,\n    setAlert: PropTypes.func.isRequired,\n    clearError: PropTypes.func.isRequired,\n    addResume: PropTypes.func.isRequired,\n    setStep: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n    userState: state.userState,\n});\n\nexport default connect(mapStateToProps, {\n    verifyUser,\n    setAlert,\n    clearError,\n    addResume,\n    setStep,\n})(Verify);\n","import React from 'react';\n\nconst NotFound = () => {\n    return (\n        <div className=\"container text-center\">\n            <h1>404 Error</h1>\n            <p>The page you are looking for cound not be found.</p>\n        </div>\n    );\n};\n\nexport default NotFound;\n","import axios from 'axios';\nimport {\n    ADD_JOB,\n    CLEAR_JOB,\n    JOBS_ERROR,\n    CLEAR_ERROR,\n    SET_SUCCESS,\n    JOB_STEP,\n    GET_JOBS,\n    CLEAR_DETAILS,\n    VIEW_DETAILS,\n} from './types';\n\n// Add job\nexport const addJob = (job) => (dispatch) => {\n    dispatch({\n        type: ADD_JOB,\n        payload: job,\n    });\n};\n\n// Submit job\nexport const submitJob = (job) => async (dispatch) => {\n    try {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        await axios.post('/api/job', job, config);\n        dispatch({\n            type: CLEAR_JOB,\n        });\n    } catch (error) {\n        dispatch({\n            type: JOBS_ERROR,\n            payload: error.response.data,\n        });\n    }\n};\n\n// Set success\nexport const setSuccess = () => {\n    return {\n        type: SET_SUCCESS,\n    };\n};\n\n// Clear error\nexport const clearError = () => {\n    return {\n        type: CLEAR_ERROR,\n    };\n};\n\n// Set step\nexport const setStep = (step) => (dispatch) => {\n    dispatch({\n        type: JOB_STEP,\n        payload: step,\n    });\n};\n\n// New job\nexport const newJobs = () => async (dispatch) => {\n    try {\n        const getSearch = window.location.search;\n        const res = await axios.get(`/api/job/new-jobs${getSearch}`);\n        dispatch({\n            type: GET_JOBS,\n            payload: res.data,\n        });\n    } catch (error) {\n        dispatch({\n            type: JOBS_ERROR,\n            payload: error.response.data,\n        });\n    }\n};\n\n// Rejected job\nexport const rejectedJobs = () => async (dispatch) => {\n    try {\n        const getSearch = window.location.search;\n        const res = await axios.get(`/api/job/rejected-jobs${getSearch}`);\n        dispatch({\n            type: GET_JOBS,\n            payload: res.data,\n        });\n    } catch (error) {\n        dispatch({\n            type: JOBS_ERROR,\n            payload: error.response.data,\n        });\n    }\n};\n\n// Approved applicants\nexport const approvedJobs = () => async (dispatch) => {\n    try {\n        const getSearch = window.location.search;\n        const res = await axios.get(`/api/job/approved-jobs${getSearch}`);\n        dispatch({\n            type: GET_JOBS,\n            payload: res.data,\n        });\n    } catch (error) {\n        dispatch({\n            type: JOBS_ERROR,\n            payload: error.response.data,\n        });\n    }\n};\n\n// Approve resume\nexport const approveJob = (data) => async (dispatch) => {\n    try {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        await axios.put('/api/job/approve-job', data, config);\n    } catch (error) {\n        dispatch({\n            type: JOBS_ERROR,\n            payload: error.response.data,\n        });\n    }\n};\n\n// Reject resume\nexport const rejectJob = (data) => async (dispatch) => {\n    try {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        await axios.put('/api/job/reject-job', data, config);\n    } catch (error) {\n        dispatch({\n            type: JOBS_ERROR,\n            payload: error.response.data,\n        });\n    }\n};\n\n// Delete resume\nexport const deleteJob = (id) => async (dispatch) => {\n    try {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        await axios.delete(`/api/job/delete-job/${id}`);\n    } catch (error) {\n        dispatch({\n            type: JOBS_ERROR,\n            payload: error.response.data,\n        });\n    }\n};\n\n// Clear details\nexport const clearDetails = () => {\n    return {\n        type: CLEAR_DETAILS,\n    };\n};\n\n// View details\nexport const viewDetails = (id) => async (dispatch) => {\n    try {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n        const res = await axios.post('/api/job/view-details', { id }, config);\n        dispatch({\n            type: VIEW_DETAILS,\n            payload: res.data,\n        });\n    } catch (error) {\n        dispatch({\n            type: JOBS_ERROR,\n            payload: error.response.data,\n        });\n    }\n};\n","import React, { useState, useEffect } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\n// Lists\nimport { availabilityList } from './../../list/Availability';\nimport { specialtyList } from './../../list/Specialty';\nimport { softwareList } from './../../list/Software';\n\n// Actions\nimport {\n    addFilter,\n    removeFilter,\n    updateFilter,\n} from './../../state/actions/filterAction';\n\nconst Filter = ({\n    loadData,\n    addFilter,\n    updateFilter,\n    removeFilter,\n    filterState: { filter },\n}) => {\n    const queryParams = new URLSearchParams(window.location.search);\n    const newUrl = new URL(window.location.href);\n    const history = useHistory();\n    const [show, setShow] = useState({\n        availabilityCat: false,\n        specialtyCat: false,\n        softwareCat: false,\n    });\n    const onShow = (e) => {\n        e.preventDefault();\n        const { name } = e.target;\n        setShow({ ...show, [name]: !show[name] });\n    };\n    const onChange = (e) => {\n        const { name, value } = e.target;\n        const { specialty, software } = filter;\n\n        if (name === 'availability') {\n            addFilter({ [name]: value });\n        }\n\n        if (name === 'specialty') {\n            if (specialty === undefined) {\n                addFilter({ [name]: [value] });\n            } else if (specialty.includes(value)) {\n                updateFilter({\n                    [name]: [...specialty.filter((x) => x !== value)],\n                });\n            } else {\n                updateFilter({ [name]: [...specialty, value] });\n            }\n        }\n\n        if (name === 'software') {\n            if (software === undefined) {\n                addFilter({ [name]: [value] });\n            } else if (software.includes(value)) {\n                updateFilter({\n                    [name]: [...software.filter((x) => x !== value)],\n                });\n            } else {\n                updateFilter({ [name]: [...software, value] });\n            }\n        }\n\n        const oldData = queryParams.get(name);\n        let newData;\n\n        if (oldData) {\n            newData = oldData.split(',');\n\n            if (name === 'availability') {\n                newUrl.searchParams.set(name, value);\n            } else {\n                if (newData.includes(value)) {\n                    newData = newData.filter((e) => e !== value);\n                } else {\n                    newData.push(value);\n                }\n\n                if (newData.length !== 0) {\n                    newData = newData.join(',');\n                    newUrl.searchParams.set(name, newData);\n                } else {\n                    newUrl.searchParams.delete(name);\n                }\n            }\n        } else {\n            newUrl.searchParams.set(name, value);\n        }\n\n        if (queryParams.get('page')) {\n            newUrl.searchParams.set('page', 1);\n        }\n\n        history.push({\n            pathname: newUrl.pathname,\n            search: newUrl.search,\n        });\n\n        loadData();\n    };\n\n    useEffect(() => {\n        if (queryParams.get('availability') !== filter.availability) {\n            if (queryParams.get('availability')) {\n                addFilter({ availability: queryParams.get('availability') });\n            } else {\n                if (filter.availability) {\n                    const { availability, ...newFilter } = filter;\n                    removeFilter(newFilter);\n                }\n            }\n        }\n\n        const specialty =\n            queryParams.get('specialty') !== null\n                ? queryParams.get('specialty').split(',')\n                : [];\n\n        if (specialty.length > 0) {\n            if (filter.specialty === undefined) {\n                addFilter({ specialty });\n            }\n        } else {\n            if (filter.specialty) {\n                const { specialty, ...newFilter } = filter;\n                removeFilter(newFilter);\n            }\n        }\n\n        const software =\n            queryParams.get('software') !== null\n                ? queryParams.get('software').split(',')\n                : [];\n\n        if (software.length > 0) {\n            if (filter.software === undefined) {\n                addFilter({ software });\n            }\n        } else {\n            if (filter.software) {\n                const { software, ...newFilter } = filter;\n                removeFilter(newFilter);\n            }\n        }\n\n        // eslint-disable-next-line\n    }, [queryParams, filter]);\n\n    return (\n        <div className=\"filter\">\n            <h4 className=\"title\">Filter by</h4>\n            <ul className=\"nav flex-column\">\n                <li className=\"nav-item\">\n                    <Link\n                        className=\"nav-link\"\n                        to=\"#\"\n                        name=\"availabilityCat\"\n                        onClick={onShow}\n                    >\n                        Availability{' '}\n                        <i\n                            className={`fas float-right pt-1 fa-${\n                                show.availabilityCat ? 'minus' : 'plus'\n                            }`}\n                        ></i>\n                    </Link>\n                    <ul\n                        className={`nav flex-column filter-dropdown${\n                            show.availabilityCat ? ' d-block' : ' d-none'\n                        }`}\n                    >\n                        {availabilityList().map((e, i) => (\n                            <li\n                                key={i}\n                                className={`nav-item${\n                                    filter.availability &&\n                                    filter.availability === e\n                                        ? ' checked'\n                                        : ''\n                                }`}\n                            >\n                                <input\n                                    type=\"radio\"\n                                    name=\"availability\"\n                                    className=\"filter-input\"\n                                    id={`availability${i}`}\n                                    value={e}\n                                    onChange={onChange}\n                                    checked={\n                                        filter.availability &&\n                                        filter.availability === e\n                                    }\n                                />\n                                <label\n                                    htmlFor={`availability${i}`}\n                                    className=\"filter-label\"\n                                >\n                                    {e}\n                                </label>\n                            </li>\n                        ))}\n                    </ul>\n                </li>\n                <li className=\"nav-item\">\n                    <Link\n                        className=\"nav-link\"\n                        to=\"#\"\n                        name=\"specialtyCat\"\n                        onClick={onShow}\n                    >\n                        Specialty{' '}\n                        <i\n                            className={`fas float-right pt-1 fa-${\n                                show.specialtyCat ? 'minus' : 'plus'\n                            }`}\n                        ></i>\n                    </Link>\n                    <ul\n                        className={`nav flex-column filter-dropdown${\n                            show.specialtyCat ? ' d-block' : ' d-none'\n                        }`}\n                    >\n                        {specialtyList().map((e, i) => (\n                            <li\n                                key={i}\n                                className={`nav-item${\n                                    filter.specialty &&\n                                    filter.specialty.includes(e)\n                                        ? ' checked'\n                                        : ''\n                                }`}\n                            >\n                                <input\n                                    type=\"checkbox\"\n                                    name=\"specialty\"\n                                    className=\"filter-input\"\n                                    id={`specialty${i}`}\n                                    value={e}\n                                    onChange={onChange}\n                                    checked={\n                                        filter.specialty &&\n                                        filter.specialty.includes(e)\n                                    }\n                                />\n                                <label\n                                    htmlFor={`specialty${i}`}\n                                    className=\"filter-label\"\n                                >\n                                    {e}\n                                </label>\n                            </li>\n                        ))}\n                    </ul>\n                </li>\n                <li className=\"nav-item\">\n                    <Link\n                        className=\"nav-link\"\n                        to=\"#\"\n                        name=\"softwareCat\"\n                        onClick={onShow}\n                    >\n                        Software Use{' '}\n                        <i\n                            className={`fas float-right pt-1 fa-${\n                                show.softwareCat ? 'minus' : 'plus'\n                            }`}\n                        ></i>\n                    </Link>\n                    <ul\n                        className={`nav flex-column filter-dropdown${\n                            show.softwareCat ? ' d-block' : ' d-none'\n                        }`}\n                    >\n                        {softwareList().map((e, i) => (\n                            <li\n                                key={i}\n                                className={`nav-item${\n                                    filter.software &&\n                                    filter.software.includes(e)\n                                        ? ' checked'\n                                        : ''\n                                }`}\n                            >\n                                <input\n                                    type=\"checkbox\"\n                                    name=\"software\"\n                                    className=\"filter-input\"\n                                    id={`software${i}`}\n                                    value={e}\n                                    onChange={onChange}\n                                    checked={\n                                        filter.software &&\n                                        filter.software.includes(e)\n                                    }\n                                />\n                                <label\n                                    htmlFor={`software${i}`}\n                                    className=\"filter-label\"\n                                >\n                                    {e}\n                                </label>\n                            </li>\n                        ))}\n                    </ul>\n                </li>\n            </ul>\n        </div>\n    );\n};\n\nFilter.propTypes = {\n    addFilter: PropTypes.func.isRequired,\n    updateFilter: PropTypes.func.isRequired,\n    filterState: PropTypes.object.isRequired,\n    removeFilter: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n    filterState: state.filterState,\n});\n\nexport default connect(mapStateToProps, {\n    addFilter,\n    updateFilter,\n    removeFilter,\n})(Filter);\n","import React, { useState, useEffect } from 'react';\nimport { Modal } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport renderHTML from 'react-render-html';\n\n// Actions\nimport {\n    approveResume,\n    deleteResume,\n    rejectResume,\n} from '../../state/actions/candidateAction';\n\nconst ModalActionResume = ({\n    isShow,\n    id,\n    msg,\n    rate,\n    salary,\n    comments,\n    approveResume,\n    isHide,\n    hideModal,\n    deleteResume,\n    rejectResume,\n    action,\n}) => {\n    const [show, setShow] = useState(false);\n\n    // Close alert modal\n    const handleClose = () => {\n        setShow(false);\n    };\n\n    // Show alert modal\n    const handleShow = () => setShow(true);\n\n    const primaryAction = () => {\n        let p = '';\n        if (action === 'approve') {\n            p = (\n                <button\n                    className=\"btn btn-primary button approve\"\n                    onClick={() => {\n                        handleClose();\n                        approveResume({ id, rate, salary, comments });\n                        isHide();\n                    }}\n                >\n                    Approve\n                </button>\n            );\n        } else if (action === 'reject') {\n            p = (\n                <button\n                    className=\"btn btn-primary button reject\"\n                    onClick={() => {\n                        handleClose();\n                        rejectResume({ id, rate, salary, comments });\n                        isHide();\n                    }}\n                >\n                    Reject\n                </button>\n            );\n        } else if (action === 'delete') {\n            p = (\n                <button\n                    className=\"btn btn-primary button delete\"\n                    onClick={() => {\n                        handleClose();\n                        deleteResume(id);\n                        isHide();\n                    }}\n                >\n                    Delete\n                </button>\n            );\n        } else if (action === 'reapprove') {\n            p = (\n                <button\n                    className=\"btn btn-primary button delete\"\n                    onClick={() => {\n                        handleClose();\n                        approveResume({ id, rate, salary, comments });\n                        isHide();\n                    }}\n                >\n                    Reapprove\n                </button>\n            );\n        } else if (action === 'delete') {\n            p = (\n                <button\n                    className=\"btn btn-primary button delete\"\n                    onClick={() => {\n                        handleClose();\n                        deleteResume(id);\n                        isHide();\n                    }}\n                >\n                    Delete\n                </button>\n            );\n        }\n        return p;\n    };\n\n    useEffect(() => {\n        if (isShow) {\n            handleShow();\n        }\n    }, [isShow]);\n\n    return (\n        <Modal\n            className=\"alert-msg\"\n            show={show}\n            onHide={handleClose}\n            backdrop=\"static\"\n            keyboard={false}\n        >\n            <Modal.Body>{renderHTML(msg)}</Modal.Body>\n            <Modal.Footer>\n                <button\n                    className=\"btn btn-primary button approve\"\n                    onClick={() => {\n                        handleClose();\n                        hideModal();\n                    }}\n                >\n                    Cancel\n                </button>\n                {primaryAction()}\n            </Modal.Footer>\n        </Modal>\n    );\n};\n\nModalActionResume.propTypes = {\n    approveResume: PropTypes.func.isRequired,\n    deleteResume: PropTypes.func.isRequired,\n    rejectResume: PropTypes.func.isRequired,\n};\n\nexport default connect(null, {\n    approveResume,\n    deleteResume,\n    rejectResume,\n})(ModalActionResume);\n","import React, { useEffect, useState } from 'react';\nimport { Modal } from 'react-bootstrap';\n\nconst ViewImage = ({ isShow, isHide, image, title }) => {\n    const [show, setShow] = useState(false);\n\n    const handleClose = () => {\n        setShow(false);\n        isHide();\n    };\n    const handleShow = () => setShow(true);\n\n    useEffect(() => {\n        if (isShow) {\n            handleShow();\n        }\n    }, [isShow]);\n\n    return (\n        <Modal show={show} onHide={handleClose}>\n            <Modal.Header closeButton>\n                <Modal.Title>{title}</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <img src={`/uploads/${image}`} alt=\"\" className=\"img-fluid\" />\n            </Modal.Body>\n            <Modal.Footer></Modal.Footer>\n        </Modal>\n    );\n};\n\nexport default ViewImage;\n","import React, { useState, useEffect, useCallback } from 'react';\nimport { Modal } from 'react-bootstrap';\nimport Cropper from 'react-easy-crop';\n\n// Actions\nimport { setAlert } from './../../state/actions/alertAction';\n\nconst ViewSampleWorkImage = ({\n    isShow,\n    isHide,\n    title,\n    file,\n    desc,\n    titleModal,\n}) => {\n    // State\n    const [show, setShow] = useState(false);\n    const [crop, setCrop] = useState({ x: 0, y: 0 });\n    const [zoom, setZoom] = useState(1);\n\n    // Close Modal\n    const handleClose = useCallback(() => {\n        isHide();\n        setShow(false);\n    }, [isHide]);\n\n    // Show Modal\n    const handleShow = () => setShow(true);\n\n    useEffect(() => {\n        if (isShow) {\n            handleShow();\n        }\n    }, [isShow]);\n\n    return (\n        <Modal\n            id=\"uploadWorkImageModal\"\n            show={show}\n            onHide={handleClose}\n            backdrop=\"static\"\n            keyboard={false}\n            size=\"lg\"\n            aria-labelledby=\"contained-modal-title-vcenter\"\n            centered\n        >\n            <Modal.Header closeButton>\n                <Modal.Title>{titleModal}</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <div className=\"container-fluid\">\n                    <div className=\"row\">\n                        <div className=\"col-lg-7\">\n                            <img\n                                src={`/uploads/${file}`}\n                                className=\"img-fluid\"\n                            />\n                        </div>\n                        <div className=\"col-lg-5\">\n                            <h3>Project Title</h3>\n                            <p>{title}</p>\n                            <h3>Description</h3>\n                            <p style={{ wordWrap: 'pre' }}>{desc}</p>\n                        </div>\n                    </div>\n                </div>\n            </Modal.Body>\n        </Modal>\n    );\n};\n\nexport default ViewSampleWorkImage;\n","import React, { useState, useEffect, useCallback } from 'react';\nimport { Modal } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Cropper from 'react-easy-crop';\n\n// Actions\nimport { setAlert } from './../../state/actions/alertAction';\n\nconst ViewSampleWorkDocument = ({\n    isShow,\n    isHide,\n    title,\n    file,\n    desc,\n    titleModal,\n}) => {\n    // State\n    const [show, setShow] = useState(false);\n    const [crop, setCrop] = useState({ x: 0, y: 0 });\n    const [zoom, setZoom] = useState(1);\n    const [fileDisplay, setFileDisplay] = useState('');\n\n    // Close Modal\n    const handleClose = useCallback(() => {\n        isHide();\n        setShow(false);\n    }, [isHide]);\n\n    // Show Modal\n    const handleShow = () => setShow(true);\n\n    useEffect(() => {\n        if (isShow) {\n            handleShow();\n            setFileDisplay(`/uploads/${file}`);\n        }\n    }, [isShow]);\n\n    return (\n        <Modal\n            id=\"uploadWorkImageModal\"\n            show={show}\n            onHide={handleClose}\n            backdrop=\"static\"\n            keyboard={false}\n            size=\"lg\"\n            aria-labelledby=\"contained-modal-title-vcenter\"\n            centered\n        >\n            <Modal.Header closeButton>\n                <Modal.Title>{titleModal}</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <div className=\"container-fluid\">\n                    <div className=\"row\">\n                        <div className=\"col-lg-7\">\n                            {file !== '' && <iframe src={fileDisplay} />}\n                        </div>\n                        <div className=\"col-lg-5\">\n                            <h3>Project Title</h3>\n                            <p>{title}</p>\n                            <h3>Description</h3>\n                            <p style={{ wordWrap: 'pre' }}>{desc}</p>\n                        </div>\n                    </div>\n                </div>\n            </Modal.Body>\n        </Modal>\n    );\n};\n\nViewSampleWorkDocument.propTypes = {\n    setAlert: PropTypes.func.isRequired,\n};\n\nexport default connect(null, { setAlert })(ViewSampleWorkDocument);\n","import React, { useEffect, useState, useRef } from 'react';\nimport { Modal } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\n// Actions\nimport { setAlert } from './../../state/actions/alertAction';\n\n// Components\nimport ModalActionResume from './ModalActionResume';\nimport ViewImage from './ViewImage';\nimport ViewSampleWorkImage from './ViewSampleWorkImage';\nimport ViewSampleWorkDocument from './ViewSampleWorkDocument';\n\nconst ViewResume = ({\n    isShow,\n    isHide,\n    loadCandidate,\n    candidateState: { resume },\n    setAlert,\n}) => {\n    const [show, setShow] = useState(false);\n    const [editRate, setEditRate] = useState(false);\n    const [editSalary, setEditSalary] = useState(false);\n    const [rate, setRate] = useState(0);\n    const [showModalAction, setShowModalAction] = useState(false);\n    const [action, setAction] = useState('');\n    const [msg, setMsg] = useState('');\n    const recruitersCommentsRef = useRef(null);\n    const [showWorkImage, setShowWorkImage] = useState(false);\n    const [showWorkDocument, setShowWorkDocument] = useState(false);\n    const [viewWorkImage, setViewWorkImage] = useState({\n        file: '',\n        title: '',\n        desc: '',\n    });\n    const [viewWorkDocument, setViewWorkDocument] = useState({\n        file: '',\n        title: '',\n        desc: '',\n    });\n    const [showImage, setShowImage] = useState(false);\n    const [viewImage, setViewImage] = useState({\n        title: '',\n        image: '',\n    });\n    const initialData = {\n        _id: '',\n        firstName: '',\n        lastName: '',\n        resumeImage: '',\n        city: '',\n        availability: '',\n        expectedSalary: '',\n        currency: '',\n        specialty: [],\n        software: [],\n        uploadWork: {\n            images: [],\n            documents: [],\n        },\n        aboutYourself: '',\n        workHistory: [],\n        education: [],\n        workspace: '',\n        internetType: '',\n        hardwareType: '',\n        brandName: '',\n        internetResult: '',\n        computerSpecs: '',\n        recruitmentsComment: [],\n        rating: '',\n    };\n    const [data, setData] = useState(initialData);\n    const [newData, setNewData] = useState({\n        rate: 0,\n        salary: '',\n        comments: '',\n    });\n\n    const handleClose = () => {\n        setData(initialData);\n        setShow(false);\n        isHide(true);\n    };\n\n    const handleShow = () => setShow(true);\n\n    const editChange = (e) => {\n        const { name, value } = e.target;\n        setNewData({ ...newData, [name]: value });\n    };\n\n    const {\n        _id,\n        firstName,\n        lastName,\n        resumeImage,\n        city,\n        availability,\n        aboutYourself,\n        expectedSalary,\n        specialty,\n        software,\n        uploadWork,\n        workHistory,\n        education,\n        workspace,\n        internetType,\n        hardwareType,\n        brandName,\n        internetResult,\n        computerSpecs,\n        status,\n        recruitmentsComment,\n    } = data;\n\n    const editNewRate = (rate) => {\n        if (editRate) {\n            setNewData({ ...newData, rate });\n            setRate(rate);\n        }\n    };\n\n    const approveResume = () => {\n        if (\n            newData.rate === 0 ||\n            newData.comments === undefined ||\n            newData.comments.length === 0\n        ) {\n            setAlert('', 'Please fill-in the required boxes to Proceed.');\n        } else {\n            setAction('approve');\n            setShowModalAction(true);\n            setMsg(\n                '<h2 className=\"title\">Approve Resume?</h2><p>This resume will add to your approved resume tab.</p>'\n            );\n        }\n    };\n\n    const rejectResume = () => {\n        setAction('reject');\n        setShowModalAction(true);\n        setMsg(\n            '<h2 className=\"title\">Reject Resume?</h2><p>This resume will go to your reject resume tab. You can go back and review it again and decide to reapprove or delete this application.</p>'\n        );\n    };\n\n    const deleteResume = () => {\n        setAction('delete');\n        setShowModalAction(true);\n        setMsg(\n            '<h2 className=\"title\">Delete Resume?</h2><p>This resume will remove from the system and data of draftsource.</p>'\n        );\n    };\n\n    const reapproveResume = () => {\n        setAction('reapprove');\n        setShowModalAction(true);\n        setMsg(\n            '<h2 className=\"title\">Reapprove Resume?</h2><p>This resume will go to your approve resume tab. You can reject this resume later on if you wanted.</p>'\n        );\n    };\n\n    const actionButton = () => {\n        let a = '';\n        if (status === 'Pending') {\n            a = (\n                <>\n                    <button\n                        className=\"btn btn-primary button\"\n                        onClick={approveResume}\n                    >\n                        Approve\n                    </button>\n                    <button\n                        className=\"btn btn-primary button button1\"\n                        onClick={rejectResume}\n                    >\n                        Reject\n                    </button>\n                </>\n            );\n        } else if (status === 'Approve') {\n            a = (\n                <button\n                    className=\"btn btn-primary button button\"\n                    onClick={rejectResume}\n                >\n                    Reject\n                </button>\n            );\n        } else if (status === 'Reject') {\n            a = (\n                <>\n                    <button\n                        className=\"btn btn-primary button\"\n                        onClick={reapproveResume}\n                    >\n                        Reapprove\n                    </button>\n                    <button\n                        className=\"btn btn-primary button button1\"\n                        onClick={deleteResume}\n                    >\n                        Delete\n                    </button>\n                </>\n            );\n        }\n        return a;\n    };\n\n    useEffect(() => {\n        if (isShow) {\n            handleShow();\n        }\n\n        if (resume !== null) {\n            setData(resume);\n            setNewData({\n                ...newData,\n                comments: resume.recruitmentsComment,\n                rate: resume.rating,\n            });\n        }\n    }, [resume, isShow, data]);\n\n    return (\n        <Modal\n            show={show}\n            onHide={handleClose}\n            backdrop=\"static\"\n            keyboard={false}\n            size=\"xl\"\n            id=\"seeResume\"\n        >\n            <Modal.Body>\n                <ModalActionResume\n                    isShow={showModalAction}\n                    id={_id}\n                    msg={msg}\n                    action={action}\n                    rate={newData.rate}\n                    comments={newData.comments}\n                    salary={\n                        newData.salary !== '' ? newData.salary : expectedSalary\n                    }\n                    isHide={() => {\n                        handleClose();\n                        loadCandidate();\n                    }}\n                    hideModal={() => setShowModalAction(false)}\n                />\n                <ViewImage\n                    isShow={showImage}\n                    isHide={() => {\n                        setShowImage(false);\n                        setViewImage({\n                            image: '',\n                            title: '',\n                        });\n                    }}\n                    image={viewImage.image}\n                    title={viewImage.title}\n                />\n                <ViewSampleWorkImage\n                    isShow={showWorkImage}\n                    isHide={() => {\n                        setShowWorkImage(false);\n                        setViewWorkImage({ title: '', desc: '', file: '' });\n                    }}\n                    data={viewWorkImage}\n                />\n                <ViewSampleWorkDocument\n                    isShow={showWorkDocument}\n                    isHide={() => {\n                        setShowWorkDocument(false);\n                        setViewWorkDocument({ title: '', desc: '', file: '' });\n                    }}\n                    title={viewWorkDocument.title}\n                    desc={viewWorkDocument.desc}\n                    file={viewWorkDocument.file}\n                />\n                <button className=\"close\" onClick={handleClose}>\n                    <span aria-hidden=\"true\">×</span>\n                    <span className=\"sr-only\">Close</span>\n                </button>\n                <div className=\"container-fluid\">\n                    <div className=\"row pb-5\">\n                        <div className=\"col-lg-3\">\n                            <img\n                                src={`/uploads/${resumeImage}`}\n                                alt=\"\"\n                                className=\"img-fluid resume-image mb-3\"\n                            />\n                            {aboutYourself !== '' && (\n                                <audio controls>\n                                    <source src={`/uploads/${aboutYourself}`} />\n                                    Your browser does not support the audio!\n                                </audio>\n                            )}\n                        </div>\n                        <div className=\"col-lg-9\">\n                            <div className=\"row\">\n                                <div className=\"col-lg-8\">\n                                    <p className=\"fullname\">\n                                        {firstName} <br />\n                                        {lastName}\n                                    </p>\n                                    <p className=\"city\">{city}</p>\n                                </div>\n                                <div className=\"col-lg-4\">{actionButton()}</div>\n                            </div>\n                            <div className=\"row mt-4\">\n                                <div className=\"col-lg-4\">\n                                    <p className=\"eng-proficiency mb-1\">\n                                        English Proficiency\n                                    </p>\n                                    <div className=\"rating d-inline\">\n                                        <i\n                                            className={`rating-color fas fa-star${\n                                                newData.rate >= 1\n                                                    ? ' checked'\n                                                    : ''\n                                            }`}\n                                            onClick={(e) => {\n                                                e.preventDefault();\n                                                editNewRate(1);\n                                            }}\n                                        ></i>\n                                        <i\n                                            className={`rating-color fas fa-star${\n                                                newData.rate >= 2\n                                                    ? ' checked'\n                                                    : ''\n                                            }`}\n                                            onClick={(e) => {\n                                                e.preventDefault();\n                                                editNewRate(2);\n                                            }}\n                                        ></i>\n                                        <i\n                                            className={`rating-color fas fa-star${\n                                                newData.rate >= 3\n                                                    ? ' checked'\n                                                    : ''\n                                            }`}\n                                            onClick={(e) => {\n                                                e.preventDefault();\n                                                editNewRate(3);\n                                            }}\n                                        ></i>\n                                        <i\n                                            className={`rating-color fas fa-star${\n                                                newData.rate >= 4\n                                                    ? ' checked'\n                                                    : ''\n                                            }`}\n                                            onClick={(e) => {\n                                                e.preventDefault();\n                                                editNewRate(4);\n                                            }}\n                                        ></i>\n                                        <i\n                                            className={`rating-color fas fa-star${\n                                                newData.rate === 5\n                                                    ? ' checked'\n                                                    : ''\n                                            }`}\n                                            onClick={(e) => {\n                                                e.preventDefault();\n                                                editNewRate(5);\n                                            }}\n                                        ></i>\n                                    </div>\n                                    {!editRate ? (\n                                        <button\n                                            className=\"btn btn-primary edit-button\"\n                                            onClick={() => setEditRate(true)}\n                                        >\n                                            Edit\n                                        </button>\n                                    ) : (\n                                        <button\n                                            className=\"btn btn-primary edit-button\"\n                                            onClick={() => setEditRate(false)}\n                                        >\n                                            Save\n                                        </button>\n                                    )}\n                                </div>\n                                <div className=\"col-lg-4\">\n                                    <p className=\"availability mb-1\">\n                                        {availability}\n                                    </p>\n                                    <p className=\"salary d-inline\">\n                                        {editSalary ? (\n                                            <input\n                                                type=\"number\"\n                                                className=\"form-control input\"\n                                                name=\"salary\"\n                                                placeholder={`${\n                                                    newData.salary === ''\n                                                        ? expectedSalary\n                                                        : newData.salary\n                                                }/hr`}\n                                                onChange={editChange}\n                                            />\n                                        ) : (\n                                            <>\n                                                {`$${\n                                                    newData.salary === ''\n                                                        ? expectedSalary\n                                                        : newData.salary\n                                                }`}\n                                                <span\n                                                    style={{\n                                                        fontWeight: 500,\n                                                    }}\n                                                >\n                                                    /hr\n                                                </span>\n                                            </>\n                                        )}\n                                    </p>\n                                    {!editSalary ? (\n                                        <button\n                                            className=\"btn btn-primary edit-button\"\n                                            onClick={() => setEditSalary(true)}\n                                        >\n                                            Edit\n                                        </button>\n                                    ) : (\n                                        <button\n                                            className=\"btn btn-primary edit-button\"\n                                            onClick={() => setEditSalary(false)}\n                                        >\n                                            Save\n                                        </button>\n                                    )}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"row pb-3\">\n                        <div className=\"col-lg-3\">\n                            <p className=\"item-title color-1 mb-0\">\n                                Skills & Specialties\n                            </p>\n                        </div>\n                        <div className=\"col-lg-9\">\n                            <p id=\"specialty\" className=\"specialty mb-0\">\n                                {specialty.join(', ')}\n                            </p>\n                        </div>\n                    </div>\n                    <div className=\"row pb-5\">\n                        <div className=\"col-lg-3\">\n                            <p className=\"item-title color-1 mb-0\">\n                                Software Use\n                            </p>\n                        </div>\n                        <div className=\"col-lg-9\">\n                            <p id=\"software\" className=\"software mb-0\">\n                                {software.join(', ')}\n                            </p>\n                        </div>\n                    </div>\n                    <div className=\"row pb-5\">\n                        <div className=\"col-lg-3\">\n                            <p className=\"item-title color-2\">Sample Works</p>\n                        </div>\n                        <div className=\"col-lg-9\">\n                            <div className=\"row pb-3 upload-work-images\">\n                                {uploadWork.images.map((e, i) => (\n                                    <div className=\"col-lg-3\" key={i}>\n                                        <figure\n                                            className=\"figure\"\n                                            onClick={() => {\n                                                setShowWorkImage(true);\n                                                setViewWorkImage({\n                                                    title: e.title,\n                                                    desc: e.description,\n                                                    file: e.file,\n                                                });\n                                            }}\n                                        >\n                                            <img\n                                                src={`/uploads/${e.file}`}\n                                                alt=\"\"\n                                                className=\"figure-img img-fluid\"\n                                            />\n                                            <figcaption className=\"figure-caption\">\n                                                {e.title}\n                                            </figcaption>\n                                        </figure>\n                                    </div>\n                                ))}\n                                {uploadWork.documents.map((e, i) => (\n                                    <div className=\"col-lg-3\" key={i}>\n                                        <figure\n                                            className=\"figure\"\n                                            onClick={() => {\n                                                setShowWorkDocument(true);\n                                                setViewWorkDocument({\n                                                    title: e.title,\n                                                    desc: e.description,\n                                                    file: e.file,\n                                                });\n                                            }}\n                                        >\n                                            <img\n                                                src={`../uploads/bg-upload-${e.skin}.png`}\n                                                alt=\"\"\n                                                className=\"figure-img img-fluid\"\n                                            />\n                                            <figcaption className=\"figure-caption\">\n                                                {e.title}\n                                            </figcaption>\n                                        </figure>\n                                    </div>\n                                ))}\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"row pb-5\">\n                        <div className=\"col-lg-3\">\n                            <p className=\"item-title color-2\">\n                                Work Experience\n                            </p>\n                        </div>\n                        <div className=\"col-lg-9\">\n                            <div id=\"workHistory\" className=\"work-history\">\n                                {workHistory.map((e, i) => (\n                                    <div className=\"work-history-item\" key={i}>\n                                        <p className=\"title\">{e.title}</p>\n                                        <p className=\"company\">{e.company}</p>\n                                        <p className=\"month-year\">\n                                            {e.monthStarted} {e.yearStarted} -{' '}\n                                            {e.monthEnded} {e.yearEnded}\n                                        </p>\n                                        <p className=\"item-title\">\n                                            Job Description\n                                        </p>\n                                        <p className=\"description\">\n                                            {e.description}\n                                        </p>\n                                        <p className=\"item-title\">About</p>\n                                        <p className=\"about\">{e.about}</p>\n                                    </div>\n                                ))}\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"row pb-5\">\n                        <div className=\"col-lg-3\">\n                            <p className=\"item-title color-2\">Education</p>\n                        </div>\n                        <div className=\"col-lg-9\">\n                            <div id=\"education\" className=\"education\">\n                                {education.map((e, i) => (\n                                    <div className=\"education-item\" key={i}>\n                                        <table className=\"education-item table table-borderless\">\n                                            <tbody>\n                                                <tr>\n                                                    <td\n                                                        className={`item-choices pl-0${\n                                                            i === 0\n                                                                ? ' pt-0'\n                                                                : ''\n                                                        }`}\n                                                    >\n                                                        {e.choices}\n                                                    </td>\n                                                </tr>\n                                                {e.choices !== 'High School' ? (\n                                                    <tr>\n                                                        <td className=\"item-title pb-0 pl-0\">\n                                                            Degree\n                                                        </td>\n                                                        <td className=\"item-degree pb-0 item-value\">\n                                                            {e.degree}\n                                                        </td>\n                                                    </tr>\n                                                ) : null}\n                                                <tr>\n                                                    <td className=\"item-title pb-0 pl-0\">\n                                                        School\n                                                    </td>\n                                                    <td className=\"item-school pb-0 item-value\">\n                                                        {e.school}\n                                                    </td>\n                                                </tr>\n                                                {e.choices !== 'High School' ? (\n                                                    <tr>\n                                                        <td className=\"item-title pb-0 pl-0\">\n                                                            Course\n                                                        </td>\n                                                        <td className=\"item-course pb-0 item-value\">\n                                                            {e.course}\n                                                        </td>\n                                                    </tr>\n                                                ) : null}\n                                                <tr>\n                                                    <td className=\"item-title pb-0 pl-0\">\n                                                        Started - Graduated\n                                                    </td>\n                                                    <td className=\"item-month-year pb-0 item-value\">\n                                                        {e.monthYearStarted} -{' '}\n                                                        {e.monthYearGraduated}\n                                                    </td>\n                                                </tr>\n                                            </tbody>\n                                        </table>\n                                    </div>\n                                ))}\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"row pb-5\">\n                        <div className=\"col-lg-3\">\n                            <p className=\"item-title color-2\">\n                                Recruiter's Comments\n                            </p>\n                        </div>\n                        <div className=\"col-lg-9\">\n                            <div id=\"recruitersComments\">\n                                <div className=\"form-inline\">\n                                    <input\n                                        type=\"text\"\n                                        className=\"form-control input\"\n                                        name=\"comments\"\n                                        ref={recruitersCommentsRef}\n                                    />\n                                    <button\n                                        className=\"btn btn-primary button\"\n                                        onClick={() => {\n                                            setNewData({\n                                                ...newData,\n                                                comments: [\n                                                    ...newData.comments,\n                                                    recruitersCommentsRef\n                                                        .current.value,\n                                                ],\n                                            });\n                                            recruitersCommentsRef.current.value =\n                                                '';\n                                        }}\n                                    >\n                                        Save\n                                    </button>\n                                </div>\n                                <ul>\n                                    {newData.comments !== '' &&\n                                        newData.comments.map((e, i) => (\n                                            <li key={i}>{e}</li>\n                                        ))}\n                                </ul>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"row pb-5\">\n                        <div className=\"col-lg-3\">\n                            <p className=\"item-title color-2\">\n                                Work from Home Capabilites\n                            </p>\n                        </div>\n                        <div className=\"col-lg-9\">\n                            <table className=\"table table-borderless workspace-item\">\n                                <tbody>\n                                    <tr>\n                                        <th\n                                            scope=\"row\"\n                                            className=\"pt-0 item-title\"\n                                        >\n                                            Workspace\n                                        </th>\n                                        <td\n                                            id=\"workspace\"\n                                            className=\"pt-0 item-value\"\n                                        >\n                                            {workspace}\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <th\n                                            scope=\"row\"\n                                            className=\"pt-0 item-title\"\n                                        >\n                                            Internet Type\n                                        </th>\n                                        <td\n                                            id=\"internetType\"\n                                            className=\"pt-0 item-value\"\n                                        >\n                                            {internetType}\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <th\n                                            scope=\"row\"\n                                            className=\"pt-0 item-title\"\n                                        >\n                                            Hardware Type\n                                        </th>\n                                        <td\n                                            id=\"hardwareType\"\n                                            className=\"pt-0 item-value\"\n                                        >\n                                            {hardwareType}\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <th\n                                            scope=\"row\"\n                                            className=\"pt-0 item-title\"\n                                        >\n                                            Brand Name\n                                        </th>\n                                        <td\n                                            id=\"brandName\"\n                                            className=\"pt-0 item-value\"\n                                        >\n                                            {brandName}\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <th\n                                            scope=\"row\"\n                                            className=\"pt-0 item-title\"\n                                        >\n                                            Internet Speedtest Result\n                                        </th>\n                                        <td className=\"pt-0\">\n                                            <button\n                                                className=\"btn btn-primary view\"\n                                                onClick={() => {\n                                                    setShowImage(true);\n                                                    setViewImage({\n                                                        ...viewImage,\n                                                        image: internetResult,\n                                                        title:\n                                                            'Internet Result',\n                                                    });\n                                                }}\n                                            >\n                                                View\n                                            </button>\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <th\n                                            scope=\"row\"\n                                            className=\"pt-0 item-title\"\n                                        >\n                                            Computer Specs\n                                        </th>\n                                        <td className=\"pt-0\">\n                                            <button\n                                                className=\"btn btn-primary view\"\n                                                onClick={() => {\n                                                    setShowImage(true);\n                                                    setViewImage({\n                                                        ...viewImage,\n                                                        image: computerSpecs,\n                                                        title: 'Computer Specs',\n                                                    });\n                                                }}\n                                            >\n                                                View\n                                            </button>\n                                        </td>\n                                    </tr>\n                                </tbody>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n            </Modal.Body>\n        </Modal>\n    );\n};\n\nViewResume.propTypes = {\n    setAlert: PropTypes.func.isRequired,\n    candidateState: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n    candidateState: state.candidateState,\n});\n\nexport default connect(mapStateToProps, { setAlert })(ViewResume);\n","import React, { useEffect, useState } from 'react';\n// import { Pagination } from 'react-bootstrap';\nimport { useHistory } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport ReactPaginate from 'react-paginate';\n\n// Actions\nimport { addFilter } from './../../state/actions/filterAction';\n\nconst PaginationLink = ({\n    addFilter,\n    filterState: { filter },\n    candidateState: { total },\n}) => {\n    const queryParams = new URLSearchParams(window.location.search);\n    const newUrl = new URL(window.location.href);\n    const history = useHistory();\n    const [page, setPage] = useState(1);\n    const [limit, setLimit] = useState(10);\n    let pageNumbers = [];\n\n    for (let i = 1; i <= Math.ceil(total / filter.limit); i++) {\n        pageNumbers.push(i);\n    }\n\n    const paginate = (number) => {\n        if (number !== page) {\n            newUrl.searchParams.set('page', number);\n            setPage(number);\n            addFilter({ page: number });\n\n            history.push({\n                pathname: newUrl.pathname,\n                search: newUrl.search,\n            });\n        }\n    };\n\n    useEffect(() => {\n        if (parseInt(queryParams.get('page')) !== parseInt(filter.page)) {\n            if (parseInt(queryParams.get('page'))) {\n                addFilter({ page: parseInt(queryParams.get('page')) });\n                setPage(queryParams.get('page'));\n            } else {\n                if (page !== filter.page) {\n                    addFilter({ page: 1 });\n                }\n            }\n        }\n\n        if (parseInt(queryParams.get('limit')) !== parseInt(filter.limit)) {\n            if (parseInt(queryParams.get('limit'))) {\n                addFilter({ limit: parseInt(queryParams.get('limit')) });\n                setLimit(queryParams.get('limit'));\n            } else {\n                if (limit !== filter.limit) {\n                    addFilter({ limit: 10 });\n                }\n            }\n        }\n\n        // eslint-disable-next-line\n    }, [filter, queryParams, total, pageNumbers]);\n\n    const onPageChange = (data) => {\n        paginate(data.selected + 1);\n    };\n\n    return (\n        // <Pagination>\n        //     <Pagination.Prev onClick={() => paginate(previous.page)} />\n        //     {pageNumbers.map((number) => (\n        //         <Pagination.Item\n        //             key={number}\n        //             active={number === parseInt(page)}\n        //             onClick={() => paginate(number)}\n        //         >\n        //             {number}\n        //         </Pagination.Item>\n        //     ))}\n        //     <Pagination.Next onClick={() => paginate(next.page)} />\n        // </Pagination>\n        <ReactPaginate\n            previousLabel={<i className=\"fas fa-caret-left\"></i>}\n            nextLabel={<i className=\"fas fa-caret-right\"></i>}\n            breakLabel={'...'}\n            breakClassName={'page-item disabled'}\n            breakLinkClassName={'page-link'}\n            pageCount={pageNumbers.length}\n            pageClassName={'page-item'}\n            pageLinkClassName={'page-link'}\n            previousClassName={'page-item'}\n            previousLinkClassName={'page-link'}\n            nextLinkClassName={'page-link'}\n            nextClassName={'page-item'}\n            marginPagesDisplayed={2}\n            pageRangeDisplayed={3}\n            containerClassName={'pagination'}\n            subContainerClassName={'pages pagination'}\n            activeClassName={'active'}\n            onPageChange={onPageChange}\n            forcePage={filter.page - 1}\n        />\n    );\n};\n\nPaginationLink.propTypes = {\n    addFilter: PropTypes.func.isRequired,\n    filterState: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n    filterState: state.filterState,\n    candidateState: state.candidateState,\n});\n\nexport default connect(mapStateToProps, {\n    addFilter,\n})(PaginationLink);\n","import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport { Carousel } from 'react-bootstrap';\nimport { useHistory } from 'react-router-dom';\n\n// Actions\nimport {\n    newApplicants,\n    viewResume,\n    clearResume,\n} from './../../state/actions/candidateAction';\nimport { addFilter, removeFilter } from './../../state/actions/filterAction';\n\n// Components\nimport ViewResume from './ViewResume';\nimport PaginationLink from './PaginationLink';\n\nconst NewApplicants = ({\n    newApplicants,\n    addFilter,\n    removeFilter,\n    viewResume,\n    clearResume,\n    candidateState: { candidates },\n    filterState: { filter },\n}) => {\n    const queryParams = new URLSearchParams(window.location.search);\n    const newUrl = new URL(window.location.href);\n    const history = useHistory();\n    const [activeMiniSlide, setActiveMiniSlide] = useState(0);\n    const [seeResume, setSeeResume] = useState(false);\n    const [params, setParams] = useState({\n        search: '',\n        viewBy: '10',\n    });\n\n    const miniSlideSelect = (selectedIndex) => {\n        setActiveMiniSlide(selectedIndex);\n    };\n\n    const onChange = (e) => {\n        const { name, value } = e.target;\n\n        if (value === '') {\n            newUrl.searchParams.delete(name);\n        } else {\n            newUrl.searchParams.set(name, value);\n        }\n\n        setParams({ ...params, [name]: value });\n\n        if (name === 'limit') {\n            addFilter({ [name]: parseInt(value) });\n        } else {\n            addFilter({ [name]: value });\n        }\n\n        if (queryParams.get('page')) {\n            newUrl.searchParams.set('page', 1);\n        }\n\n        history.push({\n            pathname: newUrl.pathname,\n            search: newUrl.search,\n        });\n    };\n\n    useEffect(() => {\n        if (queryParams.get('search') !== null) {\n            if (params.search === '') {\n                addFilter({ search: queryParams.get('search') });\n                setParams({ ...params, search: queryParams.get('search') });\n            }\n        } else {\n            if (filter.search) {\n                const { search, ...newFilter } = filter;\n                removeFilter(newFilter);\n            }\n        }\n\n        // eslint-disable-next-line\n    }, [queryParams, params, filter, candidates]);\n\n    return (\n        <div id=\"admin\">\n            <div className=\"header\">\n                <input\n                    type=\"text\"\n                    name=\"search\"\n                    className=\"form-control input\"\n                    placeholder=\"Search for software, specialty or keyword\"\n                    onChange={onChange}\n                    value={params.search}\n                />\n                <label className=\"form-label view-by-label\">View by</label>\n                <select\n                    className=\"form-control input\"\n                    name=\"limit\"\n                    onChange={onChange}\n                    value={parseInt(queryParams.get('limit') || params.viewBy)}\n                >\n                    <option value=\"10\">10</option>\n                    <option value=\"20\">20</option>\n                    <option value=\"50\">50</option>\n                </select>\n            </div>\n            <div id=\"newApplicants\">\n                {seeResume ? (\n                    <ViewResume\n                        isShow={true}\n                        isHide={() => {\n                            setSeeResume(false);\n                            clearResume();\n                        }}\n                        loadCandidate={() => {\n                            newApplicants();\n                            clearResume();\n                        }}\n                    />\n                ) : null}\n                {candidates !== null\n                    ? candidates.map((e, i) => (\n                          <div className=\"candidate\" key={i}>\n                              <div className=\"row\">\n                                  <div className=\"col-lg-8\">\n                                      <div className=\"d-flex justify-content-between mt-3\">\n                                          <div className=\"profile flex-fill\">\n                                              <img\n                                                  src={`/uploads/${e.resumeImage}`}\n                                                  alt=\"\"\n                                                  className=\"img-fluid\"\n                                              />\n                                              <p className=\"name\">\n                                                  {e.firstName} {e.lastName}\n                                              </p>\n                                              <span className=\"address\">\n                                                  {e.city}\n                                              </span>\n                                          </div>\n                                          <div className=\"available mr-5 flex-shrink-1\">\n                                              <p\n                                                  style={{\n                                                      fontSize: '12px',\n                                                      color: '#606060',\n                                                      marginBottom: '6px',\n                                                  }}\n                                              >\n                                                  Availability\n                                              </p>\n                                              <p className=\"available\">\n                                                  {e.availability}\n                                              </p>\n                                          </div>\n                                          <div className=\"submitted mr-5 flex-shrink-1\">\n                                              <p\n                                                  style={{\n                                                      fontSize: '12px',\n                                                      color: '#606060',\n                                                      marginBottom: '6px',\n                                                  }}\n                                              >\n                                                  Date Submitted\n                                              </p>\n                                              {moment(e.dateCreated).format(\n                                                  'MM-DD-YYYY'\n                                              )}\n                                          </div>\n                                          <div className=\"submitted flex-shrink-1\">\n                                              <p\n                                                  style={{\n                                                      fontSize: '12px',\n                                                      color: '#606060',\n                                                      marginBottom: '6px',\n                                                  }}\n                                              >\n                                                  Time Submitted\n                                              </p>\n                                              {moment(e.dateCreated).format(\n                                                  'h:mm a'\n                                              )}\n                                          </div>\n                                      </div>\n                                      <div className=\"d-flex\"></div>\n                                      <hr className=\"line-break\" />\n                                      <p className=\"specialty-software\">\n                                          {e.specialty.map((element, index) => (\n                                              <span key={index}>{element}</span>\n                                          ))}\n                                          {e.software.map((element, index) => (\n                                              <span key={index}>{element}</span>\n                                          ))}\n                                      </p>\n                                      <button\n                                          className=\"link\"\n                                          onClick={() => {\n                                              setSeeResume(true);\n                                              viewResume(e._id);\n                                          }}\n                                      >\n                                          View Resume\n                                      </button>\n                                  </div>\n\n                                  <div className=\"col-lg-4\">\n                                      <div className=\"mini-slide\">\n                                          <Carousel\n                                              activeIndex={activeMiniSlide}\n                                              interval={null}\n                                              onSelect={miniSlideSelect}\n                                              indicators={false}\n                                              nextIcon={\n                                                  <i\n                                                      className=\"fas fa-caret-right\"\n                                                      aria-hidden=\"true\"\n                                                  ></i>\n                                              }\n                                              prevIcon={\n                                                  <i\n                                                      className=\"fas fa-caret-left\"\n                                                      aria-hidden=\"true\"\n                                                  ></i>\n                                              }\n                                          >\n                                              {e.uploadWork.images.map(\n                                                  (e, i) => (\n                                                      <Carousel.Item key={i}>\n                                                          <img\n                                                              src={`/uploads/${e.file}`}\n                                                              className=\"d-block w-100\"\n                                                              alt=\"...\"\n                                                          />\n                                                      </Carousel.Item>\n                                                  )\n                                              )}\n                                          </Carousel>\n                                          <span className=\"num\">\n                                              {activeMiniSlide + 1} of{' '}\n                                              {e.uploadWork.images.length}\n                                          </span>\n                                      </div>\n                                  </div>\n                              </div>\n                          </div>\n                      ))\n                    : 'No New Candidate'}\n            </div>\n            <div className=\"footer\">\n                <PaginationLink />\n                <label className=\"form-label view-by-label\">View by</label>\n                <select\n                    className=\"form-control input\"\n                    name=\"limit\"\n                    onChange={onChange}\n                    value={parseInt(queryParams.get('limit') || params.viewBy)}\n                >\n                    <option value=\"10\">10</option>\n                    <option value=\"20\">20</option>\n                    <option value=\"50\">50</option>\n                </select>\n            </div>\n        </div>\n    );\n};\n\nNewApplicants.propTypes = {\n    candidateState: PropTypes.object.isRequired,\n    filterState: PropTypes.object.isRequired,\n    newApplicants: PropTypes.func.isRequired,\n    addFilter: PropTypes.func.isRequired,\n    viewResume: PropTypes.func.isRequired,\n    clearResume: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n    candidateState: state.candidateState,\n    filterState: state.filterState,\n});\n\nexport default connect(mapStateToProps, {\n    newApplicants,\n    addFilter,\n    removeFilter,\n    viewResume,\n    clearResume,\n})(NewApplicants);\n","import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport { Carousel } from 'react-bootstrap';\nimport { useHistory } from 'react-router-dom';\n\n// Actions\nimport {\n    approvedApplicants,\n    viewResume,\n    clearResume,\n} from './../../state/actions/candidateAction';\nimport { addFilter, removeFilter } from './../../state/actions/filterAction';\n\n// Components\nimport ViewResume from './ViewResume';\nimport PaginationLink from './PaginationLink';\n\nconst ApprovedApplicants = ({\n    approvedApplicants,\n    addFilter,\n    removeFilter,\n    viewResume,\n    clearResume,\n    candidateState: { candidates },\n    filterState: { filter },\n}) => {\n    const queryParams = new URLSearchParams(window.location.search);\n    const newUrl = new URL(window.location.href);\n    const history = useHistory();\n    const [activeMiniSlide, setActiveMiniSlide] = useState(0);\n    const [seeResume, setSeeResume] = useState(false);\n    const [params, setParams] = useState({\n        search: '',\n        viewBy: '10',\n    });\n\n    const miniSlideSelect = (selectedIndex) => {\n        setActiveMiniSlide(selectedIndex);\n    };\n\n    const onChange = (e) => {\n        const { name, value } = e.target;\n\n        if (value === '') {\n            newUrl.searchParams.delete(name);\n        } else {\n            newUrl.searchParams.set(name, value);\n        }\n\n        setParams({ ...params, [name]: value });\n\n        if (name === 'limit') {\n            addFilter({ [name]: parseInt(value) });\n        } else {\n            addFilter({ [name]: value });\n        }\n\n        if (queryParams.get('page')) {\n            newUrl.searchParams.set('page', 1);\n        }\n\n        history.push({\n            pathname: newUrl.pathname,\n            search: newUrl.search,\n        });\n    };\n\n    useEffect(() => {\n        if (queryParams.get('search') !== null) {\n            if (params.search === '') {\n                addFilter({ search: queryParams.get('search') });\n                setParams({ ...params, search: queryParams.get('search') });\n            }\n        } else {\n            if (filter.search) {\n                const { search, ...newFilter } = filter;\n                removeFilter(newFilter);\n            }\n        }\n\n        // eslint-disable-next-line\n    }, [queryParams, params, filter, candidates]);\n\n    return (\n        <div id=\"admin\">\n            <div className=\"header\">\n                <input\n                    type=\"text\"\n                    name=\"search\"\n                    className=\"form-control input\"\n                    placeholder=\"Search for software, specialty or keyword\"\n                    onChange={onChange}\n                    value={params.search}\n                />\n                <label className=\"form-label view-by-label\">View by</label>\n                <select\n                    className=\"form-control input\"\n                    name=\"limit\"\n                    onChange={onChange}\n                    value={parseInt(queryParams.get('limit') || params.viewBy)}\n                >\n                    <option value=\"10\">10</option>\n                    <option value=\"20\">20</option>\n                    <option value=\"50\">50</option>\n                </select>\n            </div>\n            <div id=\"approvedApplicants\">\n                {seeResume ? (\n                    <ViewResume\n                        isShow={true}\n                        isHide={() => {\n                            setSeeResume(false);\n                            clearResume();\n                        }}\n                        loadCandidate={() => {\n                            approvedApplicants();\n                            clearResume();\n                        }}\n                    />\n                ) : null}\n                {candidates !== null\n                    ? candidates.map((e, i) => (\n                          <div className=\"candidate\" key={i}>\n                              <div className=\"row\">\n                                  <div className=\"col-lg-8\">\n                                      <div className=\"d-flex justify-content-between mt-3\">\n                                          <div className=\"profile flex-fill\">\n                                              <img\n                                                  src={`/uploads/${e.resumeImage}`}\n                                                  alt=\"\"\n                                                  className=\"img-fluid\"\n                                              />\n                                              <p className=\"name\">\n                                                  {e.firstName} {e.lastName}\n                                              </p>\n                                              <span className=\"address\">\n                                                  {e.city}\n                                              </span>\n                                          </div>\n                                          <div className=\"available mr-5 flex-shrink-1\">\n                                              <p\n                                                  style={{\n                                                      fontSize: '12px',\n                                                      color: '#606060',\n                                                      marginBottom: '6px',\n                                                  }}\n                                              >\n                                                  Availability\n                                              </p>\n                                              <p className=\"available\">\n                                                  {e.availability}\n                                              </p>\n                                          </div>\n                                          <div className=\"submitted mr-5 flex-shrink-1\">\n                                              <p\n                                                  style={{\n                                                      fontSize: '12px',\n                                                      color: '#606060',\n                                                      marginBottom: '6px',\n                                                  }}\n                                              >\n                                                  Date Submitted\n                                              </p>\n                                              {moment(e.dateCreated).format(\n                                                  'MM-DD-YYYY'\n                                              )}\n                                          </div>\n                                          <div className=\"submitted flex-shrink-1\">\n                                              <p\n                                                  style={{\n                                                      fontSize: '12px',\n                                                      color: '#606060',\n                                                      marginBottom: '6px',\n                                                  }}\n                                              >\n                                                  Time Submitted\n                                              </p>\n                                              {moment(e.dateCreated).format(\n                                                  'h:mm a'\n                                              )}\n                                          </div>\n                                      </div>\n                                      <div className=\"d-flex\"></div>\n                                      <hr className=\"line-break\" />\n                                      <p className=\"specialty\">\n                                          {e.specialty.join(', ')},{' '}\n                                          {e.software.join(', ')}\n                                      </p>\n                                      <button\n                                          className=\"link\"\n                                          onClick={() => {\n                                              setSeeResume(true);\n                                              viewResume(e._id);\n                                          }}\n                                      >\n                                          View Resume\n                                      </button>\n                                  </div>\n\n                                  <div className=\"col-lg-4\">\n                                      <div className=\"mini-slide\">\n                                          <Carousel\n                                              activeIndex={activeMiniSlide}\n                                              interval={null}\n                                              onSelect={miniSlideSelect}\n                                              indicators={false}\n                                              nextIcon={\n                                                  <i\n                                                      className=\"fas fa-caret-right\"\n                                                      aria-hidden=\"true\"\n                                                  ></i>\n                                              }\n                                              prevIcon={\n                                                  <i\n                                                      className=\"fas fa-caret-left\"\n                                                      aria-hidden=\"true\"\n                                                  ></i>\n                                              }\n                                          >\n                                              {e.uploadWork.images.map(\n                                                  (e, i) => (\n                                                      <Carousel.Item key={i}>\n                                                          <img\n                                                              src={`/uploads/${e.file}`}\n                                                              className=\"d-block w-100\"\n                                                              alt=\"...\"\n                                                          />\n                                                      </Carousel.Item>\n                                                  )\n                                              )}\n                                          </Carousel>\n                                          <span className=\"num\">\n                                              {activeMiniSlide + 1} of{' '}\n                                              {e.uploadWork.images.length}\n                                          </span>\n                                      </div>\n                                  </div>\n                              </div>\n                          </div>\n                      ))\n                    : 'No New Candidate'}\n            </div>\n            <div className=\"footer\">\n                <PaginationLink />\n                <label className=\"form-label view-by-label\">View by</label>\n                <select\n                    className=\"form-control input\"\n                    name=\"limit\"\n                    onChange={onChange}\n                    value={parseInt(queryParams.get('limit') || params.viewBy)}\n                >\n                    <option value=\"10\">10</option>\n                    <option value=\"20\">20</option>\n                    <option value=\"50\">50</option>\n                </select>\n            </div>\n        </div>\n    );\n};\n\nApprovedApplicants.propTypes = {\n    candidateState: PropTypes.object.isRequired,\n    filterState: PropTypes.object.isRequired,\n    approvedApplicants: PropTypes.func.isRequired,\n    addFilter: PropTypes.func.isRequired,\n    viewResume: PropTypes.func.isRequired,\n    clearResume: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n    candidateState: state.candidateState,\n    filterState: state.filterState,\n});\n\nexport default connect(mapStateToProps, {\n    approvedApplicants,\n    addFilter,\n    removeFilter,\n    viewResume,\n    clearResume,\n})(ApprovedApplicants);\n","import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport { Carousel } from 'react-bootstrap';\nimport { useHistory } from 'react-router-dom';\n\n// Actions\nimport {\n    rejectedApplicants,\n    viewResume,\n    clearResume,\n} from './../../state/actions/candidateAction';\nimport { addFilter, removeFilter } from './../../state/actions/filterAction';\n\n// Components\nimport ViewResume from './ViewResume';\nimport PaginationLink from './PaginationLink';\n\nconst RejectedApplicants = ({\n    rejectedApplicants,\n    addFilter,\n    removeFilter,\n    viewResume,\n    clearResume,\n    candidateState: { candidates },\n    filterState: { filter },\n}) => {\n    const queryParams = new URLSearchParams(window.location.search);\n    const newUrl = new URL(window.location.href);\n    const history = useHistory();\n    const [activeMiniSlide, setActiveMiniSlide] = useState(0);\n    const [seeResume, setSeeResume] = useState(false);\n    const [params, setParams] = useState({\n        search: '',\n        viewBy: '10',\n    });\n\n    const miniSlideSelect = (selectedIndex) => {\n        setActiveMiniSlide(selectedIndex);\n    };\n\n    const onChange = (e) => {\n        const { name, value } = e.target;\n\n        if (value === '') {\n            newUrl.searchParams.delete(name);\n        } else {\n            newUrl.searchParams.set(name, value);\n        }\n\n        setParams({ ...params, [name]: value });\n\n        if (name === 'limit') {\n            addFilter({ [name]: parseInt(value) });\n        } else {\n            addFilter({ [name]: value });\n        }\n\n        if (queryParams.get('page')) {\n            newUrl.searchParams.set('page', 1);\n        }\n\n        history.push({\n            pathname: newUrl.pathname,\n            search: newUrl.search,\n        });\n    };\n\n    useEffect(() => {\n        if (queryParams.get('search') !== null) {\n            if (params.search === '') {\n                addFilter({ search: queryParams.get('search') });\n                setParams({ ...params, search: queryParams.get('search') });\n            }\n        } else {\n            if (filter.search) {\n                const { search, ...newFilter } = filter;\n                removeFilter(newFilter);\n            }\n        }\n\n        // eslint-disable-next-line\n    }, [queryParams, params, filter, candidates]);\n\n    return (\n        <div id=\"admin\">\n            <div className=\"header\">\n                <input\n                    type=\"text\"\n                    name=\"search\"\n                    className=\"form-control input\"\n                    placeholder=\"Search remote keywords\"\n                    onChange={onChange}\n                    value={params.search}\n                />\n                <label className=\"form-label view-by-label\">View by</label>\n                <select\n                    className=\"form-control input\"\n                    name=\"limit\"\n                    onChange={onChange}\n                    value={parseInt(queryParams.get('limit') || params.viewBy)}\n                >\n                    <option value=\"10\">10</option>\n                    <option value=\"20\">20</option>\n                    <option value=\"50\">50</option>\n                </select>\n            </div>\n            <div id=\"rejectedApplicants\">\n                {seeResume ? (\n                    <ViewResume\n                        isShow={true}\n                        isHide={() => {\n                            setSeeResume(false);\n                            clearResume();\n                        }}\n                        loadCandidate={() => {\n                            rejectedApplicants();\n                            clearResume();\n                        }}\n                    />\n                ) : null}\n                {candidates !== null\n                    ? candidates.map((e, i) => (\n                          <div className=\"candidate\" key={i}>\n                              <div className=\"row\">\n                                  <div className=\"col-lg-8\">\n                                      <div className=\"d-flex justify-content-between mt-3\">\n                                          <div className=\"profile flex-fill\">\n                                              <img\n                                                  src={`/uploads/${e.resumeImage}`}\n                                                  alt=\"\"\n                                                  className=\"img-fluid\"\n                                              />\n                                              <p className=\"name\">\n                                                  {e.firstName} {e.lastName}\n                                              </p>\n                                              <span className=\"address\">\n                                                  {e.city}\n                                              </span>\n                                          </div>\n                                          <div className=\"available mr-5 flex-shrink-1\">\n                                              <p\n                                                  style={{\n                                                      fontSize: '12px',\n                                                      color: '#606060',\n                                                      marginBottom: '6px',\n                                                  }}\n                                              >\n                                                  Availability\n                                              </p>\n                                              <p className=\"available\">\n                                                  {e.availability}\n                                              </p>\n                                          </div>\n                                          <div className=\"submitted mr-5 flex-shrink-1\">\n                                              <p\n                                                  style={{\n                                                      fontSize: '12px',\n                                                      color: '#606060',\n                                                      marginBottom: '6px',\n                                                  }}\n                                              >\n                                                  Date Submitted\n                                              </p>\n                                              {moment(e.dateCreated).format(\n                                                  'MM-DD-YYYY'\n                                              )}\n                                          </div>\n                                          <div className=\"submitted flex-shrink-1\">\n                                              <p\n                                                  style={{\n                                                      fontSize: '12px',\n                                                      color: '#606060',\n                                                      marginBottom: '6px',\n                                                  }}\n                                              >\n                                                  Time Submitted\n                                              </p>\n                                              {moment(e.dateCreated).format(\n                                                  'h:mm a'\n                                              )}\n                                          </div>\n                                      </div>\n                                      <div className=\"d-flex\"></div>\n                                      <hr className=\"line-break\" />\n                                      <p className=\"specialty\">\n                                          {e.specialty.join(', ')},{' '}\n                                          {e.software.join(', ')}\n                                      </p>\n                                      <button\n                                          className=\"link\"\n                                          onClick={() => {\n                                              setSeeResume(true);\n                                              viewResume(e._id);\n                                          }}\n                                      >\n                                          View Resume\n                                      </button>\n                                  </div>\n\n                                  <div className=\"col-lg-4\">\n                                      <div className=\"mini-slide\">\n                                          <Carousel\n                                              activeIndex={activeMiniSlide}\n                                              interval={null}\n                                              onSelect={miniSlideSelect}\n                                              indicators={false}\n                                              nextIcon={\n                                                  <i\n                                                      className=\"fas fa-caret-right\"\n                                                      aria-hidden=\"true\"\n                                                  ></i>\n                                              }\n                                              prevIcon={\n                                                  <i\n                                                      className=\"fas fa-caret-left\"\n                                                      aria-hidden=\"true\"\n                                                  ></i>\n                                              }\n                                          >\n                                              {e.uploadWork.images.map(\n                                                  (e, i) => (\n                                                      <Carousel.Item key={i}>\n                                                          <img\n                                                              src={`/uploads/${e.file}`}\n                                                              className=\"d-block w-100\"\n                                                              alt=\"...\"\n                                                          />\n                                                      </Carousel.Item>\n                                                  )\n                                              )}\n                                          </Carousel>\n                                          <span className=\"num\">\n                                              {activeMiniSlide + 1} of{' '}\n                                              {e.uploadWork.images.length}\n                                          </span>\n                                      </div>\n                                  </div>\n                              </div>\n                          </div>\n                      ))\n                    : 'No New Candidate'}\n            </div>\n            <div className=\"footer\">\n                <PaginationLink />\n                <label className=\"form-label view-by-label\">View by</label>\n                <select\n                    className=\"form-control input\"\n                    name=\"limit\"\n                    onChange={onChange}\n                    value={parseInt(queryParams.get('limit') || params.viewBy)}\n                >\n                    <option value=\"10\">10</option>\n                    <option value=\"20\">20</option>\n                    <option value=\"50\">50</option>\n                </select>\n            </div>\n        </div>\n    );\n};\n\nRejectedApplicants.propTypes = {\n    candidateState: PropTypes.object.isRequired,\n    filterState: PropTypes.object.isRequired,\n    rejectedApplicants: PropTypes.func.isRequired,\n    addFilter: PropTypes.func.isRequired,\n    viewResume: PropTypes.func.isRequired,\n    clearResume: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n    candidateState: state.candidateState,\n    filterState: state.filterState,\n});\n\nexport default connect(mapStateToProps, {\n    rejectedApplicants,\n    addFilter,\n    removeFilter,\n    viewResume,\n    clearResume,\n})(RejectedApplicants);\n","import React, { useState, useEffect } from 'react';\nimport { Modal } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport renderHTML from 'react-render-html';\n\n// Actions\nimport {\n    approveJob,\n    deleteJob,\n    rejectJob,\n} from '../../state/actions/jobAction';\n\nconst ModalActionJob = ({\n    isShow,\n    id,\n    msg,\n    approveJob,\n    isHide,\n    hideModal,\n    deleteJob,\n    rejectJob,\n    action,\n}) => {\n    const [show, setShow] = useState(false);\n\n    // Close alert modal\n    const handleClose = () => {\n        setShow(false);\n    };\n\n    // Show alert modal\n    const handleShow = () => setShow(true);\n\n    const primaryAction = () => {\n        let p = '';\n        if (action === 'approve') {\n            p = (\n                <button\n                    className=\"btn btn-primary button approve\"\n                    onClick={() => {\n                        handleClose();\n                        approveJob({ id });\n                        isHide();\n                    }}\n                >\n                    Approve\n                </button>\n            );\n        } else if (action === 'reject') {\n            p = (\n                <button\n                    className=\"btn btn-primary button reject\"\n                    onClick={() => {\n                        handleClose();\n                        rejectJob({ id });\n                        isHide();\n                    }}\n                >\n                    Reject\n                </button>\n            );\n        } else if (action === 'delete') {\n            p = (\n                <button\n                    className=\"btn btn-primary button delete\"\n                    onClick={() => {\n                        handleClose();\n                        deleteJob(id);\n                        isHide();\n                    }}\n                >\n                    Delete\n                </button>\n            );\n        } else if (action === 'reapprove') {\n            p = (\n                <button\n                    className=\"btn btn-primary button delete\"\n                    onClick={() => {\n                        handleClose();\n                        approveJob({ id });\n                        isHide();\n                    }}\n                >\n                    Reapprove\n                </button>\n            );\n        } else if (action === 'delete') {\n            p = (\n                <button\n                    className=\"btn btn-primary button delete\"\n                    onClick={() => {\n                        handleClose();\n                        deleteJob(id);\n                        isHide();\n                    }}\n                >\n                    Delete\n                </button>\n            );\n        }\n        return p;\n    };\n\n    useEffect(() => {\n        if (isShow) {\n            handleShow();\n        }\n    }, [isShow]);\n\n    return (\n        <Modal\n            className=\"alert-msg\"\n            show={show}\n            onHide={handleClose}\n            backdrop=\"static\"\n            keyboard={false}\n        >\n            <Modal.Body>{renderHTML(msg)}</Modal.Body>\n            <Modal.Footer>\n                <button\n                    className=\"btn btn-primary button approve\"\n                    onClick={() => {\n                        handleClose();\n                        hideModal();\n                    }}\n                >\n                    Cancel\n                </button>\n                {primaryAction()}\n            </Modal.Footer>\n        </Modal>\n    );\n};\n\nModalActionJob.propTypes = {\n    approveJob: PropTypes.func.isRequired,\n    deleteJob: PropTypes.func.isRequired,\n    rejectJob: PropTypes.func.isRequired,\n};\n\nexport default connect(null, {\n    approveJob,\n    deleteJob,\n    rejectJob,\n})(ModalActionJob);\n","import React, { useEffect, useState } from 'react';\nimport { Modal } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\n// Actions\nimport { setAlert } from './../../state/actions/alertAction';\n\n// Components\nimport ModalActionJob from './ModalActionJob';\n\nconst ViewDetails = ({ isShow, isHide, loadJob, jobState: { details } }) => {\n    const [show, setShow] = useState(false);\n    const [showModalAction, setShowModalAction] = useState(false);\n    const [action, setAction] = useState('');\n    const [msg, setMsg] = useState('');\n    const initialData = {\n        _id: '',\n        country: '',\n        title: '',\n        company: '',\n        expectedSalary: '',\n        availability: '',\n        specialty: [],\n        software: [],\n        about: '',\n        roles: [],\n        keyResponsibilities: [],\n        responsibilities: [],\n        remoteStaffExpectation: '',\n        status: '',\n    };\n\n    const [data, setData] = useState(initialData);\n\n    const handleClose = () => {\n        setData(initialData);\n        setShow(false);\n        isHide(true);\n    };\n\n    const handleShow = () => setShow(true);\n\n    const viewImage = (file) => {};\n\n    const {\n        _id,\n        country,\n        title,\n        company,\n        expectedSalary,\n        availability,\n        specialty,\n        software,\n        about,\n        roles,\n        keyResponsibilities,\n        responsibilities,\n        remoteStaffExpectation,\n        status,\n    } = data;\n\n    const approveJob = () => {\n        setAction('approve');\n        setShowModalAction(true);\n        setMsg(\n            '<h2 className=\"title\">Approve Job?</h2><p>This job will add to your approved job tab.</p>'\n        );\n    };\n\n    const rejectJob = () => {\n        setAction('reject');\n        setShowModalAction(true);\n        setMsg(\n            '<h2 className=\"title\">Reject Job?</h2><p>This job will go to your reject job tab. You can go back and review it again and decide to reapprove or delete this application.</p>'\n        );\n    };\n\n    const deleteJob = () => {\n        setAction('delete');\n        setShowModalAction(true);\n        setMsg(\n            '<h2 className=\"title\">Delete Job?</h2><p>This job will remove from the system and data of draftsource.</p>'\n        );\n    };\n\n    const reapproveJob = () => {\n        setAction('reapprove');\n        setShowModalAction(true);\n        setMsg(\n            '<h2 className=\"title\">Reapprove Job?</h2><p>This job will go to your approve job tab. You can reject this job later on if you wanted.</p>'\n        );\n    };\n\n    const actionButton = () => {\n        let a = '';\n        if (status === 'Pending') {\n            a = (\n                <>\n                    <button\n                        className=\"btn btn-primary button\"\n                        onClick={approveJob}\n                    >\n                        Approve\n                    </button>\n                    <button\n                        className=\"btn btn-primary button button1\"\n                        onClick={rejectJob}\n                    >\n                        Reject\n                    </button>\n                </>\n            );\n        } else if (status === 'Approve') {\n            a = (\n                <button\n                    className=\"btn btn-primary button button\"\n                    onClick={rejectJob}\n                >\n                    Reject\n                </button>\n            );\n        } else if (status === 'Reject') {\n            a = (\n                <>\n                    <button\n                        className=\"btn btn-primary button\"\n                        onClick={reapproveJob}\n                    >\n                        Reapprove\n                    </button>\n                    <button\n                        className=\"btn btn-primary button button1\"\n                        onClick={deleteJob}\n                    >\n                        Delete\n                    </button>\n                </>\n            );\n        }\n        return a;\n    };\n\n    useEffect(() => {\n        if (isShow) {\n            handleShow();\n        }\n\n        if (details !== null) {\n            setData(details);\n        }\n    }, [details, isShow]);\n\n    return (\n        <Modal\n            show={show}\n            onHide={handleClose}\n            backdrop=\"static\"\n            keyboard={false}\n            size=\"xl\"\n            id=\"seeDetails\"\n        >\n            <Modal.Body>\n                <ModalActionJob\n                    isShow={showModalAction}\n                    id={_id}\n                    msg={msg}\n                    action={action}\n                    isHide={() => {\n                        handleClose();\n                        loadJob();\n                    }}\n                    hideModal={() => setShowModalAction(false)}\n                />\n                <button className=\"close\" onClick={handleClose}>\n                    <span aria-hidden=\"true\">×</span>\n                    <span className=\"sr-only\">Close</span>\n                </button>\n                <div className=\"container-fluid\">\n                    <div className=\"row pb-5\">\n                        <div className=\"col-lg-9\">\n                            <div className=\"mb-3\">\n                                <h3 className=\"title\">{title}</h3>\n                                <p>{company}</p>\n                            </div>\n                            <div className=\"d-flex justify-content-between mb-3\">\n                                <div>\n                                    <p>{country}</p>\n                                </div>\n                                <div>\n                                    <p>${expectedSalary}/hrs</p>\n                                    <p>{availability}</p>\n                                </div>\n                            </div>\n                            <div className=\"line-break\" />\n                            <div>\n                                <p>Specialty</p>\n                                <p>{specialty.join(', ')}</p>\n                            </div>\n                            <div className=\"line-break\" />\n                            <div>\n                                <p>Software Use</p>\n                                <p>{software.join(', ')}</p>\n                            </div>\n                            <div className=\"line-break\" />\n                        </div>\n                        <div className=\"col-lg-3\">{actionButton()}</div>\n                        <div className=\"row\">\n                            <div className=\"col-lg-12\">\n                                <p>About this Job</p>\n                                <p>Job Description</p>\n                                <p>{about}</p>\n                            </div>\n                            <div className=\"col-lg-12\">\n                                <p>Roles</p>\n                                <ul>\n                                    {roles.map((e, i) => (\n                                        <li key={i}>{e}</li>\n                                    ))}\n                                </ul>\n                            </div>\n                            <div className=\"col-lg-12\">\n                                <p>Key Responsibilities</p>\n                                <ul>\n                                    {keyResponsibilities.map((e, i) => (\n                                        <li key={i}>{e}</li>\n                                    ))}\n                                </ul>\n                            </div>\n                            <div className=\"col-lg-12\">\n                                <p>Responsibilities</p>\n                                <ul>\n                                    {responsibilities.map((e, i) => (\n                                        <li key={i}>{e}</li>\n                                    ))}\n                                </ul>\n                            </div>\n                            <div className=\"col-lg-12\">\n                                <p>Remote Staff Expectation</p>\n                                <p>{remoteStaffExpectation}</p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </Modal.Body>\n        </Modal>\n    );\n};\n\nViewDetails.propTypes = {\n    setAlert: PropTypes.func.isRequired,\n    jobState: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n    jobState: state.jobState,\n});\n\nexport default connect(mapStateToProps, { setAlert })(ViewDetails);\n","import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport { useHistory } from 'react-router-dom';\n\n// Actions\nimport {\n    newJobs,\n    viewDetails,\n    clearDetails,\n} from '../../state/actions/jobAction';\nimport { addFilter, removeFilter } from '../../state/actions/filterAction';\n\n// Components\nimport ViewDetails from './ViewDetails';\nimport PaginationLink from './PaginationLink';\n\nconst NewJobs = ({\n    newJobs,\n    viewDetails,\n    clearDetails,\n    addFilter,\n    removeFilter,\n    jobState: { jobs },\n    filterState: { filter },\n}) => {\n    const queryParams = new URLSearchParams(window.location.search);\n    const newUrl = new URL(window.location.href);\n\n    const history = useHistory();\n\n    const [seeDetails, setSeeDetails] = useState(false);\n    const [params, setParams] = useState({\n        search: '',\n        viewBy: '10',\n    });\n\n    const onChange = (e) => {\n        const { name, value } = e.target;\n\n        if (value === '') {\n            newUrl.searchParams.delete(name);\n        } else {\n            newUrl.searchParams.set(name, value);\n        }\n\n        setParams({ ...params, [name]: value });\n\n        if (name === 'limit') {\n            addFilter({ [name]: parseInt(value) });\n        } else {\n            addFilter({ [name]: value });\n        }\n\n        if (queryParams.get('page')) {\n            newUrl.searchParams.set('page', 1);\n        }\n\n        history.push({\n            pathname: newUrl.pathname,\n            search: newUrl.search,\n        });\n    };\n\n    useEffect(() => {\n        if (queryParams.get('search') !== null) {\n            if (params.search === '') {\n                addFilter({ search: queryParams.get('search') });\n                setParams({ ...params, search: queryParams.get('search') });\n            }\n        } else {\n            if (filter.search) {\n                const { search, ...newFilter } = filter;\n                removeFilter(newFilter);\n            }\n        }\n\n        // eslint-disable-next-line\n    }, [queryParams, params, filter, jobs]);\n\n    return (\n        <div id=\"admin\">\n            <div className=\"header\">\n                <input\n                    type=\"text\"\n                    name=\"search\"\n                    className=\"form-control input\"\n                    placeholder=\"Search for software, specialty or keyword\"\n                    onChange={onChange}\n                    value={params.search}\n                />\n                <label className=\"form-label view-by-label\">View by</label>\n                <select\n                    className=\"form-control input\"\n                    name=\"limit\"\n                    onChange={onChange}\n                    value={parseInt(queryParams.get('limit') || params.viewBy)}\n                >\n                    <option value=\"10\">10</option>\n                    <option value=\"20\">20</option>\n                    <option value=\"50\">50</option>\n                </select>\n            </div>\n            <div id=\"newJobs\">\n                {seeDetails ? (\n                    <ViewDetails\n                        isShow={true}\n                        isHide={() => {\n                            setSeeDetails(false);\n                            clearDetails();\n                        }}\n                        loadJob={() => {\n                            newJobs();\n                            clearDetails();\n                        }}\n                    />\n                ) : null}\n                {jobs !== null\n                    ? jobs.map((e, i) => (\n                          <div className=\"job\" key={i}>\n                              <div className=\"row\">\n                                  <div className=\"col-lg-12\">\n                                      <h4 className=\"title\">{e.title}</h4>\n                                      <p className=\"company\">{e.company}</p>\n                                  </div>\n                              </div>\n                              <div className=\"row\">\n                                  <div className=\"col-lg-3\">\n                                      <p>{e.country}</p>\n                                  </div>\n                                  <div className=\"col-lg-3\">\n                                      {' '}\n                                      <p className=\"expected-salary\">\n                                          {e.expectedSalary} hrs/Week\n                                      </p>\n                                      <p>{e.availability}</p>\n                                  </div>\n                                  <div className=\"col-lg-3\">\n                                      <p className=\"date-submitted\">\n                                          {moment(e.dateCreated).format(\n                                              'MM-DD-YYYY'\n                                          )}\n                                      </p>\n                                      <p>Date Submitted</p>\n                                  </div>\n                                  <div className=\"col-lg-3\">\n                                      <p className=\"time-submitted\">\n                                          {moment(e.dateCreated).format(\n                                              'h:mm a'\n                                          )}\n                                      </p>\n\n                                      <p>Time Submitted</p>\n                                  </div>\n                              </div>\n                              <div className=\"line-break\"></div>\n                              <p>{e.about}</p>\n                              <button\n                                  className=\"link\"\n                                  onClick={() => {\n                                      setSeeDetails(true);\n                                      viewDetails(e._id);\n                                  }}\n                              >\n                                  View Full Details\n                              </button>\n                          </div>\n                      ))\n                    : 'No new job'}\n            </div>\n            <div className=\"footer\">\n                <PaginationLink />\n                <label className=\"form-label view-by-label\">View by</label>\n                <select\n                    className=\"form-control input\"\n                    name=\"limit\"\n                    onChange={onChange}\n                    value={parseInt(queryParams.get('limit') || params.viewBy)}\n                >\n                    <option value=\"10\">10</option>\n                    <option value=\"20\">20</option>\n                    <option value=\"50\">50</option>\n                </select>\n            </div>\n        </div>\n    );\n};\n\nNewJobs.propTypes = {\n    jobState: PropTypes.object.isRequired,\n    filterState: PropTypes.object.isRequired,\n    newJobs: PropTypes.func.isRequired,\n    addFilter: PropTypes.func.isRequired,\n    removeFilter: PropTypes.func.isRequired,\n    viewDetails: PropTypes.func.isRequired,\n    clearDetails: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n    jobState: state.jobState,\n    filterState: state.filterState,\n});\n\nexport default connect(mapStateToProps, {\n    newJobs,\n    addFilter,\n    removeFilter,\n    viewDetails,\n    clearDetails,\n})(NewJobs);\n","import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport { useHistory } from 'react-router-dom';\n\n// Actions\nimport {\n    approvedJobs,\n    viewDetails,\n    clearDetails,\n} from '../../state/actions/jobAction';\nimport { addFilter, removeFilter } from '../../state/actions/filterAction';\n\n// Components\nimport ViewDetails from './ViewDetails';\nimport PaginationLink from './PaginationLink';\n\nconst ApprovedJobs = ({\n    approvedJobs,\n    viewDetails,\n    clearDetails,\n    addFilter,\n    removeFilter,\n    jobState: { jobs },\n    filterState: { filter },\n}) => {\n    const queryParams = new URLSearchParams(window.location.search);\n    const newUrl = new URL(window.location.href);\n\n    const history = useHistory();\n\n    const [seeDetails, setSeeDetails] = useState(false);\n    const [params, setParams] = useState({\n        search: '',\n        viewBy: '10',\n    });\n\n    const onChange = (e) => {\n        const { name, value } = e.target;\n\n        if (value === '') {\n            newUrl.searchParams.delete(name);\n        } else {\n            newUrl.searchParams.set(name, value);\n        }\n\n        setParams({ ...params, [name]: value });\n\n        if (name === 'limit') {\n            addFilter({ [name]: parseInt(value) });\n        } else {\n            addFilter({ [name]: value });\n        }\n\n        if (queryParams.get('page')) {\n            newUrl.searchParams.set('page', 1);\n        }\n\n        history.push({\n            pathname: newUrl.pathname,\n            search: newUrl.search,\n        });\n    };\n\n    useEffect(() => {\n        if (queryParams.get('search') !== null) {\n            if (params.search === '') {\n                addFilter({ search: queryParams.get('search') });\n                setParams({ ...params, search: queryParams.get('search') });\n            }\n        } else {\n            if (filter.search) {\n                const { search, ...newFilter } = filter;\n                removeFilter(newFilter);\n            }\n        }\n\n        // eslint-disable-next-line\n    }, [queryParams, params, filter, jobs]);\n\n    return (\n        <div id=\"admin\">\n            <div className=\"header\">\n                <input\n                    type=\"text\"\n                    name=\"search\"\n                    className=\"form-control input\"\n                    placeholder=\"Search for software, specialty or keyword\"\n                    onChange={onChange}\n                    value={params.search}\n                />\n                <label className=\"form-label view-by-label\">View by</label>\n                <select\n                    className=\"form-control input\"\n                    name=\"limit\"\n                    onChange={onChange}\n                    value={parseInt(queryParams.get('limit') || params.viewBy)}\n                >\n                    <option value=\"10\">10</option>\n                    <option value=\"20\">20</option>\n                    <option value=\"50\">50</option>\n                </select>\n            </div>\n            <div id=\"newJobs\">\n                {seeDetails ? (\n                    <ViewDetails\n                        isShow={true}\n                        isHide={() => {\n                            setSeeDetails(false);\n                            clearDetails();\n                        }}\n                        loadJob={() => {\n                            approvedJobs();\n                            clearDetails();\n                        }}\n                    />\n                ) : null}\n                {jobs !== null\n                    ? jobs.map((e, i) => (\n                          <div className=\"job\" key={i}>\n                              <div className=\"row\">\n                                  <div className=\"col-lg-12\">\n                                      <h4 className=\"title\">{e.title}</h4>\n                                      <p className=\"company\">{e.company}</p>\n                                  </div>\n                              </div>\n                              <div className=\"row\">\n                                  <div className=\"col-lg-3\">\n                                      <p>{e.country}</p>\n                                  </div>\n                                  <div className=\"col-lg-3\">\n                                      {' '}\n                                      <p className=\"expected-salary\">\n                                          {e.expectedSalary} hrs/Week\n                                      </p>\n                                      <p>{e.availability}</p>\n                                  </div>\n                                  <div className=\"col-lg-3\">\n                                      <p className=\"date-submitted\">\n                                          {moment(e.dateCreated).format(\n                                              'MM-DD-YYYY'\n                                          )}\n                                      </p>\n                                      <p>Date Submitted</p>\n                                  </div>\n                                  <div className=\"col-lg-3\">\n                                      <p className=\"time-submitted\">\n                                          {moment(e.dateCreated).format(\n                                              'h:mm a'\n                                          )}\n                                      </p>\n\n                                      <p>Time Submitted</p>\n                                  </div>\n                              </div>\n                              <div className=\"line-break\"></div>\n                              <p>{e.about}</p>\n                              <button\n                                  className=\"link\"\n                                  onClick={() => {\n                                      setSeeDetails(true);\n                                      viewDetails(e._id);\n                                  }}\n                              >\n                                  View Full Details\n                              </button>\n                          </div>\n                      ))\n                    : 'No new job'}\n            </div>\n            <div className=\"footer\">\n                <PaginationLink />\n                <label className=\"form-label view-by-label\">View by</label>\n                <select\n                    className=\"form-control input\"\n                    name=\"limit\"\n                    onChange={onChange}\n                    value={parseInt(queryParams.get('limit') || params.viewBy)}\n                >\n                    <option value=\"10\">10</option>\n                    <option value=\"20\">20</option>\n                    <option value=\"50\">50</option>\n                </select>\n            </div>\n        </div>\n    );\n};\n\nApprovedJobs.propTypes = {\n    jobState: PropTypes.object.isRequired,\n    filterState: PropTypes.object.isRequired,\n    approvedJobs: PropTypes.func.isRequired,\n    addFilter: PropTypes.func.isRequired,\n    removeFilter: PropTypes.func.isRequired,\n    viewDetails: PropTypes.func.isRequired,\n    clearDetails: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n    jobState: state.jobState,\n    filterState: state.filterState,\n});\n\nexport default connect(mapStateToProps, {\n    approvedJobs,\n    addFilter,\n    removeFilter,\n    viewDetails,\n    clearDetails,\n})(ApprovedJobs);\n","import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport { useHistory } from 'react-router-dom';\n\n// Actions\nimport {\n    rejectedJobs,\n    viewDetails,\n    clearDetails,\n} from '../../state/actions/jobAction';\nimport { addFilter, removeFilter } from '../../state/actions/filterAction';\n\n// Components\nimport ViewDetails from './ViewDetails';\nimport PaginationLink from './PaginationLink';\n\nconst RejectedJobs = ({\n    rejectedJobs,\n    viewDetails,\n    clearDetails,\n    addFilter,\n    removeFilter,\n    jobState: { jobs },\n    filterState: { filter },\n}) => {\n    const queryParams = new URLSearchParams(window.location.search);\n    const newUrl = new URL(window.location.href);\n\n    const history = useHistory();\n\n    const [seeDetails, setSeeDetails] = useState(false);\n    const [params, setParams] = useState({\n        search: '',\n        viewBy: '10',\n    });\n\n    const onChange = (e) => {\n        const { name, value } = e.target;\n\n        if (value === '') {\n            newUrl.searchParams.delete(name);\n        } else {\n            newUrl.searchParams.set(name, value);\n        }\n\n        setParams({ ...params, [name]: value });\n\n        if (name === 'limit') {\n            addFilter({ [name]: parseInt(value) });\n        } else {\n            addFilter({ [name]: value });\n        }\n\n        if (queryParams.get('page')) {\n            newUrl.searchParams.set('page', 1);\n        }\n\n        history.push({\n            pathname: newUrl.pathname,\n            search: newUrl.search,\n        });\n    };\n\n    useEffect(() => {\n        if (queryParams.get('search') !== null) {\n            if (params.search === '') {\n                addFilter({ search: queryParams.get('search') });\n                setParams({ ...params, search: queryParams.get('search') });\n            }\n        } else {\n            if (filter.search) {\n                const { search, ...newFilter } = filter;\n                removeFilter(newFilter);\n            }\n        }\n\n        // eslint-disable-next-line\n    }, [queryParams, params, filter, jobs]);\n\n    return (\n        <div id=\"admin\">\n            <div className=\"header\">\n                <input\n                    type=\"text\"\n                    name=\"search\"\n                    className=\"form-control input\"\n                    placeholder=\"Search for software, specialty or keyword\"\n                    onChange={onChange}\n                    value={params.search}\n                />\n                <label className=\"form-label view-by-label\">View by</label>\n                <select\n                    className=\"form-control input\"\n                    name=\"limit\"\n                    onChange={onChange}\n                    value={parseInt(queryParams.get('limit') || params.viewBy)}\n                >\n                    <option value=\"10\">10</option>\n                    <option value=\"20\">20</option>\n                    <option value=\"50\">50</option>\n                </select>\n            </div>\n            <div id=\"newJobs\">\n                {seeDetails ? (\n                    <ViewDetails\n                        isShow={true}\n                        isHide={() => {\n                            setSeeDetails(false);\n                            clearDetails();\n                        }}\n                        loadJob={() => {\n                            rejectedJobs();\n                            clearDetails();\n                        }}\n                    />\n                ) : null}\n                {jobs !== null\n                    ? jobs.map((e, i) => (\n                          <div className=\"job\" key={i}>\n                              <div className=\"row\">\n                                  <div className=\"col-lg-12\">\n                                      <h4 className=\"title\">{e.title}</h4>\n                                      <p className=\"company\">{e.company}</p>\n                                  </div>\n                              </div>\n                              <div className=\"row\">\n                                  <div className=\"col-lg-3\">\n                                      <p>{e.country}</p>\n                                  </div>\n                                  <div className=\"col-lg-3\">\n                                      {' '}\n                                      <p className=\"expected-salary\">\n                                          {e.expectedSalary} hrs/Week\n                                      </p>\n                                      <p>{e.availability}</p>\n                                  </div>\n                                  <div className=\"col-lg-3\">\n                                      <p className=\"date-submitted\">\n                                          {moment(e.dateCreated).format(\n                                              'MM-DD-YYYY'\n                                          )}\n                                      </p>\n                                      <p>Date Submitted</p>\n                                  </div>\n                                  <div className=\"col-lg-3\">\n                                      <p className=\"time-submitted\">\n                                          {moment(e.dateCreated).format(\n                                              'h:mm a'\n                                          )}\n                                      </p>\n\n                                      <p>Time Submitted</p>\n                                  </div>\n                              </div>\n                              <div className=\"line-break\"></div>\n                              <p>{e.about}</p>\n                              <button\n                                  className=\"link\"\n                                  onClick={() => {\n                                      setSeeDetails(true);\n                                      viewDetails(e._id);\n                                  }}\n                              >\n                                  View Full Details\n                              </button>\n                          </div>\n                      ))\n                    : 'No new job'}\n            </div>\n            <div className=\"footer\">\n                <PaginationLink />\n                <label className=\"form-label view-by-label\">View by</label>\n                <select\n                    className=\"form-control input\"\n                    name=\"limit\"\n                    onChange={onChange}\n                    value={parseInt(queryParams.get('limit') || params.viewBy)}\n                >\n                    <option value=\"10\">10</option>\n                    <option value=\"20\">20</option>\n                    <option value=\"50\">50</option>\n                </select>\n            </div>\n        </div>\n    );\n};\n\nRejectedJobs.propTypes = {\n    jobState: PropTypes.object.isRequired,\n    filterState: PropTypes.object.isRequired,\n    rejectedJobs: PropTypes.func.isRequired,\n    addFilter: PropTypes.func.isRequired,\n    removeFilter: PropTypes.func.isRequired,\n    viewDetails: PropTypes.func.isRequired,\n    clearDetails: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n    jobState: state.jobState,\n    filterState: state.filterState,\n});\n\nexport default connect(mapStateToProps, {\n    rejectedJobs,\n    addFilter,\n    removeFilter,\n    viewDetails,\n    clearDetails,\n})(RejectedJobs);\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router';\nimport { Link, useLocation } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\n// Actions\nimport { getUserInfo } from './../state/actions/userAction';\nimport {\n    approvedApplicants,\n    newApplicants,\n    rejectedApplicants,\n} from './../state/actions/candidateAction';\nimport {\n    newJobs,\n    approvedJobs,\n    rejectedJobs,\n} from './../state/actions/jobAction';\n\n// Components\nimport Filter from './Dashboard/Filter';\nimport NewApplicants from './Dashboard/NewApplicants';\nimport ApprovedApplicants from './Dashboard/ApprovedApplicants';\nimport RejectedApplicants from './Dashboard/RejectedApplicants';\nimport NewJobs from './Dashboard/NewJobs';\nimport ApprovedJobs from './Dashboard/ApprovedJobs';\nimport RejectedJobs from './Dashboard/RejectedJobs';\n\nconst Dashboard = ({\n    getUserInfo,\n    newApplicants,\n    approvedApplicants,\n    rejectedApplicants,\n    newJobs,\n    approvedJobs,\n    rejectedJobs,\n    userState: { user, info },\n    filterState: { filter },\n}) => {\n    const { menu } = useParams();\n    const location = useLocation();\n    const initialPersonalInfo = {\n        firstName: '',\n        lastName: '',\n    };\n    const [personalInfo, setPersonalInfo] = useState(initialPersonalInfo);\n    const [load, setLoad] = useState(true);\n    const [isAdmin, setIsAdmin] = useState(false);\n\n    const { firstName, lastName } = personalInfo;\n\n    useEffect(() => {\n        if (load) {\n            getUserInfo();\n            setLoad(false);\n        }\n\n        if (user && user.type === 'Admin') {\n            setIsAdmin(true);\n        }\n\n        if (\n            info !== null &&\n            JSON.stringify(personalInfo) === JSON.stringify(initialPersonalInfo)\n        ) {\n            setPersonalInfo(info);\n        }\n\n        if (menu === 'new-applicants') {\n            newApplicants();\n        }\n\n        if (menu === 'approved-applicants') {\n            approvedApplicants();\n        }\n\n        if (menu === 'rejected-applicants') {\n            rejectedApplicants();\n        }\n\n        if (menu === 'new-jobs') {\n            newJobs();\n        }\n\n        if (menu === 'approved-jobs') {\n            approvedJobs();\n        }\n\n        if (menu === 'rejected-jobs') {\n            rejectedJobs();\n        }\n\n        // eslint-disable-next-line\n    }, [load, info, personalInfo, user, menu, filter, location]);\n    return (\n        <div id=\"dashboard\">\n            <div className=\"container-fluid\">\n                <div className=\"header\">\n                    <h2 className=\"title\">\n                        Welcome,{' '}\n                        <span>\n                            {firstName} {lastName}\n                        </span>\n                    </h2>\n                    <div className=\"line-break\" />\n                </div>\n                <div className=\"row\">\n                    <nav className=\"d-none d-sm-block col-sm-2 sidebar\">\n                        <div className=\"remote-worker\">\n                            <h5 className=\"title\">Remote Worker</h5>\n                            <ul className=\"nav flex-column\">\n                                <li\n                                    className={`nav-item sidebar-item${\n                                        menu === 'new-applicants'\n                                            ? ' active'\n                                            : ''\n                                    }`}\n                                >\n                                    <Link\n                                        to=\"/dashboard/new-applicants\"\n                                        className=\"nav-link\"\n                                    >\n                                        New Applicants{' '}\n                                        <i\n                                            className={`fas fa-${\n                                                menu === 'new-applicants'\n                                                    ? 'minus'\n                                                    : 'plus'\n                                            } float-right pt-1`}\n                                        ></i>\n                                    </Link>\n                                    {menu === 'new-applicants' ? (\n                                        <Filter loadData={newApplicants} />\n                                    ) : null}\n                                </li>\n                                <li\n                                    className={`nav-item sidebar-item${\n                                        menu === 'approved-applicants'\n                                            ? ' active'\n                                            : ''\n                                    }`}\n                                >\n                                    <Link\n                                        to=\"/dashboard/approved-applicants\"\n                                        className=\"nav-link\"\n                                    >\n                                        Approved Applicants{' '}\n                                        <i\n                                            className={`fas fa-${\n                                                menu === 'approved-applicants'\n                                                    ? 'minus'\n                                                    : 'plus'\n                                            } float-right pt-1`}\n                                        ></i>\n                                    </Link>\n                                    {menu === 'approved-applicants' ? (\n                                        <Filter loadData={approvedApplicants} />\n                                    ) : null}\n                                </li>\n                                <li\n                                    className={`nav-item sidebar-item${\n                                        menu === 'rejected-applicants'\n                                            ? ' active'\n                                            : ''\n                                    }`}\n                                >\n                                    <Link\n                                        to=\"/dashboard/rejected-applicants\"\n                                        className=\"nav-link\"\n                                    >\n                                        Rejected Appplicants{' '}\n                                        <i\n                                            className={`fas fa-${\n                                                menu === 'rejected-applicants'\n                                                    ? 'minus'\n                                                    : 'plus'\n                                            } float-right pt-1`}\n                                        ></i>\n                                    </Link>\n                                    {menu === 'rejected-applicants' ? (\n                                        <Filter loadData={rejectedApplicants} />\n                                    ) : null}\n                                </li>\n                            </ul>\n                        </div>\n                        <div className=\"employer\">\n                            <h5 className=\"title\">Employer</h5>\n                            <ul className=\"nav flex-column\">\n                                <li\n                                    className={`nav-item sidebar-item${\n                                        menu === 'new-jobs' ? ' active' : ''\n                                    }`}\n                                >\n                                    <Link\n                                        to=\"/dashboard/new-jobs\"\n                                        className=\"nav-link\"\n                                    >\n                                        New Job Request\n                                    </Link>\n                                </li>\n                                <li\n                                    className={`nav-item sidebar-item${\n                                        menu === 'approved-jobs'\n                                            ? ' active'\n                                            : ''\n                                    }`}\n                                >\n                                    <Link\n                                        to=\"/dashboard/approved-jobs\"\n                                        className=\"nav-link\"\n                                    >\n                                        Approved Job Request\n                                    </Link>\n                                </li>\n                                <li\n                                    className={`nav-item sidebar-item${\n                                        menu === 'rejected-jobs'\n                                            ? ' active'\n                                            : ''\n                                    }`}\n                                >\n                                    <Link\n                                        to=\"/dashboard/rejected-jobs\"\n                                        className=\"nav-link\"\n                                    >\n                                        Rejected Job Request\n                                    </Link>\n                                </li>\n                            </ul>\n                        </div>\n                        {isAdmin && (\n                            <div className=\"settings\">\n                                <h5 className=\"title\">Settings</h5>\n                                <ul className=\"nav flex-column\">\n                                    <li\n                                        className={`nav-item sidebar-item${\n                                            menu === 'roles-permissions'\n                                                ? ' active'\n                                                : ''\n                                        }`}\n                                    >\n                                        <Link\n                                            to=\"/dashboard/roles-permissions\"\n                                            className=\"nav-link\"\n                                        >\n                                            Roles & Permissions\n                                        </Link>\n                                    </li>\n                                </ul>\n                            </div>\n                        )}\n                    </nav>\n                    <main className=\"col-sm-10 main\">\n                        {menu === 'new-applicants' && <NewApplicants />}\n                        {menu === 'approved-applicants' && (\n                            <ApprovedApplicants />\n                        )}\n                        {menu === 'rejected-applicants' && (\n                            <RejectedApplicants />\n                        )}\n                        {menu === 'new-jobs' && <NewJobs />}\n                        {menu === 'approved-jobs' && <ApprovedJobs />}\n                        {menu === 'rejected-jobs' && <RejectedJobs />}\n                    </main>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nDashboard.propTypes = {\n    getUserInfo: PropTypes.func.isRequired,\n    userState: PropTypes.object.isRequired,\n    newApplicants: PropTypes.func.isRequired,\n    approvedApplicants: PropTypes.func.isRequired,\n    rejectedApplicants: PropTypes.func.isRequired,\n    filterState: PropTypes.object.isRequired,\n    newJobs: PropTypes.func.isRequired,\n    approvedJobs: PropTypes.func.isRequired,\n    rejectedJobs: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n    userState: state.userState,\n    filterState: state.filterState,\n});\n\nexport default connect(mapStateToProps, {\n    getUserInfo,\n    newApplicants,\n    approvedApplicants,\n    rejectedApplicants,\n    newJobs,\n    approvedJobs,\n    rejectedJobs,\n})(Dashboard);\n","import React, { useEffect, useState } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\n// Actions\nimport { setAlert } from './../state/actions/alertAction';\nimport { loginUser, clearError } from './../state/actions/userAction';\n\nconst Login = ({\n    setAlert,\n    loginUser,\n    clearError,\n    userState: { user, error },\n}) => {\n    const history = useHistory();\n\n    const initialInfo = {\n        email: '',\n        password: '',\n    };\n\n    const [info, setInfo] = useState(initialInfo);\n    const [stayLogged, setStayLogged] = useState(false);\n\n    const { email, password } = info;\n\n    const checkStay = (e) => {\n        setStayLogged(!stayLogged);\n        localStorage.setItem('stayLogged', !stayLogged);\n    };\n\n    const onChange = (e) => {\n        const { name, value } = e.target;\n        setInfo({ ...info, [name]: value });\n    };\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n\n        if (email === '' || password === '') {\n            return setAlert(\n                '',\n                'Please fill-in the required boxes to Proceed.'\n            );\n        } else {\n            loginUser({ email, password });\n        }\n    };\n\n    useEffect(() => {\n        if (error) {\n            setAlert('', error.msg);\n            clearError();\n        }\n\n        if (user) {\n            if (user.type === 'Admin') {\n                history.push('/dashboard');\n            } else if (user.type === 'Employer') {\n                history.push('/draft-job');\n            }\n        }\n\n        // eslint-disable-next-line\n    }, [error, user]);\n\n    return (\n        <div id=\"login\">\n            <div className=\"container\">\n                <div className=\"header\">\n                    <h2 className=\"title\">Login</h2>\n                    <div className=\"line-break\" />\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-sm-6 offset-sm-3\">\n                        <form className=\"form\" onSubmit={onSubmit}>\n                            <div className=\"form-group\">\n                                <div className=\"form-row\">\n                                    <div className=\"col-lg-3\">\n                                        <label className=\"form-label\">\n                                            Email\n                                        </label>\n                                    </div>\n                                    <div className=\"col-lg-9\">\n                                        <input\n                                            type=\"email\"\n                                            name=\"email\"\n                                            className=\"form-control input\"\n                                            onChange={onChange}\n                                            value={email}\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"form-group\">\n                                <div className=\"form-row\">\n                                    <div className=\"col-lg-3\">\n                                        <label className=\"form-label\">\n                                            Password\n                                        </label>\n                                    </div>\n                                    <div className=\"col-lg-9\">\n                                        <input\n                                            type=\"password\"\n                                            name=\"password\"\n                                            className=\"form-control input\"\n                                            onChange={onChange}\n                                            value={password}\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"form-group\">\n                                <div className=\"form-row\">\n                                    <div className=\"col-lg-9 offset-lg-3\">\n                                        <input\n                                            type=\"submit\"\n                                            value=\"Log In\"\n                                            className=\"btn btn-primary btn-block button\"\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"form-group\">\n                                <div className=\"form-row\">\n                                    <div className=\"col-lg-9 offset-lg-3\">\n                                        <div className=\"form-inline\">\n                                            <div className=\"form-check\">\n                                                <input\n                                                    className=\"form-check-input mb-auto\"\n                                                    onChange={checkStay}\n                                                    type=\"checkbox\"\n                                                    id=\"stayLoggedInInput\"\n                                                />\n                                                <label\n                                                    className=\"form-check-label form-label mt-0\"\n                                                    htmlFor=\"stayLoggedInInput\"\n                                                >\n                                                    Stay logged in\n                                                </label>\n                                            </div>\n                                            <Link\n                                                to=\"/forget-password\"\n                                                className=\"ml-auto link\"\n                                            >\n                                                Forget password?\n                                            </Link>\n                                        </div>\n                                    </div>\n                                    <div className=\"col-lg-9 offset-lg-3\">\n                                        {/* <div className=\"or\">or</div>\n                                        <div className=\"other-login\">\n                                            <a\n                                                href=\"https://google.com\"\n                                                className=\"btn button btn-block\"\n                                            >\n                                                <i className=\"fab fa-google\"></i>{' '}\n                                                Continue with Google\n                                            </a>\n                                            <a\n                                                href=\"https://google.com\"\n                                                className=\"btn button btn-block\"\n                                            >\n                                                <i className=\"fab fa-facebook\"></i>{' '}\n                                                Continue with Facebook\n                                            </a>\n                                            <a\n                                                href=\"https://google.com\"\n                                                className=\"btn button btn-block\"\n                                            >\n                                                <i className=\"fab fa-linkedin\"></i>{' '}\n                                                Continue with LinkedIn\n                                            </a>\n                                        </div> */}\n                                        <div className=\"form-inline\">\n                                            <span\n                                                style={{\n                                                    color: '#0c3961',\n                                                    fontWeight: 500,\n                                                }}\n                                            >\n                                                Not registered?\n                                            </span>\n                                            <button className=\"link ml-auto\">\n                                                Sign Up Now\n                                            </button>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nLogin.propTypes = {\n    setAlert: PropTypes.func.isRequired,\n    loginUser: PropTypes.func.isRequired,\n    clearError: PropTypes.func.isRequired,\n    userState: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n    userState: state.userState,\n});\n\nexport default connect(mapStateToProps, { setAlert, loginUser, clearError })(\n    Login\n);\n","import { useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\n// Actions\nimport { loadUser } from './../state/actions/userAction';\n\nconst LoadUser = ({ loadUser }) => {\n    const { pathname, search } = useLocation();\n\n    useEffect(() => {\n        if (localStorage.token) {\n            loadUser();\n        }\n\n        // eslint-disable-next-line\n    }, [pathname, search]);\n\n    return null;\n};\n\nLoadUser.propTypes = {\n    loadUser: PropTypes.func.isRequired,\n};\n\nexport default connect(null, { loadUser })(LoadUser);\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\nconst PrivateRoute = ({ component: Component, ...rest }) => {\n    return (\n        <Route\n            {...rest}\n            render={(props) =>\n                localStorage.token ? (\n                    <Component {...props} />\n                ) : (\n                    <Redirect to=\"/login\" />\n                )\n            }\n        />\n    );\n};\n\nexport default PrivateRoute;\n","import React, { useEffect, useState } from 'react';\nimport { Redirect, Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nconst VerifyDashboard = ({ userState: { user } }) => {\n    const [load, setLoad] = useState(true);\n    const [link, setLink] = useState(null);\n    useEffect(() => {\n        if (load) {\n            setLoad(false);\n        }\n\n        if (user) {\n            if (user.type === 'Admin') {\n                setLink('/dashboard/new-applicants');\n            }\n        }\n\n        // eslint-disable-next-line\n    }, [load, user]);\n\n    return <Route render={() => link && <Redirect to={link} />} />;\n};\n\nVerifyDashboard.propTypes = {\n    userState: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n    userState: state.userState,\n});\n\nexport default connect(mapStateToProps)(VerifyDashboard);\n","import React from 'react';\nimport { Redirect, Route } from 'react-router-dom';\n\nconst VerifyViewCandidates = () => {\n    return (\n        <Route\n            render={() => (\n                <Redirect to=\"/view-candidates/top-verified-candidates\" />\n            )}\n        />\n    );\n};\n\nexport default VerifyViewCandidates;\n","import React from 'react';\nimport { Route, Redirect, useLocation } from 'react-router-dom';\nimport queryString from 'query-string';\n\nconst DraftJobRoute = ({ component: Component }) => {\n    const { search } = useLocation();\n    const { step } = queryString.parse(search);\n\n    return (\n        <Route\n            render={(props) =>\n                step === undefined || step > 6 ? (\n                    <Redirect to=\"/draft-job?step=1\" />\n                ) : (\n                    <Component {...props} />\n                )\n            }\n        />\n    );\n};\n\nexport default DraftJobRoute;\n","import React from 'react';\n\nconst SpecialtyItem = ({ index, value, select }) => {\n\tconst selectItem = () => {\n\t\tselect(index);\n\t};\n\n\treturn (\n\t\t<li className='nav-item' onClick={selectItem}>\n\t\t\t{value}\n\t\t</li>\n\t);\n};\n\nexport default SpecialtyItem;\n","import React from 'react';\n\nconst Specialty = ({ value, index, onSpecialtyClose }) => {\n\tconst onClose = () => {\n\t\tonSpecialtyClose(index);\n\t};\n\n\treturn (\n\t\t<span className='item'>\n\t\t\t{value}\n\t\t\t<span className='close' onClick={onClose}>\n\t\t\t\tx\n\t\t\t</span>\n\t\t</span>\n\t);\n};\n\nexport default Specialty;\n","import React from 'react';\n\nconst Software = ({ value, index, onSoftwareClose }) => {\n\tconst onClose = () => {\n\t\tonSoftwareClose(index);\n\t};\n\n\treturn (\n\t\t<span className='item'>\n\t\t\t{value}\n\t\t\t<span className='close' onClick={onClose}>\n\t\t\t\tx\n\t\t\t</span>\n\t\t</span>\n\t);\n};\n\nexport default Software;\n","import React, { useState, useRef, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\n// Components\nimport { specialtyList } from './../../list/Specialty';\nimport { softwareList } from './../../list/Software';\nimport SpecialtyItem from './SpecialtyItem';\nimport SoftwareItem from './SpecialtyItem';\nimport Specialty from './Specialty';\nimport Software from './Software';\n\n// Utils\nimport useUnsavedChangesWarning from './../../utils/useUnsavedChangesWarning';\n\n// Actions\nimport { setAlert } from './../../state/actions/alertAction';\nimport { addJob, setStep } from './../../state/actions/jobAction';\n\nconst Step1 = ({ setAlert, addJob, setStep }) => {\n    const history = useHistory();\n    const [\n        Prompt,\n        setDirty,\n        setPristine,\n        setMessage,\n    ] = useUnsavedChangesWarning();\n    const initialInfo = {\n        title: '',\n    };\n    const [info, setInfo] = useState(initialInfo);\n    const [specialty, setSpecialty] = useState([]);\n    const [software, setSoftware] = useState([]);\n    const [submit, setSubmit] = useState(false);\n    const otherSpecialtyRef = useRef(null);\n    const otherSoftwareRef = useRef(null);\n    const generateSpecialty = () => {\n        let key = 0;\n        let list = [];\n        const perItem = Math.round(specialtyList().length / 2);\n        for (let x = 0; x < 2; x++) {\n            let item = [];\n            for (let y = 0; y < perItem; y++) {\n                item.push(\n                    <SpecialtyItem\n                        key={key}\n                        index={key}\n                        value={specialtyList()[key]}\n                        select={onSelectSpecialty}\n                    />\n                );\n                key++;\n            }\n            list.push(\n                <div className=\"col-lg-6 col-md-6 col-sm-6\" key={x}>\n                    <ul className=\"nav flex-column\">{item}</ul>\n                </div>\n            );\n        }\n        return list;\n    };\n    const generateSoftware = () => {\n        let key = 0;\n        let list = [];\n        const perItem = Math.round(softwareList().length / 2);\n        for (let x = 0; x < 2; x++) {\n            let item = [];\n            for (let y = 0; y < perItem; y++) {\n                item.push(\n                    <SoftwareItem\n                        key={key}\n                        index={key}\n                        value={softwareList()[key]}\n                        select={onSelectSoftware}\n                    />\n                );\n                key++;\n            }\n            list.push(\n                <div className=\"col-lg-6 col-md-6 col-sm-6\" key={x}>\n                    <ul className=\"nav flex-column\">{item}</ul>\n                </div>\n            );\n        }\n        return list;\n    };\n    const onSelectSpecialty = (e) => {\n        if (specialty.includes(specialtyList()[e])) {\n            setSpecialty((specialty) => [\n                ...specialty.filter(\n                    (x) =>\n                        specialty.indexOf(x) !==\n                        specialty.indexOf(specialtyList()[e])\n                ),\n            ]);\n            Array.from(document.querySelectorAll('.specialty .list .nav-item'))\n                .find((el) => el.textContent === specialtyList()[e])\n                .classList.remove('active');\n        } else {\n            setSpecialty((specialty) => [...specialty, specialtyList()[e]]);\n            Array.from(document.querySelectorAll('.specialty .list .nav-item'))\n                .find((el) => el.textContent === specialtyList()[e])\n                .classList.add('active');\n        }\n        setDirty();\n        setMessage('Are you sure you want to leave this page?');\n    };\n    const onSelectSoftware = (e) => {\n        if (software.includes(softwareList()[e])) {\n            setSoftware((software) => [\n                ...software.filter(\n                    (x) =>\n                        software.indexOf(x) !==\n                        software.indexOf(softwareList()[e])\n                ),\n            ]);\n            Array.from(document.querySelectorAll('.software .list .nav-item'))\n                .find((el) => el.textContent === softwareList()[e])\n                .classList.remove('active');\n        } else {\n            setSoftware((software) => [...software, softwareList()[e]]);\n            Array.from(document.querySelectorAll('.software .list .nav-item'))\n                .find((el) => el.textContent === softwareList()[e])\n                .classList.add('active');\n        }\n        setDirty();\n        setMessage('Are you sure you want to leave this page?');\n    };\n    const onSpecialtyClose = (e) => {\n        const item = specialty[e];\n        if (specialtyList().includes(item)) {\n            Array.from(document.querySelectorAll('.specialty .list .nav-item'))\n                .find((el) => el.textContent === item)\n                .classList.remove('active');\n        }\n        setSpecialty((specialty) => [\n            ...specialty.filter((x) => specialty.indexOf(x) !== e),\n        ]);\n    };\n    const onSoftwareClose = (e) => {\n        const item = software[e];\n        if (softwareList().includes(item)) {\n            Array.from(document.querySelectorAll('.software .list .nav-item'))\n                .find((el) => el.textContent === item)\n                .classList.remove('active');\n        }\n        setSoftware((software) => [\n            ...software.filter((x) => software.indexOf(x) !== e),\n        ]);\n    };\n    const onkeyPressOtherSpecialty = (e) => {\n        if (e.key === 'Enter') {\n            if (otherSpecialtyRef.current.value === '') {\n                setAlert('', 'Please fill-in the required boxes to Proceed.');\n            } else {\n                const lowerSpecialty = specialtyList().map((el) =>\n                    el.toLowerCase()\n                );\n                const lowerOther = otherSpecialtyRef.current.value;\n                if (lowerSpecialty.includes(lowerOther.toLowerCase())) {\n                    const index = lowerSpecialty.indexOf(\n                        lowerOther.toLowerCase()\n                    );\n                    setSpecialty((specialty) => [\n                        ...specialty,\n                        specialtyList()[index],\n                    ]);\n                    Array.from(\n                        document.querySelectorAll('.specialty .list .nav-item')\n                    )\n                        .find((el) => el.textContent === specialtyList()[index])\n                        .classList.add('active');\n                } else {\n                    setSpecialty((specialty) => [...specialty, lowerOther]);\n                }\n                otherSpecialtyRef.current.value = '';\n            }\n            setDirty();\n            setMessage('Are you sure you want to leave this page?');\n            e.preventDefault();\n        }\n    };\n    const onkeyPressOtherSoftware = (e) => {\n        if (e.key === 'Enter') {\n            if (otherSoftwareRef.current.value === '') {\n                setAlert('', 'Please fill-in the required boxes to Proceed.');\n            } else {\n                const lowerSoftware = softwareList().map((el) =>\n                    el.toLowerCase()\n                );\n                const lowerOther = otherSoftwareRef.current.value;\n                if (lowerSoftware.includes(lowerOther.toLowerCase())) {\n                    const index = lowerSoftware.indexOf(\n                        lowerOther.toLowerCase()\n                    );\n                    setSoftware((software) => [\n                        ...software,\n                        softwareList()[index],\n                    ]);\n                    Array.from(\n                        document.querySelectorAll('.software .list .nav-item')\n                    )\n                        .find((el) => el.textContent === softwareList()[index])\n                        .classList.add('active');\n                } else {\n                    setSoftware((software) => [...software, lowerOther]);\n                }\n                otherSoftwareRef.current.value = '';\n            }\n            setDirty();\n            setMessage('Are you sure you want to leave this page?');\n            e.preventDefault();\n        }\n    };\n    const onChange = (e) => {\n        const { name, value } = e.target;\n        setInfo({ ...info, [name]: value });\n        setDirty();\n        setMessage('Are you sure you want to leave this page?');\n    };\n    const onSubmit = (e) => {\n        e.preventDefault();\n        if (\n            JSON.stringify(info) === JSON.stringify(initialInfo) ||\n            specialty.length === 0 ||\n            software.length === 0\n        ) {\n            setAlert('', 'Please fill-in the required boxes to Proceed.');\n        } else {\n            const data = {\n                ...info,\n                specialty,\n                software,\n            };\n            addJob(data);\n            setInfo(initialInfo);\n            setSpecialty([]);\n            setSoftware([]);\n            setPristine();\n            setSubmit(true);\n        }\n    };\n\n    useEffect(() => {\n        if (JSON.stringify(info) === JSON.stringify(initialInfo)) {\n            setDirty();\n            setMessage('Are you sure you want to leave this page?');\n        }\n\n        if (submit) {\n            setSubmit(false);\n            setStep(2);\n            history.push({\n                pathname: '/draft-job',\n                search: 'step=2',\n            });\n        }\n\n        // eslint-disable-next-line\n    }, [info, submit]);\n    return (\n        <div className=\"step-1\">\n            {Prompt}\n            <form className=\"form\" onSubmit={onSubmit}>\n                <div className=\"row\">\n                    <div className=\"col-lg-12\">\n                        <div className=\"row\">\n                            <div className=\"col-sm-6\">\n                                <div className=\"form-row\">\n                                    <div className=\"col-lg-3\">\n                                        <label\n                                            htmlFor=\"titleInput\"\n                                            className=\"form-label\"\n                                        >\n                                            Job Title\n                                        </label>\n                                    </div>\n                                    <div className=\"col-lg-9\">\n                                        <input\n                                            type=\"text\"\n                                            name=\"title\"\n                                            id=\"titleInput\"\n                                            className=\"form-control input\"\n                                            onChange={onChange}\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"col-sm-6\">\n                                <div className=\"form-row mt-4 specialty\">\n                                    <div className=\"col-lg-3\">\n                                        <label\n                                            htmlFor=\"specialtyInput\"\n                                            className=\"form-label\"\n                                        >\n                                            Specialty\n                                        </label>\n                                        <p className=\"subtitle\">\n                                            Atleast (3) three skills\n                                        </p>\n                                    </div>\n                                    <div className=\"col-lg-9\">\n                                        <div className=\"form-row list\">\n                                            {generateSpecialty()}\n                                        </div>\n                                        <div className=\"form-group specialty-line-break\">\n                                            <input\n                                                type=\"text\"\n                                                name=\"otherSpecialty\"\n                                                className=\"form-control input mt-3\"\n                                                placeholder=\"Other specify\"\n                                                onKeyPress={\n                                                    onkeyPressOtherSpecialty\n                                                }\n                                                ref={otherSpecialtyRef}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <hr />\n                                <div className=\"form-row\">\n                                    {specialty.length === 0 ? (\n                                        <p className=\"subtitle desc\">\n                                            This section will display on what\n                                            you added from Specialty section\n                                        </p>\n                                    ) : (\n                                        specialty.map((e, i) => (\n                                            <Specialty\n                                                key={i}\n                                                value={e}\n                                                index={i}\n                                                onSpecialtyClose={\n                                                    onSpecialtyClose\n                                                }\n                                            />\n                                        ))\n                                    )}\n                                </div>\n                            </div>\n                            <div className=\"col-sm-6\">\n                                <div className=\"form-row mt-4 software\">\n                                    <div className=\"col-lg-3\">\n                                        <label\n                                            htmlFor=\"softwareInput\"\n                                            className=\"form-label\"\n                                        >\n                                            Software Use\n                                        </label>\n                                        <p className=\"subtitle\">\n                                            Atleast (3) three skills\n                                        </p>\n                                    </div>\n                                    <div className=\"col-lg-9\">\n                                        <div className=\"form-row list\">\n                                            {generateSoftware()}\n                                        </div>\n                                        <div className=\"form-group\">\n                                            <input\n                                                type=\"text\"\n                                                name=\"otherSoftware\"\n                                                className=\"form-control input mt-3\"\n                                                placeholder=\"Other specify\"\n                                                onKeyPress={\n                                                    onkeyPressOtherSoftware\n                                                }\n                                                ref={otherSoftwareRef}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <hr />\n                                <div className=\"form-row\">\n                                    {software.length === 0 ? (\n                                        <p className=\"subtitle desc\">\n                                            This section will display on what\n                                            you added from Software Use section\n                                        </p>\n                                    ) : (\n                                        software.map((e, i) => (\n                                            <Software\n                                                key={i}\n                                                value={e}\n                                                index={i}\n                                                onSoftwareClose={\n                                                    onSoftwareClose\n                                                }\n                                            />\n                                        ))\n                                    )}\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"col-sm-3 offset-sm-9\">\n                                <input\n                                    type=\"submit\"\n                                    value=\"Proceed\"\n                                    className=\"btn btn-primary btn-block button\"\n                                />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </form>\n        </div>\n    );\n};\n\nStep1.propTypes = {\n    setAlert: PropTypes.func.isRequired,\n    addJob: PropTypes.func.isRequired,\n    setStep: PropTypes.func.isRequired,\n};\n\nexport default connect(null, { setAlert, addJob, setStep })(Step1);\n","import React, { useState, useEffect, useRef } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\n// Utils\nimport useUnsavedChangesWarning from './../../utils/useUnsavedChangesWarning';\n\n// Actions\nimport { setAlert } from './../../state/actions/alertAction';\nimport { addJob, setStep } from './../../state/actions/jobAction';\n\nconst Step2 = ({ setAlert, addJob, setStep, jobState: { step } }) => {\n    const [\n        Prompt,\n        setDirty,\n        setPristine,\n        setMessage,\n    ] = useUnsavedChangesWarning();\n\n    const history = useHistory();\n\n    const initialInfo = {\n        about: '',\n        remoteStaffExpectation: '',\n    };\n\n    const [roles, setRoles] = useState([]);\n    const [keyResponsibilities, setKeyResponsibilities] = useState([]);\n    const [responsibilities, setResponsibilities] = useState([]);\n    const [info, setInfo] = useState(initialInfo);\n    const [submit, setSubmit] = useState(false);\n    const [load, setLoad] = useState(true);\n\n    const { about, remoteStaffExpectation } = info;\n\n    const rolesRef = useRef(null);\n    const keyResponsibilitiesRef = useRef(null);\n    const responsibilitiesRef = useRef(null);\n\n    const onChange = (e) => {\n        const { name, value } = e.target;\n        setInfo({ ...info, [name]: value });\n    };\n\n    const onKeyPress = (e) => {\n        if (e.key === 'Enter') {\n            const { name } = e.target;\n            if (name === 'roles') {\n                const rolesVal = rolesRef.current.value;\n                if (rolesVal === '') {\n                    setAlert(\n                        '',\n                        'Please fill-in the required boxes to Proceed.'\n                    );\n                } else {\n                    setRoles((roles) => [...roles, rolesVal]);\n                    rolesRef.current.value = '';\n                }\n            } else if (name === 'keyResponsibilities') {\n                const keyResponsibilitiesVal =\n                    keyResponsibilitiesRef.current.value;\n                if (keyResponsibilitiesVal === '') {\n                    setAlert(\n                        '',\n                        'Please fill-in the required boxes to Proceed.'\n                    );\n                } else {\n                    setKeyResponsibilities((keyResponsibilities) => [\n                        ...keyResponsibilities,\n                        keyResponsibilitiesVal,\n                    ]);\n                    keyResponsibilitiesRef.current.value = '';\n                }\n            } else if (name === 'responsibilities') {\n                const responsibilitiesVal = responsibilitiesRef.current.value;\n                if (responsibilitiesVal === '') {\n                    setAlert(\n                        '',\n                        'Please fill-in the required boxes to Proceed.'\n                    );\n                } else {\n                    setResponsibilities((responsibilities) => [\n                        ...responsibilities,\n                        responsibilitiesVal,\n                    ]);\n                    responsibilitiesRef.current.value = '';\n                }\n            }\n            setDirty();\n            setMessage('Are you sure you want to leave this page?');\n            e.preventDefault();\n        }\n    };\n\n    const itemClose = (field, index) => {\n        if (field === 'roles') {\n            setRoles((roles) => [\n                ...roles.filter((x) => roles.indexOf(x) !== index),\n            ]);\n        } else if (field === 'keyResponsibilities') {\n            setKeyResponsibilities((keyResponsibilities) => [\n                ...keyResponsibilities.filter(\n                    (x) => keyResponsibilities.indexOf(x) !== index\n                ),\n            ]);\n        } else if (field === 'responsibilities') {\n            setResponsibilities((responsibilities) => [\n                ...responsibilities.filter(\n                    (x) => responsibilities.indexOf(x) !== index\n                ),\n            ]);\n        }\n    };\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n        if (\n            roles.length === 0 ||\n            keyResponsibilities.length === 0 ||\n            responsibilities.length === 0 ||\n            about === '' ||\n            remoteStaffExpectation === ''\n        ) {\n            setAlert('', 'Please fill-in the required boxes to Proceed.');\n        } else {\n            addJob({\n                about,\n                roles,\n                keyResponsibilities,\n                responsibilities,\n                remoteStaffExpectation,\n            });\n            setInfo(initialInfo);\n            setRoles([]);\n            setKeyResponsibilities([]);\n            setResponsibilities([]);\n            setSubmit(true);\n            setPristine();\n        }\n    };\n\n    useEffect(() => {\n        if (load) {\n            if (step !== 2) {\n                setAlert(\n                    '/',\n                    'You are not authorize to go in this page. Please start at Step 1'\n                );\n            }\n            setLoad(false);\n        }\n        if (JSON.stringify(info) === JSON.stringify(initialInfo)) {\n            setDirty();\n            setMessage('Are you sure you want to leave this page?');\n        }\n\n        if (submit) {\n            setSubmit(false);\n            setStep(3);\n            history.push({\n                pathname: '/draft-job',\n                search: 'step=3',\n            });\n        }\n    }, [submit, info, load]);\n\n    return (\n        <div className=\"step-2\">\n            {Prompt}\n            <form className=\"form\" onSubmit={onSubmit}>\n                <div className=\"row\">\n                    <div className=\"col-lg-6 offset-lg-3\">\n                        <h6 className=\"title\">About the job</h6>\n                        <div className=\"form-group\">\n                            <label\n                                for=\"aboutInput\"\n                                style={{\n                                    color: '#606060',\n                                    fontWeight: 500,\n                                    margin: '10px 0',\n                                }}\n                            >\n                                Job Description\n                            </label>\n                            <textarea\n                                name=\"about\"\n                                rows=\"5\"\n                                className=\"form-control input\"\n                                onChange={onChange}\n                                value={about}\n                            ></textarea>\n                        </div>\n                        <div className=\"clearfix\">\n                            <hr className=\"line-break\" />\n                        </div>\n                        <div className=\"form-group\">\n                            <label for=\"rolesInput\" className=\"form-label\">\n                                Roles\n                            </label>\n                            <div className=\"position-relative\">\n                                <input\n                                    type=\"text\"\n                                    id=\"rolesInput\"\n                                    className=\"form-control input\"\n                                    name=\"roles\"\n                                    onKeyPress={onKeyPress}\n                                    ref={rolesRef}\n                                />\n                                <i className=\"fas fa-plus\"></i>\n                            </div>\n                            <ul className=\"roles-list\">\n                                {roles.length > 0 &&\n                                    roles.map((e, i) => (\n                                        <li key={i}>\n                                            <span className=\"roles-item\">\n                                                {e}\n                                                <span\n                                                    className=\"roles-close\"\n                                                    onClick={() =>\n                                                        itemClose('roles', i)\n                                                    }\n                                                >\n                                                    x\n                                                </span>\n                                            </span>\n                                        </li>\n                                    ))}\n                            </ul>\n                        </div>\n                        <div className=\"clearfix\">\n                            <hr className=\"line-break\" />\n                        </div>\n                        <div className=\"form-group\">\n                            <label\n                                for=\"keyResponsibilitiesInput\"\n                                className=\"form-label\"\n                            >\n                                Key Responsibilities\n                            </label>\n                            <div className=\"position-relative\">\n                                <input\n                                    type=\"text\"\n                                    id=\"keyResponsibilitiesInput\"\n                                    className=\"form-control input\"\n                                    name=\"keyResponsibilities\"\n                                    onKeyPress={onKeyPress}\n                                    ref={keyResponsibilitiesRef}\n                                />\n                                <i className=\"fas fa-plus\"></i>\n                            </div>\n                            <ul className=\"key-responsibilities-list\">\n                                {keyResponsibilities.length > 0 &&\n                                    keyResponsibilities.map((e, i) => (\n                                        <li key={i}>\n                                            <span className=\"key-responsibilities-item\">\n                                                {e}\n                                                <span\n                                                    className=\"key-responsibilities-close\"\n                                                    onClick={() =>\n                                                        itemClose(\n                                                            'keyResponsibilities',\n                                                            i\n                                                        )\n                                                    }\n                                                >\n                                                    x\n                                                </span>\n                                            </span>\n                                        </li>\n                                    ))}\n                            </ul>\n                        </div>\n                        <div className=\"clearfix\">\n                            <hr className=\"line-break\" />\n                        </div>\n                        <div className=\"form-group\">\n                            <label\n                                for=\"responsibilitiesInput\"\n                                className=\"form-label\"\n                            >\n                                Responsibilities\n                            </label>\n                            <div className=\"position-relative\">\n                                <input\n                                    type=\"text\"\n                                    id=\"responsibilitiesInput\"\n                                    className=\"form-control input\"\n                                    name=\"responsibilities\"\n                                    onKeyPress={onKeyPress}\n                                    ref={responsibilitiesRef}\n                                />\n                                <i className=\"fas fa-plus\"></i>\n                            </div>\n                            <ul className=\"responsibilities-list\">\n                                {responsibilities.length > 0 &&\n                                    responsibilities.map((e, i) => (\n                                        <li key={i}>\n                                            <span className=\"responsibilities-item\">\n                                                {e}\n                                                <span\n                                                    className=\"responsibilities-close\"\n                                                    onClick={() =>\n                                                        itemClose(\n                                                            'responsibilities',\n                                                            i\n                                                        )\n                                                    }\n                                                >\n                                                    x\n                                                </span>\n                                            </span>\n                                        </li>\n                                    ))}\n                            </ul>\n                        </div>\n                        <div className=\"clearfix\">\n                            <hr className=\"line-break\" />\n                        </div>\n                        <div className=\"form-group\">\n                            <label\n                                for=\"remoteStaffExpectationInput\"\n                                className=\"form-label\"\n                            >\n                                Remote Staff Expectation\n                            </label>\n                            <textarea\n                                rows=\"5\"\n                                id=\"remoteStaffExpectationInput\"\n                                className=\"form-control input\"\n                                name=\"remoteStaffExpectation\"\n                                onChange={onChange}\n                                value={remoteStaffExpectation}\n                            ></textarea>\n                        </div>\n                        <div className=\"form-group\">\n                            <div className=\"row\">\n                                <div className=\"col-lg-4 offset-lg-8\">\n                                    <input\n                                        type=\"submit\"\n                                        className=\"btn button btn-block mt-5\"\n                                        value=\"One more to go\"\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </form>\n        </div>\n    );\n};\n\nStep2.propTypes = {\n    setAlert: PropTypes.func.isRequired,\n    addJob: PropTypes.func.isRequired,\n    setStep: PropTypes.func.isRequired,\n    jobState: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n    jobState: state.jobState,\n});\n\nexport default connect(mapStateToProps, { setAlert, addJob, setStep })(Step2);\n","import React, { useState, useEffect, Fragment, useRef } from 'react';\nimport { Modal } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\n// Actions\nimport { addJob } from './../../state/actions/jobAction';\nimport { setAlert } from './../../state/actions/alertAction';\n\n// Components\nimport { availabilityList } from './../../list/Availability';\n\nconst SummaryModal = ({\n    isShow,\n    isHide,\n    addJob,\n    setAlert,\n    jobState: { job },\n    submit,\n}) => {\n    const initialInfo = {\n        title: '',\n        specialty: [],\n        software: [],\n        about: '',\n        roles: [],\n        keyResponsibilities: [],\n        responsibilities: [],\n        remoteStaffExpectation: '',\n        availability: '',\n        expectedSalary: '',\n        currency: '',\n    };\n\n    const [show, setShow] = useState(false);\n    const [showStep, setShowStep] = useState(0);\n    const [specialtyVal, setSpecialtyVal] = useState('');\n    const [info, setInfo] = useState(initialInfo);\n    const [rolesInput, setRolesInput] = useState([]);\n    const [keyResponsibilitiesInput, setKeyResponsibilitiesInput] = useState(\n        []\n    );\n    const [responsibilitiesInput, setResponsibilitiesInput] = useState([]);\n\n    const rolesRef = useRef(null);\n    const keyResponsibilitiesRef = useRef(null);\n    const responsibilitiesRef = useRef(null);\n\n    const handleClose = () => {\n        setShow(false);\n        isHide();\n    };\n    const handleShow = () => setShow(true);\n\n    const {\n        title,\n        specialty,\n        software,\n        about,\n        roles,\n        keyResponsibilities,\n        responsibilities,\n        remoteStaffExpectation,\n        availability,\n        expectedSalary,\n        currency,\n    } = job;\n\n    const onKeyPress = (e) => {\n        if (e.key === 'Enter') {\n            const { name } = e.target;\n            if (name === 'roles') {\n                const rolesVal = rolesRef.current.value;\n                if (rolesVal === '') {\n                    setAlert(\n                        '',\n                        'Please fill-in the required boxes to Proceed.'\n                    );\n                } else {\n                    setRolesInput((rolesInput) => [...rolesInput, rolesVal]);\n                    rolesRef.current.value = '';\n                }\n            } else if (name === 'keyResponsibilities') {\n                const keyResponsibilitiesVal =\n                    keyResponsibilitiesRef.current.value;\n                if (keyResponsibilitiesVal === '') {\n                    setAlert(\n                        '',\n                        'Please fill-in the required boxes to Proceed.'\n                    );\n                } else {\n                    setKeyResponsibilitiesInput((keyResponsibilitiesInput) => [\n                        ...keyResponsibilitiesInput,\n                        keyResponsibilitiesVal,\n                    ]);\n                    keyResponsibilitiesRef.current.value = '';\n                }\n            } else if (name === 'responsibilities') {\n                const responsibilitiesVal = responsibilitiesRef.current.value;\n                if (responsibilitiesVal === '') {\n                    setAlert(\n                        '',\n                        'Please fill-in the required boxes to Proceed.'\n                    );\n                } else {\n                    setResponsibilitiesInput((responsibilitiesInput) => [\n                        ...responsibilitiesInput,\n                        responsibilitiesVal,\n                    ]);\n                    responsibilitiesRef.current.value = '';\n                }\n            }\n            e.preventDefault();\n        }\n    };\n\n    const itemClose = (field, index) => {\n        if (field === 'roles') {\n            setRolesInput((rolesInput) => [\n                ...rolesInput.filter((x) => rolesInput.indexOf(x) !== index),\n            ]);\n        } else if (field === 'keyResponsibilities') {\n            setKeyResponsibilitiesInput((keyResponsibilitiesInput) => [\n                ...keyResponsibilitiesInput.filter(\n                    (x) => keyResponsibilitiesInput.indexOf(x) !== index\n                ),\n            ]);\n        } else if (field === 'responsibilities') {\n            setResponsibilitiesInput((responsibilitiesInput) => [\n                ...responsibilitiesInput.filter(\n                    (x) => responsibilitiesInput.indexOf(x) !== index\n                ),\n            ]);\n        }\n    };\n\n    const editClick = (step) => {\n        setShowStep(step);\n        setInfo({\n            ...info,\n            title,\n            specialty,\n            software,\n            about,\n            remoteStaffExpectation,\n            availability,\n            expectedSalary,\n            currency,\n        });\n        setRolesInput(roles);\n        setKeyResponsibilitiesInput(keyResponsibilities);\n        setResponsibilitiesInput(responsibilities);\n    };\n\n    const onChange = (e) => {\n        const { name, value } = e.target;\n\n        if (name === 'specialty' || name === 'software') {\n            setInfo({ ...info, [name]: value.split(', ') });\n        } else {\n            setInfo({ ...info, [name]: value });\n        }\n    };\n\n    const updateClick = (step) => {\n        addJob({\n            ...info,\n            roles: rolesInput,\n            keyResponsibilities: keyResponsibilitiesInput,\n            responsibilities: responsibilitiesInput,\n        });\n        setShowStep(0);\n    };\n\n    useEffect(() => {\n        if (isShow) {\n            handleShow();\n        }\n\n        // eslint-disable-next-line\n    }, [isShow, job]);\n\n    return (\n        <Modal\n            show={show}\n            onHide={handleClose}\n            backdrop=\"static\"\n            keyboard={false}\n            size=\"xl\"\n            className=\"preview-job\"\n        >\n            <Modal.Header closeButton>\n                <Modal.Title>Draft a Job Summary</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <div className=\"container-fluid\">\n                    <div className=\"row\">\n                        <div className=\"col-lg-5 line-break-v\">\n                            <div className=\"mb-3\">\n                                <div className=\"mb-4\">\n                                    <div className=\" d-flex justify-content-between\">\n                                        <p\n                                            className=\"subtitle\"\n                                            style={{ color: '#606060' }}\n                                        >\n                                            Step 1\n                                        </p>\n                                        {showStep === 1 ? (\n                                            <a\n                                                href=\"#\"\n                                                id=\"editStep1\"\n                                                className=\"edit-link\"\n                                                onClick={(e) => {\n                                                    e.preventDefault();\n                                                    updateClick(1);\n                                                }}\n                                            >\n                                                Save\n                                            </a>\n                                        ) : (\n                                            <a\n                                                href=\"#\"\n                                                id=\"editStep1\"\n                                                className=\"edit-link\"\n                                                onClick={(e) => {\n                                                    e.preventDefault();\n                                                    editClick(1);\n                                                }}\n                                            >\n                                                Edit\n                                            </a>\n                                        )}\n                                    </div>\n                                    <div className=\"line-break\"></div>\n                                </div>\n                                <h6 className=\"title\">Job Title</h6>\n                                <div className=\"row\">\n                                    <div className=\"col-lg-4\">\n                                        <p className=\"subtitle\">Job Title</p>\n                                    </div>\n                                    <div className=\"col-lg-8\">\n                                        {showStep === 1 ? (\n                                            <input\n                                                type=\"text\"\n                                                name=\"title\"\n                                                className=\"form-control input mb-1\"\n                                                onChange={onChange}\n                                                value={info.title}\n                                            />\n                                        ) : (\n                                            <span className=\"item\" name=\"title\">\n                                                {title}\n                                            </span>\n                                        )}\n                                    </div>\n                                </div>\n                                <div className=\"row\">\n                                    <div className=\"col-lg-4\">\n                                        <p className=\"subtitle\">Specialty</p>\n                                    </div>\n                                    <div className=\"col-lg-8\">\n                                        {showStep === 1 ? (\n                                            <input\n                                                type=\"text\"\n                                                name=\"specialty\"\n                                                className=\"form-control input mb-1\"\n                                                onChange={onChange}\n                                                value={info.specialty.join(\n                                                    ', '\n                                                )}\n                                            />\n                                        ) : (\n                                            <span\n                                                className=\"item\"\n                                                name=\"specialty\"\n                                            >\n                                                {specialty.join(', ')}\n                                            </span>\n                                        )}\n                                    </div>\n                                </div>\n                                <div className=\"row\">\n                                    <div className=\"col-lg-4\">\n                                        <p className=\"subtitle\">Software Use</p>\n                                    </div>\n                                    <div className=\"col-lg-8\">\n                                        {showStep === 1 ? (\n                                            <input\n                                                type=\"text\"\n                                                name=\"software\"\n                                                className=\"form-control input mb-1\"\n                                                onChange={onChange}\n                                                value={info.software.join(', ')}\n                                            />\n                                        ) : (\n                                            <span\n                                                className=\"item\"\n                                                name=\"software\"\n                                            >\n                                                {software.join(', ')}\n                                            </span>\n                                        )}\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"mb-3\">\n                                <div className=\"mb-4\">\n                                    <div className=\" d-flex justify-content-between\">\n                                        <p\n                                            className=\"subtitle\"\n                                            style={{ color: '#606060' }}\n                                        >\n                                            Step 3\n                                        </p>\n                                        {showStep === 3 ? (\n                                            <a\n                                                href=\"#\"\n                                                id=\"editStep3\"\n                                                className=\"edit-link\"\n                                                onClick={(e) => {\n                                                    e.preventDefault();\n                                                    updateClick(3);\n                                                }}\n                                            >\n                                                Save\n                                            </a>\n                                        ) : (\n                                            <a\n                                                href=\"#\"\n                                                id=\"editStep3\"\n                                                className=\"edit-link\"\n                                                onClick={(e) => {\n                                                    e.preventDefault();\n                                                    editClick(3);\n                                                }}\n                                            >\n                                                Edit\n                                            </a>\n                                        )}\n                                    </div>\n                                    <div className=\"line-break\"></div>\n                                </div>\n                                <h6 className=\"title\">\n                                    Are you looking to hire?\n                                </h6>\n                                <div className=\"row\">\n                                    <div className=\"col-lg-4\">\n                                        <p className=\"subtitle\">\n                                            Willing to work\n                                        </p>\n                                    </div>\n                                    <div className=\"col-lg-8\">\n                                        {showStep === 3 ? (\n                                            <select\n                                                name=\"availability\"\n                                                className=\"form-control input mb-1\"\n                                                onChange={onChange}\n                                                value={info.availability}\n                                            >\n                                                {availabilityList().map(\n                                                    (e, i) => (\n                                                        <option\n                                                            value={e}\n                                                            key={i}\n                                                        >\n                                                            {e}\n                                                        </option>\n                                                    )\n                                                )}\n                                            </select>\n                                        ) : (\n                                            <span\n                                                className=\"item\"\n                                                name=\"availability\"\n                                            >\n                                                {availability}\n                                            </span>\n                                        )}\n                                    </div>\n                                </div>\n                                <div className=\"row\">\n                                    <div className=\"col-lg-4\">\n                                        <p className=\"subtitle\">\n                                            Expected Salary\n                                        </p>\n                                    </div>\n                                    <div className=\"col-lg-8\">\n                                        {showStep === 3 ? (\n                                            <div className=\"form-inline\">\n                                                <input\n                                                    type=\"text\"\n                                                    name=\"expectedSalary\"\n                                                    className=\"form-control input mr-auto mb-1\"\n                                                    onChange={onChange}\n                                                    value={info.expectedSalary}\n                                                />\n                                                <select\n                                                    name=\"currency\"\n                                                    className=\"form-control input mb-1\"\n                                                    onChange={onChange}\n                                                    value={info.currency}\n                                                >\n                                                    <option value=\"USD\">\n                                                        USD\n                                                    </option>\n                                                </select>\n                                            </div>\n                                        ) : (\n                                            <Fragment>\n                                                {' '}\n                                                <span\n                                                    className=\"item\"\n                                                    name=\"expectedSalary\"\n                                                >\n                                                    {expectedSalary}\n                                                </span>{' '}\n                                                <span\n                                                    className=\"item\"\n                                                    name=\"currency\"\n                                                >\n                                                    {currency}\n                                                </span>\n                                            </Fragment>\n                                        )}\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"col-lg-7\">\n                            <div className=\"pl-3 mb-4\">\n                                <div className=\"mb-5\">\n                                    <div className=\"mb-4\">\n                                        <div className=\" d-flex justify-content-between\">\n                                            <p\n                                                className=\"subtitle\"\n                                                style={{ color: '#606060' }}\n                                            >\n                                                Step 2\n                                            </p>\n                                            {showStep === 2 ? (\n                                                <a\n                                                    href=\"#\"\n                                                    id=\"editStep2\"\n                                                    className=\"edit-link\"\n                                                    onClick={(e) => {\n                                                        e.preventDefault();\n                                                        updateClick(2);\n                                                    }}\n                                                >\n                                                    Save\n                                                </a>\n                                            ) : (\n                                                <a\n                                                    href=\"#\"\n                                                    id=\"editStep2\"\n                                                    className=\"edit-link\"\n                                                    onClick={(e) => {\n                                                        e.preventDefault();\n                                                        editClick(2);\n                                                    }}\n                                                >\n                                                    Edit\n                                                </a>\n                                            )}\n                                        </div>\n                                        <div className=\"line-break\"></div>\n                                    </div>\n                                    <h6 className=\"title\">About the Job</h6>\n                                    <div className=\"mb-3\">\n                                        <p className=\"subtitle\">\n                                            Job Description\n                                        </p>\n                                        {showStep === 2 ? (\n                                            <textarea\n                                                name=\"about\"\n                                                className=\"form-control input mb-1\"\n                                                onChange={onChange}\n                                                rows=\"5\"\n                                                value={info.about}\n                                            ></textarea>\n                                        ) : (\n                                            <span className=\"item\" name=\"about\">\n                                                {about}\n                                            </span>\n                                        )}\n                                    </div>\n                                    <div className=\"mb-3\">\n                                        <p className=\"subtitle\">Roles</p>\n                                        {showStep === 2 ? (\n                                            <Fragment>\n                                                <div className=\"position-relative\">\n                                                    <input\n                                                        type=\"text\"\n                                                        className=\"form-control input mb-1\"\n                                                        name=\"roles\"\n                                                        onKeyPress={onKeyPress}\n                                                        ref={rolesRef}\n                                                    />\n                                                    <i className=\"fas fa-plus\"></i>\n                                                </div>\n                                                <ul className=\"roles-list\">\n                                                    {rolesInput.length > 0 &&\n                                                        rolesInput.map(\n                                                            (e, i) => (\n                                                                <li key={i}>\n                                                                    <span className=\"roles-item\">\n                                                                        {e}\n                                                                        <span\n                                                                            className=\"roles-close\"\n                                                                            onClick={() =>\n                                                                                itemClose(\n                                                                                    'roles',\n                                                                                    i\n                                                                                )\n                                                                            }\n                                                                        >\n                                                                            x\n                                                                        </span>\n                                                                    </span>\n                                                                </li>\n                                                            )\n                                                        )}\n                                                </ul>\n                                            </Fragment>\n                                        ) : (\n                                            <div className=\"item\" name=\"roles\">\n                                                <ul className=\"list\">\n                                                    {roles.map((e, i) => (\n                                                        <li key={i}>{e}</li>\n                                                    ))}\n                                                </ul>\n                                            </div>\n                                        )}\n                                    </div>\n                                    <div className=\"mb-3\">\n                                        <p className=\"subtitle\">\n                                            Key Responsibilities\n                                        </p>\n                                        {showStep === 2 ? (\n                                            <Fragment>\n                                                <div className=\"position-relative\">\n                                                    <input\n                                                        type=\"text\"\n                                                        className=\"form-control input mb-1\"\n                                                        name=\"keyResponsibilities\"\n                                                        onKeyPress={onKeyPress}\n                                                        ref={\n                                                            keyResponsibilitiesRef\n                                                        }\n                                                    />\n                                                    <i className=\"fas fa-plus\"></i>\n                                                </div>\n                                                <ul className=\"key-responsibilities-list\">\n                                                    {keyResponsibilitiesInput.length >\n                                                        0 &&\n                                                        keyResponsibilitiesInput.map(\n                                                            (e, i) => (\n                                                                <li key={i}>\n                                                                    <span className=\"key-responsibilities-item\">\n                                                                        {e}\n                                                                        <span\n                                                                            className=\"key-responsibilities-close\"\n                                                                            onClick={() =>\n                                                                                itemClose(\n                                                                                    'keyResponsibilities',\n                                                                                    i\n                                                                                )\n                                                                            }\n                                                                        >\n                                                                            x\n                                                                        </span>\n                                                                    </span>\n                                                                </li>\n                                                            )\n                                                        )}\n                                                </ul>\n                                            </Fragment>\n                                        ) : (\n                                            <div\n                                                className=\"item\"\n                                                name=\"keyResponsibilities\"\n                                            >\n                                                <ul className=\"list\">\n                                                    {keyResponsibilities.map(\n                                                        (e, i) => (\n                                                            <li key={i}>{e}</li>\n                                                        )\n                                                    )}\n                                                </ul>\n                                            </div>\n                                        )}\n                                    </div>\n                                    <div className=\"mb-3\">\n                                        <p className=\"subtitle\">\n                                            Responsibilities\n                                        </p>\n                                        {showStep === 2 ? (\n                                            <Fragment>\n                                                <div className=\"position-relative\">\n                                                    <input\n                                                        type=\"text\"\n                                                        className=\"form-control input mb-1\"\n                                                        name=\"responsibilities\"\n                                                        onKeyPress={onKeyPress}\n                                                        ref={\n                                                            responsibilitiesRef\n                                                        }\n                                                    />\n                                                    <i className=\"fas fa-plus\"></i>\n                                                </div>\n                                                <ul className=\"responsibilities-list\">\n                                                    {responsibilitiesInput.length >\n                                                        0 &&\n                                                        responsibilitiesInput.map(\n                                                            (e, i) => (\n                                                                <li key={i}>\n                                                                    <span className=\"responsibilities-item\">\n                                                                        {e}\n                                                                        <span\n                                                                            className=\"responsibilities-close\"\n                                                                            onClick={() =>\n                                                                                itemClose(\n                                                                                    'responsibilities',\n                                                                                    i\n                                                                                )\n                                                                            }\n                                                                        >\n                                                                            x\n                                                                        </span>\n                                                                    </span>\n                                                                </li>\n                                                            )\n                                                        )}\n                                                </ul>\n                                            </Fragment>\n                                        ) : (\n                                            <div\n                                                className=\"item\"\n                                                name=\"responsibilities\"\n                                            >\n                                                <ul className=\"list\">\n                                                    {responsibilities.map(\n                                                        (e, i) => (\n                                                            <li key={i}>{e}</li>\n                                                        )\n                                                    )}\n                                                </ul>\n                                            </div>\n                                        )}\n                                    </div>\n                                    <div className=\"mb-3\">\n                                        <p className=\"subtitle\">\n                                            Remote Staff Expectation\n                                        </p>\n                                        {showStep === 2 ? (\n                                            <textarea\n                                                name=\"remoteStaffExpectation\"\n                                                className=\"form-control input mb-1\"\n                                                onChange={onChange}\n                                                rows=\"5\"\n                                                value={\n                                                    info.remoteStaffExpectation\n                                                }\n                                            ></textarea>\n                                        ) : (\n                                            <span\n                                                className=\"item\"\n                                                name=\"remoteStaffExpectation\"\n                                            >\n                                                {remoteStaffExpectation}\n                                            </span>\n                                        )}\n                                    </div>\n                                </div>\n                                <div className=\"row\">\n                                    <div className=\"col-lg-6\">\n                                        <button\n                                            className=\"btn button btn-block cancel\"\n                                            onClick={handleClose}\n                                        >\n                                            Cancel\n                                        </button>\n                                    </div>\n                                    <div className=\"col-lg-6\">\n                                        <button\n                                            className=\"btn button btn-block submit\"\n                                            onClick={() => {\n                                                handleClose();\n                                                submit();\n                                            }}\n                                        >\n                                            Submit Now\n                                        </button>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </Modal.Body>\n        </Modal>\n    );\n};\n\nSummaryModal.propTypes = {\n    setAlert: PropTypes.func.isRequired,\n    addJob: PropTypes.func.isRequired,\n    jobState: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n    jobState: state.jobState,\n});\n\nexport default connect(mapStateToProps, { setAlert, addJob })(SummaryModal);\n","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\n// List\nimport { availabilityList } from './../../list/Availability';\n\n// Actions\nimport {\n    addJob,\n    submitJob,\n    setStep,\n    setSuccess,\n    clearError,\n} from '../../state/actions/jobAction';\nimport { setAlert } from '../../state/actions/alertAction';\nimport { clearUser } from './../../state/actions/userAction';\n\n// Components\nimport SummaryModal from './SummaryModal';\n\n// Utils\nimport useUnsavedChangesWarning from './../../utils/useUnsavedChangesWarning';\n\nconst Step3 = ({\n    addJob,\n    submitJob,\n    setAlert,\n    setStep,\n    setSuccess,\n    clearError,\n    clearUser,\n    jobState: { job, error, step, success },\n}) => {\n    const [\n        Prompt,\n        setDirty,\n        setPristine,\n        setMessage,\n    ] = useUnsavedChangesWarning();\n\n    const initialInfo = {\n        availability: 'Full Time',\n        expectedSalary: '',\n        currency: 'USD',\n    };\n\n    const [info, setInfo] = useState(initialInfo);\n    const [submit, setSubmit] = useState(false);\n    const [load, setLoad] = useState(true);\n    const [summaryModal, setSummaryModal] = useState(false);\n\n    const { availability, expectedSalary, currency } = info;\n\n    const onChange = (e) => {\n        const { name, value } = e.target;\n        setInfo({ ...info, [name]: value });\n        setDirty();\n        setMessage('Are you sure you want to leave this page?');\n    };\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n\n        if (availability === '' || expectedSalary === '' || currency === '') {\n            return setAlert(\n                '',\n                'Please fill-in the required boxes to Proceed.'\n            );\n        } else {\n            addJob({ availability, expectedSalary, currency });\n            setInfo(initialInfo);\n            setSummaryModal(true);\n        }\n    };\n\n    useEffect(() => {\n        if (load) {\n            if (step !== 3) {\n                setAlert(\n                    '/',\n                    'You are not authorize to go in this page. Please start at Step 1'\n                );\n            }\n            setLoad(false);\n        }\n\n        if (error) {\n            setAlert('', error.msg);\n            clearError();\n        }\n\n        if (success) {\n            localStorage.clear();\n            setAlert(\n                '/',\n                '<h2 class=\"title\">Thank you for drafting a job</h2><p class=\"subtitle\">We will call you within 72 hours to verify your profile</p>'\n            );\n            setSuccess();\n            setStep(0);\n            clearUser();\n        }\n    }, [success, error, load]);\n\n    return (\n        <div className=\"step-3\">\n            {summaryModal ? (\n                <SummaryModal\n                    isShow={summaryModal}\n                    isHide={() => setSummaryModal(!summaryModal)}\n                    submit={() => {\n                        submitJob(job);\n                        setPristine();\n                    }}\n                />\n            ) : null}\n            <div className=\"row\">\n                <div className=\"col-lg-6 offset-lg-3\">\n                    <form className=\"form\" onSubmit={onSubmit}>\n                        <div className=\"form-group\">\n                            <h5 className=\"title\">Are you looking to work?</h5>\n                            {availabilityList().map((e, i) => (\n                                <div className=\"form-check\" key={i}>\n                                    <input\n                                        type=\"radio\"\n                                        name=\"availability\"\n                                        id={`availability${i}`}\n                                        className=\"form-check-input input\"\n                                        value={e}\n                                        onChange={onChange}\n                                        checked={availability === e}\n                                    />\n                                    <label\n                                        htmlFor={`availability${i}`}\n                                        className=\"form-check-label\"\n                                    >\n                                        {e}\n                                    </label>\n                                </div>\n                            ))}\n                        </div>\n                        <div className=\"form-group\">\n                            <label className=\"form-label\">\n                                Expected Salary\n                            </label>\n                            <div className=\"form-inline\">\n                                <input\n                                    type=\"number\"\n                                    id=\"expectedSalaryInput\"\n                                    className=\"form-control input\"\n                                    name=\"expectedSalary\"\n                                    placeholder=\"per Hour\"\n                                    onChange={onChange}\n                                    value={expectedSalary}\n                                />\n                                <select\n                                    name=\"currency\"\n                                    className=\"form-control input\"\n                                    onChange={onChange}\n                                    value={currency}\n                                >\n                                    <option value=\"USD\">USD</option>\n                                </select>\n                            </div>\n                        </div>\n                        <div className=\"form-group\">\n                            <button className=\"btn btn-primary btn-block button\">\n                                Send & Post Job\n                            </button>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nStep3.propTypes = {\n    setAlert: PropTypes.func.isRequired,\n    addJob: PropTypes.func.isRequired,\n    submitJob: PropTypes.func.isRequired,\n    jobState: PropTypes.object.isRequired,\n    setStep: PropTypes.func.isRequired,\n    setSuccess: PropTypes.func.isRequired,\n    clearError: PropTypes.func.isRequired,\n    clearUser: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n    jobState: state.jobState,\n});\n\nexport default connect(mapStateToProps, {\n    setAlert,\n    addJob,\n    submitJob,\n    setStep,\n    setSuccess,\n    clearError,\n    clearUser,\n})(Step3);\n","import React, { useState } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport queryString from 'query-string';\nimport { Container } from 'react-bootstrap';\n\nimport Step1 from './DraftJob/Step1';\nimport Step2 from './DraftJob/Step2';\nimport Step3 from './DraftJob/Step3';\n\nconst DraftJob = () => {\n    const { search } = useLocation();\n    const { step } = queryString.parse(search);\n    const history = useHistory();\n\n    const renderStep = () => {\n        if (parseInt(step) === 1) {\n            return <Step1 />;\n        } else if (parseInt(step) === 2) {\n            return <Step2 />;\n        } else if (parseInt(step) === 3) {\n            return <Step3 />;\n        } else {\n            history.push({\n                pathname: `/draft-job`,\n                search: 'step=1',\n            });\n        }\n    };\n\n    return (\n        <div id=\"draftJob\">\n            <Container>\n                <h2 className=\"title\">Draft a Job</h2>\n                <div className=\"clearfix\">\n                    <div className=\"line-break\"></div>\n                    <p className={`step ${step >= 1 ? 'active' : ''}`}>1</p>\n                    <p className={`step ${step >= 2 ? 'active' : ''}`}>2</p>\n                    <p className={`step ${step >= 3 ? 'active' : ''}`}>3</p>\n                </div>\n                {renderStep()}\n            </Container>\n        </div>\n    );\n};\n\nexport default DraftJob;\n","import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\n// Actions\nimport { addUser, clearUser, clearError } from './../state/actions/userAction';\nimport { setAlert } from './../state/actions/alertAction';\n\nconst AdminSignup = ({\n    addUser,\n    setAlert,\n    clearUser,\n    clearError,\n    userState: { user, error },\n}) => {\n    const initialInfo = {\n        firstName: '',\n        lastName: '',\n        email: '',\n        password: '',\n    };\n\n    const [info, setInfo] = useState(initialInfo);\n\n    const { firstName, lastName, email, password } = info;\n\n    const onChange = (e) => {\n        const { name, value } = e.target;\n        setInfo({ ...info, [name]: value });\n    };\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n\n        if (JSON.stringify(info) === JSON.stringify(initialInfo)) {\n            return setAlert(\n                '',\n                'Please fill-in the required boxes to Proceed.'\n            );\n        } else {\n            addUser({ ...info, type: 'Admin' });\n            setInfo(initialInfo);\n        }\n    };\n\n    useEffect(() => {\n        if (error) {\n            setAlert('', error.msg);\n            clearError();\n        }\n\n        if (user) {\n            setAlert('/', 'You can now login');\n            clearUser();\n        }\n    }, [user, error]);\n\n    return (\n        <div style={{ height: '85vh' }}>\n            <div className=\"container h-100\">\n                <div className=\"row h-100 align-items-center\">\n                    <div className=\"col-md-6 offset-md-3\">\n                        <form onSubmit={onSubmit} className=\"w-75 mx-auto\">\n                            <h1 className=\"text-center\">Admin Register</h1>\n                            <div className=\"form-group\">\n                                <label\n                                    htmlFor=\"firstNameInput\"\n                                    className=\"form-label\"\n                                >\n                                    First Name\n                                </label>\n                                <input\n                                    type=\"text\"\n                                    id=\"firstNameInput\"\n                                    name=\"firstName\"\n                                    className=\"form-control input\"\n                                    onChange={onChange}\n                                    value={firstName}\n                                />\n                            </div>\n                            <div className=\"form-group\">\n                                <label\n                                    htmlFor=\"lastNameInput\"\n                                    className=\"form-label\"\n                                >\n                                    Last Name\n                                </label>\n                                <input\n                                    type=\"text\"\n                                    id=\"lastNameInput\"\n                                    name=\"lastName\"\n                                    className=\"form-control input\"\n                                    onChange={onChange}\n                                    value={lastName}\n                                />\n                            </div>\n                            <div className=\"form-group\">\n                                <label\n                                    htmlFor=\"emailInput\"\n                                    className=\"form-label\"\n                                >\n                                    Email\n                                </label>\n                                <input\n                                    type=\"email\"\n                                    id=\"emailInput\"\n                                    name=\"email\"\n                                    className=\"form-control input\"\n                                    onChange={onChange}\n                                    value={email}\n                                />\n                            </div>\n                            <div className=\"form-group\">\n                                <label\n                                    htmlFor=\"passwordInput\"\n                                    className=\"form-label\"\n                                >\n                                    Password\n                                </label>\n                                <input\n                                    type=\"password\"\n                                    name=\"password\"\n                                    id=\"passwordInput\"\n                                    className=\"form-control input\"\n                                    onChange={onChange}\n                                    value={password}\n                                />\n                            </div>\n                            <input\n                                type=\"submit\"\n                                value=\"Submit\"\n                                className=\"btn btn-primary btn-block button\"\n                            />\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nAdminSignup.propTypes = {\n    addUser: PropTypes.func.isRequired,\n    setAlert: PropTypes.func.isRequired,\n    clearUser: PropTypes.func.isRequired,\n    clearError: PropTypes.func.isRequired,\n    userState: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n    userState: state.userState,\n});\n\nexport default connect(mapStateToProps, {\n    addUser,\n    setAlert,\n    clearUser,\n    clearError,\n})(AdminSignup);\n","import React, { useState, useEffect } from 'react';\nimport { useParams, useHistory, useLocation } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\n// Actions\nimport { setAlert } from './../../state/actions/alertAction';\nimport {\n    addUser,\n    clearError,\n    clearUser,\n} from './../../state/actions/userAction';\n\n// Utils\nimport useUnsavedChangesWarning from './../../utils/useUnsavedChangesWarning';\n\nconst Step1 = ({\n    setAlert,\n    addUser,\n    clearError,\n    clearUser,\n    userState: { user, error },\n}) => {\n    const [\n        Prompt,\n        setDirty,\n        setPristine,\n        setMessage,\n    ] = useUnsavedChangesWarning();\n\n    const { type } = useParams();\n\n    localStorage.clear();\n\n    const initialInfo = {\n        email: '',\n        password: '',\n        password2: '',\n    };\n    const [info, setInfo] = useState(initialInfo);\n\n    const { email, password, password2 } = info;\n\n    const onChange = (e) => {\n        const { name, value } = e.target;\n        setInfo({ ...info, [name]: value });\n        setDirty();\n        setMessage('Are you sure you want to leave this page?');\n    };\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n\n        if (email === '' || password === '' || password !== password2) {\n            return setAlert(\n                '',\n                'Please fill-in the required boxes to Proceed.'\n            );\n        } else {\n            addUser({ ...info, type: type.capitalize() });\n            setInfo(initialInfo);\n            setPristine();\n        }\n    };\n\n    useEffect(() => {\n        if (error) {\n            setAlert('', error.msg);\n            clearError();\n        }\n\n        if (user) {\n            setAlert(\n                '/',\n                'Kindly check <span>email</span> for confirmation to proceed.'\n            );\n            clearUser();\n        }\n    }, [user, error]);\n\n    return (\n        <div className=\"step-1\">\n            {Prompt}\n            <form className=\"form\" onSubmit={onSubmit}>\n                <div className=\"form-group\">\n                    <div className=\"form-row\">\n                        <div className=\"col-lg-3\">\n                            <label className=\"form-label\">Email</label>\n                        </div>\n                        <div className=\"col-lg-9\">\n                            <input\n                                type=\"email\"\n                                name=\"email\"\n                                className=\"form-control input\"\n                                onChange={onChange}\n                                value={email}\n                            />\n                        </div>\n                    </div>\n                </div>\n                <div className=\"form-group\">\n                    <div className=\"form-row\">\n                        <div className=\"col-lg-3\">\n                            <label className=\"form-label\">Password</label>\n                        </div>\n                        <div className=\"col-lg-9\">\n                            <input\n                                type=\"password\"\n                                name=\"password\"\n                                className=\"form-control input\"\n                                onChange={onChange}\n                                value={password}\n                            />\n                        </div>\n                    </div>\n                </div>\n                <div className=\"form-group\">\n                    <div className=\"form-row\">\n                        <div className=\"col-lg-3\">\n                            <label className=\"form-label\">\n                                Confirm Password\n                            </label>\n                        </div>\n                        <div className=\"col-lg-9\">\n                            <input\n                                type=\"password\"\n                                name=\"password2\"\n                                className=\"form-control input\"\n                                onChange={onChange}\n                                value={password2}\n                            />\n                        </div>\n                    </div>\n                </div>\n                <div className=\"form-group\">\n                    <div className=\"form-row\">\n                        <div className=\"col-lg-9 offset-lg-3\">\n                            <input\n                                type=\"submit\"\n                                value=\"Log In\"\n                                className=\"btn btn-primary btn-block button\"\n                            />\n                        </div>\n                    </div>\n                </div>\n            </form>\n        </div>\n    );\n};\n\nStep1.propTypes = {\n    setAlert: PropTypes.func.isRequired,\n    addUser: PropTypes.func.isRequired,\n    clearError: PropTypes.func.isRequired,\n    clearUser: PropTypes.func.isRequired,\n    userState: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n    userState: state.userState,\n});\n\nexport default connect(mapStateToProps, {\n    setAlert,\n    addUser,\n    clearError,\n    clearUser,\n})(Step1);\n","import React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\n// List\nimport { countryList } from './../../list/Country';\n\n// Actions\nimport { setAlert } from './../../state/actions/alertAction';\nimport { addEmployer, setStep } from './../../state/actions/employerAction';\n\n// Utils\nimport useUnsavedChangesWarning from './../../utils/useUnsavedChangesWarning';\n\nconst Step2 = ({ setAlert, addEmployer, setStep, employerState: { step } }) => {\n    const [\n        Prompt,\n        setDirty,\n        setPristine,\n        setMessage,\n    ] = useUnsavedChangesWarning();\n\n    const history = useHistory();\n\n    const initialInfo = {\n        firstName: '',\n        lastName: '',\n        contactNo: '',\n        country: 'Afghanistan',\n    };\n\n    const [info, setInfo] = useState(initialInfo);\n    const [load, setLoad] = useState(true);\n    const [submit, setSubmit] = useState(false);\n\n    const { firstName, lastName, contactNo, country } = info;\n\n    const onChange = (e) => {\n        const { name, value } = e.target;\n        setInfo({ ...info, [name]: value });\n        setDirty();\n        setMessage('Are you sure you want to leave this page?');\n    };\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n\n        if (\n            firstName === '' ||\n            lastName === '' ||\n            contactNo === '' ||\n            country === ''\n        ) {\n            return setAlert(\n                '',\n                'Please fill-in the required boxes to Proceed.'\n            );\n        } else {\n            addEmployer(info);\n            setInfo(initialInfo);\n            setPristine();\n            setSubmit(true);\n        }\n    };\n\n    useEffect(() => {\n        if (load) {\n            if (step !== 2) {\n                setAlert(\n                    '/',\n                    'You are not authorize to go in this page. Please start at Step 1'\n                );\n            }\n            setLoad(false);\n        }\n\n        if (submit) {\n            setStep(3);\n            history.push({\n                pathname: '/signup/employer',\n                search: 'step=3',\n            });\n        }\n    }, [load, submit]);\n\n    return (\n        <div className=\"step-2\">\n            {Prompt}\n            <form className=\"form\" onSubmit={onSubmit}>\n                <div className=\"form-group\">\n                    <div className=\"form-row\">\n                        <div className=\"col-lg-3\">\n                            <label className=\"form-label\">First Name</label>\n                        </div>\n                        <div className=\"col-lg-9\">\n                            <input\n                                type=\"text\"\n                                name=\"firstName\"\n                                className=\"form-control input\"\n                                onChange={onChange}\n                                value={firstName}\n                            />\n                        </div>\n                    </div>\n                </div>\n                <div className=\"form-group\">\n                    <div className=\"form-row\">\n                        <div className=\"col-lg-3\">\n                            <label className=\"form-label\">Last Name</label>\n                        </div>\n                        <div className=\"col-lg-9\">\n                            <input\n                                type=\"text\"\n                                name=\"lastName\"\n                                className=\"form-control input\"\n                                onChange={onChange}\n                                value={lastName}\n                            />\n                        </div>\n                    </div>\n                </div>\n                <div className=\"form-group\">\n                    <div className=\"form-row\">\n                        <div className=\"col-lg-3\">\n                            <label className=\"form-label\">Contact No.</label>\n                        </div>\n                        <div className=\"col-lg-9\">\n                            <input\n                                type=\"number\"\n                                name=\"contactNo\"\n                                className=\"form-control input\"\n                                onChange={onChange}\n                                value={contactNo}\n                            />\n                        </div>\n                    </div>\n                </div>\n                <div className=\"form-group\">\n                    <div className=\"form-row\">\n                        <div className=\"col-lg-3\">\n                            <label className=\"form-label\">Contact No.</label>\n                        </div>\n                        <div className=\"col-lg-9\">\n                            <select\n                                className=\"form-control input\"\n                                name=\"country\"\n                            >\n                                {countryList().map((e, i) => (\n                                    <option value={e} key={i}>\n                                        {e}\n                                    </option>\n                                ))}\n                            </select>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"form-group\">\n                    <div className=\"form-row\">\n                        <div className=\"col-lg-9 offset-lg-3\">\n                            <input\n                                type=\"submit\"\n                                value=\"Nextss\"\n                                className=\"btn btn-primary btn-block button\"\n                            />\n                        </div>\n                    </div>\n                </div>\n            </form>\n        </div>\n    );\n};\n\nStep2.propTypes = {\n    setAlert: PropTypes.func.isRequired,\n    addEmployer: PropTypes.func.isRequired,\n    setStep: PropTypes.func.isRequired,\n    employerState: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n    employerState: state.employerState,\n});\n\nexport default connect(mapStateToProps, {\n    setAlert,\n    addEmployer,\n    setStep,\n})(Step2);\n","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\n// Actions\nimport { setAlert } from './../../state/actions/alertAction';\nimport {\n    setStep,\n    submitEmployer,\n    setSuccess,\n    clearError,\n} from './../../state/actions/employerAction';\n\nconst Step3 = ({\n    setAlert,\n    setStep,\n    submitEmployer,\n    setSuccess,\n    clearError,\n    employerState: { employer, error, step, success },\n}) => {\n    const initialInfo = {\n        name: '',\n        position: '',\n        industry: '',\n        website: '',\n    };\n\n    const [info, setInfo] = useState(initialInfo);\n    const [load, setLoad] = useState(true);\n\n    const { name, position, industry, website } = info;\n\n    const onChange = (e) => {\n        const { name, value } = e.target;\n        setInfo({ ...info, [name]: value });\n    };\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n\n        if (\n            name === '' ||\n            position === '' ||\n            industry === '' ||\n            website === ''\n        ) {\n            return setAlert(\n                '',\n                'Please fill-in the required boxes to Proceed.'\n            );\n        } else {\n            submitEmployer({\n                ...employer,\n                company: { name, position, industry, website },\n            });\n            setInfo(initialInfo);\n        }\n    };\n\n    useEffect(() => {\n        if (load) {\n            if (step !== 3) {\n                setAlert(\n                    '/',\n                    'You are not authorize to go in this page. Please start at Step 1'\n                );\n            }\n            setLoad(false);\n        }\n\n        if (error) {\n            setAlert('', error.msg);\n            clearError();\n        }\n\n        if (success) {\n            setAlert('/draft-job', 'You can now draft a job');\n            setSuccess();\n            setStep(0);\n        }\n    }, [error, success, load]);\n\n    return (\n        <div className=\"step-3\">\n            <form className=\"form\" onSubmit={onSubmit}>\n                <div className=\"form-group\">\n                    <div className=\"form-row\">\n                        <div className=\"col-lg-3\">\n                            <label className=\"form-label\">Company</label>\n                        </div>\n                        <div className=\"col-lg-9\">\n                            <input\n                                type=\"text\"\n                                name=\"name\"\n                                className=\"form-control input\"\n                                onChange={onChange}\n                                value={name}\n                            />\n                        </div>\n                    </div>\n                </div>\n                <div className=\"form-group\">\n                    <div className=\"form-row\">\n                        <div className=\"col-lg-3\">\n                            <label className=\"form-label\">Position</label>\n                        </div>\n                        <div className=\"col-lg-9\">\n                            <input\n                                type=\"text\"\n                                name=\"position\"\n                                className=\"form-control input\"\n                                onChange={onChange}\n                                value={position}\n                            />\n                        </div>\n                    </div>\n                </div>\n                <div className=\"form-group\">\n                    <div className=\"form-row\">\n                        <div className=\"col-lg-3\">\n                            <label className=\"form-label\">Industry</label>\n                        </div>\n                        <div className=\"col-lg-9\">\n                            <input\n                                type=\"text\"\n                                name=\"industry\"\n                                className=\"form-control input\"\n                                onChange={onChange}\n                                value={industry}\n                            />\n                        </div>\n                    </div>\n                </div>\n                <div className=\"form-group\">\n                    <div className=\"form-row\">\n                        <div className=\"col-lg-3\">\n                            <label className=\"form-label\">Website</label>\n                        </div>\n                        <div className=\"col-lg-9\">\n                            <input\n                                type=\"text\"\n                                className=\"form-control input\"\n                                name=\"website\"\n                                onChange={onChange}\n                                value={website}\n                            />\n                        </div>\n                    </div>\n                </div>\n                <div className=\"form-group\">\n                    <div className=\"form-row\">\n                        <div className=\"col-lg-9 offset-lg-3\">\n                            <input\n                                type=\"submit\"\n                                value=\"Create Account\"\n                                className=\"btn btn-primary btn-block button\"\n                            />\n                        </div>\n                    </div>\n                </div>\n            </form>\n        </div>\n    );\n};\n\nStep3.propTypes = {\n    employerState: PropTypes.object.isRequired,\n    setAlert: PropTypes.func.isRequired,\n    setStep: PropTypes.func.isRequired,\n    submitEmployer: PropTypes.func.isRequired,\n    setSuccess: PropTypes.func.isRequired,\n    clearError: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n    employerState: state.employerState,\n});\n\nexport default connect(mapStateToProps, {\n    setAlert,\n    setStep,\n    submitEmployer,\n    setSuccess,\n    clearError,\n})(Step3);\n","import React from 'react';\nimport { useParams, useHistory, useLocation } from 'react-router-dom';\nimport queryString from 'query-string';\n\n// Components\nimport EmpStep1 from './Employer/Step1';\nimport EmpStep2 from './Employer/Step2';\nimport EmpStep3 from './Employer/Step3';\n\nconst Signup = () => {\n    const { type } = useParams();\n    const { search } = useLocation();\n    const { step } = queryString.parse(search);\n    const history = useHistory();\n\n    String.prototype.capitalize = function () {\n        return this.charAt(0).toUpperCase() + this.slice(1);\n    };\n\n    if (type !== 'employer' && type !== 'recruiter') {\n        history.push('/signup');\n    }\n\n    const renderSignup = () => {\n        if (parseInt(step) === 1) {\n            if (type === 'employer') {\n                return <EmpStep1 />;\n            }\n        } else if (parseInt(step) === 2) {\n            if (type === 'employer') {\n                return <EmpStep2 />;\n            }\n        } else if (parseInt(step) === 3) {\n            if (type === 'employer') {\n                return <EmpStep3 />;\n            }\n        } else {\n            history.push({\n                pathname: `/signup/${type}`,\n                search: 'step=1',\n            });\n        }\n    };\n\n    return (\n        <div id=\"signup\">\n            <div className=\"container\">\n                <div className=\"header\">\n                    <h2 className=\"title\">Signup for {type.capitalize()}</h2>\n                    <div className=\"line-break\" />\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-sm-6 offset-sm-3\">{renderSignup()}</div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Signup;\n","import React, { Fragment } from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nimport ScrollToTop from './components/ScrollToTop';\nimport Header from './layouts/Header';\nimport Footer from './layouts/Footer';\nimport Home from './pages/Home';\nimport Pricing from './pages/Pricing';\nimport ViewCandidates from './pages/ViewCandidates';\nimport CreateResume from './pages/CreateResume';\nimport CreateResumeRoute from './routing/CreateResumeRoute';\nimport Alert from './layouts/Alert';\nimport Verify from './components/Verify';\nimport NotFound from './pages/NotFound';\nimport Dashboard from './pages/Dashboard';\nimport Login from './pages/Login';\nimport LoadUser from './components/LoadUser';\nimport PrivateRoute from './routing/PrivateRoute';\nimport VerifyDashboard from './components/VerifyDashboard';\nimport VerifyViewCandidates from './components/VerifyViewCandidates';\nimport DraftJobRoute from './routing/DraftJobRoute';\nimport DraftJob from './pages/DraftJob';\nimport AdminSignup from './pages/AdminSignup';\nimport Signup from './pages/Signup';\nimport SignupRoute from './routing/SignupRoute';\n\nconst App = () => {\n    return (\n        <Provider store={store}>\n            <BrowserRouter>\n                <Fragment>\n                    <ScrollToTop />\n                    <LoadUser />\n                    <Alert />\n                    <Header />\n                    <Switch>\n                        <Route exact path=\"/\" component={Home} />\n                        <Route\n                            exact\n                            path=\"/view-candidates\"\n                            component={VerifyViewCandidates}\n                        />\n                        <Route\n                            path=\"/view-candidates/:menu\"\n                            component={ViewCandidates}\n                        />\n                        <Route path=\"/pricing\" component={Pricing} />\n                        <CreateResumeRoute\n                            path=\"/create-resume\"\n                            component={CreateResume}\n                        />\n                        <DraftJobRoute path=\"/draft-job\" component={DraftJob} />\n                        <Route path=\"/verify/:token\" component={Verify} />\n                        <PrivateRoute\n                            exact\n                            path=\"/dashboard\"\n                            component={VerifyDashboard}\n                        />\n                        <PrivateRoute\n                            path=\"/dashboard/:menu\"\n                            component={Dashboard}\n                        />\n                        <Route path=\"/login\" component={Login} />\n                        <Route path=\"/admin-signup\" component={AdminSignup} />\n                        <Route path=\"/signup/:type\" component={Signup} />\n                        <Route path=\"*\" component={NotFound} />\n                    </Switch>\n                    <Footer />\n                </Fragment>\n            </BrowserRouter>\n        </Provider>\n    );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/draftsource_logo.ce7555a1.svg\";"],"sourceRoot":""}